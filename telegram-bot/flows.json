[
    {
        "id": "93cb4937.6fc068",
        "type": "tab",
        "label": "Flow Inicial",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c1e7ebde.3e0b68",
        "type": "tab",
        "label": "NASA Notifications",
        "disabled": false,
        "info": ""
    },
    {
        "id": "128790f6.dee0df",
        "type": "tab",
        "label": "News",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5501c3cc.11327c",
        "type": "tab",
        "label": "Sandbox",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c644db46.3854c8",
        "type": "subflow",
        "name": "new fire",
        "info": "Input: A msg for geocode or a  message type location with:\nmsg.location.lon and msg.location.lon",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "730cf241.49734c"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "c6a40c11.dfc6b",
        "type": "subflow",
        "name": "volver",
        "info": "",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "b0495fbe.5ecca"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "156e20df.86399f",
        "type": "subflow",
        "name": "send location",
        "info": "Envía la localización al telegram",
        "in": [
            {
                "x": 140,
                "y": 160,
                "wires": [
                    {
                        "id": "a95a87ec.d0c648"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 160,
                "wires": [
                    {
                        "id": "748b9d33.3e7354",
                        "port": 0
                    }
                ]
            }
        ],
        "inputLabels": [
            "location.lat & lon"
        ]
    },
    {
        "id": "9968fcc5.ed33c",
        "type": "subflow",
        "name": "menu distancia",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "4a109a88.7389a4"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "76bd701f.29d0f",
        "type": "subflow",
        "name": "start",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "da7e1a7c.19d3c8"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "465e67f.6ebf598",
        "type": "subflow",
        "name": "start with delay",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "e864b674.6fd2c8"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "2b8628df.fdcca8",
        "type": "subflow",
        "name": "send notifications",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 240,
                "wires": [
                    {
                        "id": "d76ddf98.d3de9"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "2f0217a5.051978",
        "type": "subflow",
        "name": "false positive",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "17c09c20.9d4a84"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1380,
                "y": 220,
                "wires": [
                    {
                        "id": "7f8ce0c9.99ac4",
                        "port": 0
                    },
                    {
                        "id": "eab4c7fe.fd7828",
                        "port": 0
                    },
                    {
                        "id": "364970ea.3f564",
                        "port": 0
                    },
                    {
                        "id": "2b5fa53f.8b255a",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "e81a68fa.695e38",
        "type": "subflow",
        "name": "tsend",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "f3418b4a.16c128"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 40,
                "wires": [
                    {
                        "id": "dd683e99.7c126",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "4384af8e.a7409",
        "type": "subflow",
        "name": "lang",
        "info": "",
        "in": [
            {
                "x": 20,
                "y": 100,
                "wires": [
                    {
                        "id": "54cea7b0.f5f588"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2170.0000076293945,
                "y": 223.00000190734863,
                "wires": [
                    {
                        "id": "1586a4b5.782b9b",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "e6f3db8c.48eac8",
        "type": "subflow",
        "name": "ask lang",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 100,
                "wires": [
                    {
                        "id": "4091f971.ce23f8"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "6995c6a.1a0bf38",
        "type": "subflow",
        "name": "set i18n",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 60,
                "wires": [
                    {
                        "id": "5541b1d7.23da4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 60,
                "wires": [
                    {
                        "id": "5541b1d7.23da4",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "1bbd6687.58eae9",
        "type": "subflow",
        "name": "validate geo",
        "info": "",
        "in": [
            {
                "x": 120,
                "y": 80,
                "wires": [
                    {
                        "id": "c60831ef.7bc3a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 80,
                "wires": [
                    {
                        "id": "c60831ef.7bc3a",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "557e0255.d1220c",
        "type": "subflow",
        "name": "test in",
        "info": "",
        "in": [],
        "out": [
            {
                "x": 680,
                "y": 60,
                "wires": [
                    {
                        "id": "95b8009f.b410c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 680,
                "y": 120,
                "wires": [
                    {
                        "id": "95b8009f.b410c",
                        "port": 1
                    }
                ]
            },
            {
                "x": 680,
                "y": 180,
                "wires": [
                    {
                        "id": "95b8009f.b410c",
                        "port": 2
                    }
                ]
            }
        ],
        "outputLabels": [
            "/start",
            "/lang",
            "location, other"
        ]
    },
    {
        "id": "fe0c8b72.8a51a8",
        "type": "subflow",
        "name": "test out",
        "info": "",
        "in": [
            {
                "x": 80,
                "y": 60,
                "wires": [
                    {
                        "id": "dadeaa31.8d2c18"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 60,
                "wires": [
                    {
                        "id": "dadeaa31.8d2c18",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "11cb3f4d.6e0081",
        "type": "subflow",
        "name": "find new active fires",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "9ef9c4c5.a68d08"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 200,
                "wires": [
                    {
                        "id": "e548f509.8b1958",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1360,
                "y": 140,
                "wires": [
                    {
                        "id": "e548f509.8b1958",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "c8522537.c6f908",
        "type": "subflow",
        "name": "count new fire actives",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "8d910d3f.7ff39"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "3f0768a7.1fac78",
        "type": "subflow",
        "name": "count active fires",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "d8b00aa6.5027f8"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "95e78a8b.50a428",
        "type": "subflow",
        "name": "send noti to user",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 100,
                "wires": [
                    {
                        "id": "ca5f1316.5932c"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "66901439.f20abc",
        "type": "subflow",
        "name": "find fires of user",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "16d45a2d.d8bd56"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "f21ab878.9fd518",
        "type": "subflow",
        "name": "leave",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 80,
                "wires": [
                    {
                        "id": "e2c7bb0a.9c4f58"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "1f740501.0b8ccb",
        "type": "subflow",
        "name": "hash?",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "7141db39.a3c694"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 20,
                "wires": [
                    {
                        "id": "7141db39.a3c694",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "289c75f9.8cd11a",
        "type": "subflow",
        "name": "save subscription",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 80,
                "wires": [
                    {
                        "id": "d8654cba.a8be5"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "8903a5fd.4fbc88",
        "type": "subflow",
        "name": "find user by chatId",
        "info": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "aa9bd3df.c016b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 80,
                "wires": [
                    {
                        "id": "b36966af.102298",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "1409e32d.aacfbd",
        "type": "subflow",
        "name": "find subs",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "e2568d96.bbf41"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 120,
                "wires": [
                    {
                        "id": "97f74b45.1f64e8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "161177e4.37eca8",
        "type": "subflow",
        "name": "add weather",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "f672b9a9.7f30f8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "870dd05.0bd283",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "85e2a4b3.4947a8",
        "type": "subflow",
        "name": "find user by id",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "36073f85.3f7c9"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 960,
                "y": 120,
                "wires": [
                    {
                        "id": "bce62c6b.0dc38",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "bfeff5b6.e5f178",
        "type": "subflow",
        "name": "Write Fire Position",
        "info": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "4230490a.147bf8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1540,
                "y": 100,
                "wires": [
                    {
                        "id": "46ab5b3e.b67004",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "fc78b15f.c64b7",
        "type": "subflow",
        "name": "only one bot",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 40,
                "wires": [
                    {
                        "id": "9a280b29.7a7178"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 40,
                "wires": [
                    {
                        "id": "9a280b29.7a7178",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "cb92bddb.cd891",
        "type": "subflow",
        "name": "count fires to notif",
        "info": "",
        "in": [
            {
                "x": 80,
                "y": 60,
                "wires": [
                    {
                        "id": "39f436ba.2892aa"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "274b3b4f.3ee674",
        "type": "subflow",
        "name": "count disappeared fires ",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "41d766b4.a750d8"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "29f2a71d.f90dd8",
        "type": "subflow",
        "name": "count ftp-read-fires ",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "ca4baf0d.cf966"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "ed14151e.813358",
        "type": "subflow",
        "name": "last stats",
        "info": "",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "580930a4.dd3ed"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "62f56d4f.2eb0a4",
        "type": "subflow",
        "name": "count2",
        "info": "",
        "in": [
            {
                "x": 89.5,
                "y": 67,
                "wires": [
                    {
                        "id": "2e20e23c.e0ffee"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 713,
                "y": 69,
                "wires": [
                    {
                        "id": "de35b96d.e4d4f8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "3ca4f49b.662eec",
        "type": "subflow",
        "name": "find2",
        "info": "",
        "in": [
            {
                "x": 92.51741027832031,
                "y": 50.01054573059082,
                "wires": [
                    {
                        "id": "e65d93c8.07379"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 902.0174579620361,
                "y": 55.0106897354126,
                "wires": [
                    {
                        "id": "e998046d.aa8448",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "b80c15d3.8f06f8",
        "type": "subflow",
        "name": "generic updateOne",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 43,
                "wires": [
                    {
                        "id": "5fe814a0.c72d9c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 768.9999876022339,
                "y": 96.00000190734863,
                "wires": [
                    {
                        "id": "407d0b1.54cadf4",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "b08bc794.82abc8",
        "type": "subflow",
        "name": "upsertOne",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "dd1c0b95.b15b28"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 611.9999876022339,
                "y": 36.00000190734863,
                "wires": [
                    {
                        "id": "4b90978e.872578",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "5126d9b8.d9a858",
        "type": "subflow",
        "name": "updateOneNoUpset",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "7a967f49.d1777"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 663.9999876022339,
                "y": 45.00000190734863,
                "wires": [
                    {
                        "id": "5170075a.fb53e8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "1f94cade.30ea35",
        "type": "subflow",
        "name": "insertOne",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "4b9c39bc.5d0e08"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 750.0000076293945,
                "y": 131.9999885559082,
                "wires": [
                    {
                        "id": "74564777.4dfd18",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "f93d1a38.c43218",
        "type": "telegram bot",
        "z": "",
        "botname": "fuegos_bot",
        "usernames": "",
        "chatids": ""
    },
    {
        "id": "9f205dc2.bd858",
        "type": "google-api-config",
        "z": ""
    },
    {
        "id": "60f55fe6.6c729",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Tod@s contra el Fuego",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "dac4dde2.62c72",
        "type": "ui_tab",
        "z": "",
        "name": "Stats",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "601660c.cd104a",
        "type": "ui_group",
        "z": "",
        "name": "Estadísticas",
        "tab": "dac4dde2.62c72",
        "disp": true,
        "width": "6"
    },
    {
        "id": "103d89d5.f04ab6",
        "type": "persist-store",
        "z": "",
        "filename": "dayly-file-alerts.json",
        "interval": "60"
    },
    {
        "id": "2c23f46.8edd30c",
        "type": "persist-store",
        "z": "",
        "filename": "nasa-fire-active.json",
        "interval": "60"
    },
    {
        "id": "db913a18.f8bf88",
        "type": "persist-store",
        "z": "2b8628df.fdcca8",
        "filename": "near-neighbours.json",
        "interval": "60"
    },
    {
        "id": "cb34ee3.be2b31",
        "type": "persist-store",
        "z": "",
        "filename": "suscriptions-in-time.json",
        "interval": "60"
    },
    {
        "id": "488013b6.1183ec",
        "type": "Cache",
        "z": "",
        "name": "chatIdLang",
        "defaultTtl": "120",
        "checkPeriod": "100"
    },
    {
        "id": "9a28d188.bb94e",
        "type": "persist-store",
        "z": "c8522537.c6f908",
        "filename": "nasa-new-fire-actives.json",
        "interval": "60"
    },
    {
        "id": "d5287e69.2b449",
        "type": "mongodb2",
        "z": "11cb3f4d.6e0081",
        "uri": "mongodb://127.0.0.1:27017/fuegos",
        "name": "fires",
        "options": "{\"poolSize\": 10}",
        "parallelism": "-1"
    },
    {
        "id": "d5559ee5.960e2",
        "type": "mongodb2",
        "z": "",
        "uri": "mongodb://127.0.0.1:27017/fuegos",
        "name": "fires",
        "options": "{\"poolSize\": 10}",
        "parallelism": "-1"
    },
    {
        "id": "267e38ad.11f318",
        "type": "semaphore-config",
        "z": "",
        "name": "semaphore",
        "capacity": "1"
    },
    {
        "id": "da772a3d.b17c88",
        "type": "Cache",
        "z": "",
        "name": "userIdLang",
        "defaultTtl": "120",
        "checkPeriod": "100"
    },
    {
        "id": "fdb2fbe2.1f8a48",
        "type": "Cache",
        "z": "161177e4.37eca8",
        "name": "weather",
        "defaultTtl": "240",
        "checkPeriod": "0"
    },
    {
        "id": "7888b81c.30fa28",
        "type": "persist-store",
        "z": "",
        "filename": "users-in-time.json",
        "interval": "60"
    },
    {
        "id": "69bdf451.05197c",
        "type": "persist-store",
        "z": "",
        "filename": "comments-in-time.json",
        "interval": "60"
    },
    {
        "id": "372ec561.04074a",
        "type": "persist-store",
        "z": "",
        "filename": "comment-anon-in-time.json",
        "interval": "60"
    },
    {
        "id": "60b3c803.aa7258",
        "type": "persist-store",
        "z": "",
        "filename": "last-fire-detected.json",
        "interval": "60"
    },
    {
        "id": "2cac9837.f79ed8",
        "type": "persist-store",
        "z": "",
        "filename": "fires-to-notif.json",
        "interval": "60"
    },
    {
        "id": "684810a9.5bc6e",
        "type": "persist-store",
        "z": "",
        "filename": "disappeared-fires.json",
        "interval": "60"
    },
    {
        "id": "bc532db6.6386f",
        "type": "persist-store",
        "z": "",
        "filename": "ftp-read-fires.json",
        "interval": "60"
    },
    {
        "id": "a733588b.3d2d68",
        "type": "persist-store",
        "z": "",
        "filename": "notifications-in-time.json",
        "interval": "60"
    },
    {
        "id": "bdb6d01f.a399d",
        "type": "telegram command",
        "z": "93cb4937.6fc068",
        "name": "/start",
        "command": "/start",
        "bot": "f93d1a38.c43218",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "17af36df.d20ff9",
                "1a02f494.12ac8b"
            ],
            [
                "11e83fb2.09a37",
                "17af36df.d20ff9"
            ]
        ]
    },
    {
        "id": "33879e8b.3151b2",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "other replies",
        "func": "var t = msg.i18n;\n\n//if(context.global.keyboard && context.global.keyboard.pending)\n//{\n//    context.global.keyboard.pending = false;\n    if(msg.payload.content === t('Desuscribirme'))\n    {\n        msg.payload.content = t('👍 Desuscrito');\n        return [msg, null];   \n    }\n    else if(msg.payload.content === t('♥ Apoya esta iniciativa'))\n    {\n        msg.payload.content =  t('¿Sabías que los fuegos producen tanto CO² como los coches y aproximadamente ⅕ de todas nuestras emisiones?') + '\\r\\n\\r\\n'\n        msg.payload.content += t('Puedes ayudarnos (y al medioambiente) dando difusión a @TodosContraElFuego_bot entre tus contactos y grupos para que más gente lo use.') + '\\r\\n\\r\\n';\n        msg.payload.content += t('También puedes apoyarnos con alguna donación. Así podremos pagar nuestros servidores, servicios de terceros, usar otras plataformas diferentes de Telegram y pagar algún café a los desarrolladores:');\n        msg.payload.content += '\\r\\n➡️ https://comunes.org/donate\\r\\n\\r\\n';\n\n        return [msg, null];\n\n    }\n    else if(msg.payload.content === t('📖 Más info'))\n    {   msg.payload.content =  t('© Copyleft Asociación Comunes bajo licencia AGPLv3') + '\\r\\n';\n        msg.payload.content += \"https://comunes.org\\r\\n\";\n        msg.payload.content += t('Código:') + 'https://github.com/comunes/todos-contra-el-fuego\\r\\n\\r\\n';\n        \n        msg.payload.content += t('LIMITACIÓN DE LA RESPONSABILIDAD:') + '\\r\\n\\r\\n'; \n        \n        msg.payload.content += t('EN NINGÚN CASO A MENOS QUE SEA REQUERIDO POR UNA LEY APLICABLE O ACUERDO ESCRITO NINGÚN TITULAR DE LOS DERECHOS DE AUTOR (“COPYRIGHT”), O NINGÚN TERCERO QUE MODIFIQUE Y/O TRANSMITA EL PROGRAMA COMO SE PERMITE ANTERIORMENTE, SERÁ RESPONSABLE ANTE USTED POR DAÑOS, INCLUYENDO CUALESQUIERA DAÑOS GENERALES, PARTICULARES, IMPREVISTOS O DERIVADOS DEL USO O IMPOSIBILIDAD DE USO DEL PROGRAMA (INCLUYENDO, PERO NO LIMITADO A, LA PÉRDIDA DE DATOS, DATOS GENERADOS INCORRECTOS, PÉRDIDAS SUFRIDAS POR USTED O POR TERCERAS PERSONAS, O LOS FALLOS DEL PROGRAMA PARA OPERAR CON OTROS PROGRAMAS), INCLUSO SI DICHO TITULAR O UN TERCERO HA SIDO ADVERTIDO DE LA POSIBILIDAD DE TALES DAÑOS.') + '\\r\\n\\r\\n';\n        \n        msg.payload.content += t('POLÍTICA DE PRIVACIDAD:') + '\\r\\n\\r\\n';\n        msg.payload.content += t('No compartimos ninguna información con terceros. La información recogida por esta aplicación tiene el único fin ayudar en la prevención y extinción de fuegos principalmente forestales.') + '\\r\\n\\r\\n';\n\n        msg.payload.content += t('FUENTES DE DATOS:') + '\\r\\n\\r\\n';\n        msg.payload.content += t('Además de las alertas proporcionadas por nuestros usuari@s, usamos datos de fuegos activos proporcionados por la NASA (programa MODIS y VIIRS). Ver mapa: http://effis.jrc.ec.europa.eu/static/effis_current_situation/public/index.html') + '\\r\\n';\n        msg.payload.content += \"«We acknowledge the use of data and imagery from LANCE FIRMS operated by the NASA/GSFC/Earth Science Data and Information System (ESDIS) with funding provided by NASA/HQ».\" + '\\r\\n';\n        msg.payload.content += t('Si quieres que añadamos otras fuentes de datos sobre fuegos, no dudes en contactar con nosotros: info@comunes.org') + '\\r\\n\\r\\n';\n        \n        msg.payload.content += t('PREGUNTAS FRECUENTES:') + '\\r\\n\\r\\n';\n        msg.payload.content += t('➖ ¿Me puedo suscribir a varias zonas?: Por ahora no directamente. Solo con un truco, añadiendo a @TodosContraElFuego_bot como miembro a un grupo y que ese grupo esté subscrito a otra zona.') + '\\r\\n';\n        msg.payload.content += t('➖ ¿Hay \"falsos positivos\"?: Sí los hay. Puedes recibir alguna notificación de fuego por ej. de refinerías o incineradoras. Puedes pulsar a la localización del falso positivo y responder con un mensaje que diga \"falso positivo\" o \"es una industria\" para que estos fuegos no sean notificados.') + '\\r\\n';\n        msg.payload.content += t('Nos puedes ayudar mucho proporcionándonos otros feedbacks sobre la veracidad de las notificaciones de fuego, sobre el estado del fuego, etc. Siplemente responde a la localización de una notificación de fuego (pulsando sobre ella y seleccionando \"Responder\") con algún comentario sobre ese fuego.') + '\\r\\n';\n        msg.payload.content += t('➖ ¿Puedo recibir notificaciones en una distancia diferente o mayor? Sí, basta con estar subscrito y teclear, por ejemplo, \"a 17 km\" si quisieramos recibir notificaciones en un radio de 17 kilómetros (o mayor si queremos hacer pruebas).') + '\\r\\n';\n        msg.payload.content += t('➖ ¿No voy a recibir demasiadas notificaciones?: En principio no deberías, ya que agrupamos las notificaciones de las diferentes fuentes y solo avisamos una vez al día por fuego. Por ejemplo no repetimos notificaciones si algún vecino ya ha notificado un mismo fuego en la zona previamente.') + '\\r\\n\\r\\n';\n        \n        msg.payload.content += t('OTROS:') + '\\r\\n\\r\\n';\n        msg.payload.content += t('➖ Por ahora solo procesamos datos de fuegos de la NASA en Europa, pero si nos lo pedís podemos ampliar nuestro radio de acción.') + '\\r\\n';\n        msg.payload.content += t('➖ Puedes añadir a @TodosContraElFuego_bot a un grupo como miembro y recibir notificaciones de cierta área en ese grupo.') + '\\r\\n';\n        msg.payload.content += t('➖ Puedes votar con alegría ⭐️⭐️⭐️⭐️⭐️ nuestro bot en https://telegram.me/storebot?start=TodosContraElFuego_bot.') +  '\\r\\n\\r\\n';\n        \n        msg.payload.content += t('Feedback, sugerencias, bugs, etc: @vj_rj') + '\\r\\n\\r\\n';\n        \n        msg.payload.content += t(\"¡Gracias!\");\n        return [msg, null];\n    }\n    else {\n        msg.payload.content = t('Opción de teclado desconocida');\n        return [null, msg];   \n    }\n//}\n",
        "outputs": "5",
        "noerr": 0,
        "x": 750,
        "y": 580,
        "wires": [
            [
                "90cc5a97.f73e08"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "1b848c63.4e2bf4",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "escribir posición",
        "func": "var t = msg.i18n;\n/* if (context.global.keyboard & context.global.keyboard.pending) {\n    context.global.keyboard.pending = false; */\n    msg.payload.type = 'message';\n    msg.payload.content = t('Indícanos la posición a vigilar (por ej. tu pueblo, una calle, etc). Si usas un móvil también puedes adjuntar una ubicación pulsando el clip');\n    msg.payload.topic = \"sus\";\n    \n    var opts = {\n      reply_markup: JSON.stringify({\n        force_reply: true,\n      })\n    };\n    msg.payload.options = opts;\n    return msg;\n/* } */\n",
        "outputs": "1",
        "noerr": 0,
        "x": 730,
        "y": 480,
        "wires": [
            [
                "c89c411b.79f73"
            ]
        ]
    },
    {
        "id": "be0cbd6.2efaf4",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "ask location to sub",
        "func": "var t = msg.i18n;\nvar key = 'locationtopic-' + msg.payload.chatId;\nglobal.set(key, 'sus');\n\nif (msg.payload.chatId > 0) {\n    if (context.global.keyboard && context.global.keyboard.pending) {\n        context.global.keyboard.pending = false;\n        var opts = {\n            // reply_to_message_id: msg.payload.messageId,\n            \n            reply_markup: JSON.stringify({\n                force_reply: true,\n                keyboard: [ \n                    [{text: t('📍 Compartir mi posición'), request_location: true}, \n                     {text: t('📝 Escribir mi posición')}\n                    ],\n                    [{text: t('⬅️ Cancelar')}]\n                ], \n    \n                'resize_keyboard' : true, \n                'one_time_keyboard' : true\n            })\n        };\n        msg.payload.content = t('¿Quieres compartir tu posición o escribir el nombre de la zona a vigilar (por ejemplo un pueblo, una dirección, etc)? Selecciona una de las opciones. Activa la información de tu ubicación 📍 en tu móvil si quieres compartir tu ubicación');\n        msg.payload.options = opts;\n    }\n    return [msg, null];\n} else {\n    return [null, msg];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 400,
        "wires": [
            [
                "98bfcdd0.736cf"
            ],
            [
                "f4470f67.a877d"
            ]
        ]
    },
    {
        "id": "189c6a9b.aab975",
        "type": "google geocoding",
        "z": "93cb4937.6fc068",
        "name": "Geo",
        "geocodeBy": "address",
        "address": "",
        "lat": "",
        "lon": "",
        "googleAPI": "9f205dc2.bd858",
        "bounds": "",
        "language": "",
        "region": "",
        "components": "",
        "x": 1630,
        "y": 480,
        "wires": [
            [
                "52271fef.7036",
                "daebf6ef.f07908"
            ]
        ]
    },
    {
        "id": "57988778.321178",
        "type": "telegram reply",
        "z": "93cb4937.6fc068",
        "name": "get reply",
        "bot": "f93d1a38.c43218",
        "x": 1180,
        "y": 480,
        "wires": [
            [
                "d35010eb.26fdd"
            ]
        ]
    },
    {
        "id": "22b64555.dd2e7a",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "ask fire",
        "func": "var t = msg.i18n;\nvar key = 'locationtopic-' + msg.payload.chatId;\nglobal.set(key, 'newfire');\nif (msg.payload.chatId > 0) {\n    // use of locationtopic instead\n    context.global.keyboard = { pending : true };\n    var opts = {\n        // reply_to_message_id: msg.payload.messageId,\n            \n        reply_markup: JSON.stringify({\n            force_reply: true,\n            keyboard: [ \n                [{text: t('📍 El fuego está en mi ubicación'), request_location: true}, \n                 {text: t('📝 Escribir localización fuego')}\n                ],\n                [{text: t('⬅️ Cancelar')}]\n            ], \n            'resize_keyboard' : true, \n            'one_time_keyboard' : true\n        })\n    };\n\n    msg.payload.content = t('¿Quieres compartir tu ubicación o escribir la localización del fuego (por ejemplo un pueblo, una dirección, etc)? Selecciona una de las opciones. Activa la información de tu ubicación 📍 en tu móvil si quieres compartir tu ubicación');\n    msg.payload.options = opts;\n    \n    return [msg, null];\n} else {\n    return [null, msg];\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 860,
        "y": 440,
        "wires": [
            [
                "574b0512.1f89ac"
            ],
            [
                "60ee8a37.032aa4"
            ]
        ]
    },
    {
        "id": "e0bc7e33.2a795",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "otherwise",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 580,
        "y": 960,
        "wires": []
    },
    {
        "id": "f26677b3.07e7f8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "Subscrito!",
        "func": "var t = msg.i18n;\nvar newMsg = {\n    payload : {\n        content : t('👍 ¡Suscrito/a!'),\n        type: \"message\",\n        chatId: msg.query.chatId\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 700,
        "wires": [
            [
                "abe7d7fb.2c4708",
                "baa17b12.6767a8"
            ]
        ]
    },
    {
        "id": "e864b674.6fd2c8",
        "type": "delay",
        "z": "465e67f.6ebf598",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 200,
        "y": 40,
        "wires": [
            [
                "bf50334e.7ac3a"
            ]
        ]
    },
    {
        "id": "4f819d77.37fcc4",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "chatId",
        "active": false,
        "console": "false",
        "complete": "chatId",
        "x": 1970,
        "y": 440,
        "wires": []
    },
    {
        "id": "529f65ba.a3f03c",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "query chatId",
        "func": "msg.payload = [{\"chatId\": msg.payload.chatId }];\n// console.log(msg.payload);\nmsg.collection = \"subscriptions\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 520,
        "wires": [
            [
                "64500fb0.8e131",
                "d0bbfbb3.627958"
            ]
        ]
    },
    {
        "id": "7636ac6a.243324",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "query sub",
        "func": "msg.chatId = msg.payload.chatId;\nmsg.collection = \"subscriptions\";\nmsg.payload = {\"chatId\": msg.payload.chatId };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 800,
        "wires": [
            [
                "8a2660ac.113c5"
            ]
        ]
    },
    {
        "id": "9f58b262.a60d",
        "type": "telegram command",
        "z": "93cb4937.6fc068",
        "name": "/info",
        "command": "/info",
        "bot": "f93d1a38.c43218",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "35d1de38.e04672"
            ],
            []
        ]
    },
    {
        "id": "59c0890d.7d97e8",
        "type": "function",
        "z": "2b8628df.fdcca8",
        "name": "near?",
        "func": "msg.originalPayload = msg.payload;\n\nconst or = global.get('notifyWebUsers') ? \n    { $or: [ { telegramBot: global.get('telegramBot') }, { type: 'web' } ] } :\n    { telegramBot: global.get('telegramBot') };\n\nmsg.payload = {\n    $and: [\n        or,\n        { geo:\n            { $near : {\n                $geometry: { \n                    type: \"Point\",  \n                    coordinates: [ msg.lon, msg.lat]\n                },\n                $minDistance: 0,\n                $maxDistance: 1000000\n            }}\n        }\n    ]\n};\n\nif (msg.limitToChatId) {\n    msg.payload.chatId = msg.limitToChatId;\n}\nmsg.collection = \"subscriptions\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 240,
        "wires": [
            [
                "20a29f00.ec2d2"
            ]
        ]
    },
    {
        "id": "ca5f1316.5932c",
        "type": "function",
        "z": "95e78a8b.50a428",
        "name": "calc distances",
        "func": "const Iron = context.global.iron;\n\nvar t = msg.i18n;\n\n// node.log(\"Enter chatId: \" + msg.payload.chatId);\n\n// https://www.npmjs.com/package/geolib\nvar dist = context.global.geolib.getDistance(\n    { latitude: msg.payload.location.lat, \n      longitude: msg.payload.location.lon\n    },\n    { latitude: msg.lat, \n      longitude: msg.lon\n    }\n); \n\n// node.log(\"end calc dist chatId: \" + msg.payload.chatId);\n\nvar maxDist =  msg.payload.distance;\n// node.log(\"userId: \" + msg.user._id + \" type \" + msg.payload.type + \" maxDist \" + maxDist + \" dist \" + dist/1000);\n\nif (dist/1000 <= maxDist) {\n    var km = Math.round(dist/1000 * 10) / 10;\n    var content;\n    var when = msg.originalPayload.when;\n    \n    if (msg.type === \"vecinal\") {\n        // kmvecinal : '🔥 Alerta de posible fuego a {{km}} км de distancia (fuente NASA)''\n        content = t('kmvecinal', {km: km});\n    } else if (msg.type === \"modis\" || msg.type === \"viirs\") {\n        // kmnasa : '🔥 Alerta vecinal de fuego a {{km}} км de distancia''\n        content = t('kmnasa', {km: km});\n    }\n\n    var password = global.get('ironPassword');\n\n    delete msg.originalPayload._id;\n    \n    msg.originalPayload.ourversion = \"1\";\n    \n    Iron.seal(msg.originalPayload, password, Iron.defaults).then(function(sealed) {\n        const link = t('firelink', { server: global.get('website'), enc: sealed, escapeInterpolation: false });\n        var caption = {\n            payload : {\n              chatId : msg.payload.chatId,\n              type : \"message\",\n              content: content,\n              options: { parse_mode: \"Markdown\" }\n            },\n            link,\n            sealed,\n            i18n: t,\n            lang: msg.lang\n        };\n        \n        var notification = {\n            // find if we send previously this notification\n            payload : {\n              chatId : msg.payload.chatId,\n              type : \"location\",\n              content: {\n                 longitude: msg.lon,\n                 latitude: msg.lat \n              }\n            },\n            // FIXME this shoudld be removed?\n            // caption: caption,\n            i18n: t,\n            lang: msg.lang\n        };\n        \n        // console.log(when);\n        \n        var newMsg = {\n            payload: {\n                userId: msg.user._id,\n                // chatId: msg.payload.chatId,\n                geo: { $near : {\n                    $geometry: { \n                        type: \"Point\",  \n                        coordinates: [\n                            msg.lon,\n                            msg.lat\n                        ] },\n                    $minDistance: 0,\n                    $maxDistance: 500 // Junto notificaciones en un radio de 0.5km \n                    }\n                }\n            },\n            notification: notification,\n            caption: caption,\n            cacheKey: msg.lat + \",\" + msg.lon,\n            i18n: t,\n            user: msg.user,\n            notitype: msg.payload.type,\n            when: when,\n            originalPayload: msg.originalPayload,\n            lang: msg.lang\n        };\n        newMsg.collection = \"notifications\";\n        node.send(newMsg);\n\n    }, function(reason) {\n        node.error(reason);\n    });\n\n\n    \n\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 100,
        "wires": [
            [
                "c0e6a5d.fb1e058"
            ]
        ]
    },
    {
        "id": "6cfebdf8.84ef74",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "send location",
        "func": "var t = msg.i18n;\nif (msg.payload.length > 0) {\n    var km = msg.payload[0].distance;\n    var caption = {\n        payload : {\n          chatId : msg.payload[0].chatId,\n          type : \"message\",\n          content: t('kmdistancia', {km: km})\n        },\n        i18n: t,\n        lang: msg.lang\n    }\n    \n    var location = {\n        payload : {\n            chatId : msg.payload[0].chatId,\n            type : \"location\",\n            content: {\n               longitude: parseFloat(msg.payload[0].location.lon).toFixed(5),\n               latitude: parseFloat(msg.payload[0].location.lat).toFixed(5)\n            },\n        },\n        i18n: msg.i18n,\n        lang: msg.lang\n    }\n    return [caption, location, null];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 1070,
        "y": 840,
        "wires": [
            [
                "1e81ed1a.57bfa3"
            ],
            [
                "74146dac.0d0704"
            ]
        ],
        "outputLabels": [
            "caption",
            "location"
        ]
    },
    {
        "id": "54c7f5d3.8c4e7c",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "no susc",
        "func": "var t = msg.i18n;\nif (msg.payload.length === 0) {\n    msg.payload.type = \"message\";\n    msg.payload.content = t('No estás suscrito/a a ninguna alerta');\n    msg.payload.chatId = msg.chatId;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 800,
        "wires": [
            [
                "1e81ed1a.57bfa3"
            ]
        ]
    },
    {
        "id": "82292481.dd9428",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "update km",
        "func": "var km = Number(msg.payload.content.replace(/(a |em |en |)([0-9]+)[ ]*km( around| arredor|)/, \"$2\"));\nvar newMsg = {\n    query : {\n        // No busca bien con _id, \n        // duplicamos chatId\n        chatId : msg.payload.chatId \n    },\n    payload: {\n       $set: {        \n           distance : km\n       }\n    },\n    i18n: msg.i18n,\n    chatId : msg.payload.chatId\n};\nnewMsg.collection = \"subscriptions\";\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 640,
        "wires": [
            [
                "f26677b3.07e7f8",
                "e9922131.cfda7",
                "2325b207.a4a4fe"
            ]
        ]
    },
    {
        "id": "990b8bb6.bacdd8",
        "type": "function",
        "z": "95e78a8b.50a428",
        "name": "save and send",
        "func": "if (msg.payload.length === 0) {\n    // No yet notified save and \n    // send notifications\n    return msg;\n} else {\n    // Already notified, do nothing\n}\n",
        "outputs": "1",
        "noerr": 0,
        "x": 683,
        "y": 100,
        "wires": [
            [
                "3560f00b.6d6ac"
            ]
        ],
        "outputLabels": [
            "persist"
        ]
    },
    {
        "id": "c0e6a5d.fb1e058",
        "type": "delay",
        "z": "95e78a8b.50a428",
        "name": "rate 5s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "e19c5735.fba9a8"
            ]
        ]
    },
    {
        "id": "cf97891b.2928a8",
        "type": "delay",
        "z": "95e78a8b.50a428",
        "name": "rate 1x2s",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1540,
        "y": 80,
        "wires": [
            [
                "d79d8e7b.539c8"
            ]
        ]
    },
    {
        "id": "70cddff9.2dbfb",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "save geofind",
        "func": "var newMsg = {\n    query : {\n        // No busca bien con _id, \n        // duplicamos chatId\n        chatId : msg.chatId \n    },\n    payload: {\n       $set: {        \n            location: {\n                lat: msg.payload.lat,\n                lon: msg.payload.lon,\n                text: msg.address\n            },\n            // _id: msg.chatId,\n            chatId: msg.chatId,\n            geo: {\n                type: \"Point\",\n                coordinates: [msg.payload.lon, msg.payload.lat]\n            },\n            distance: 5,\n            type: 'telegram',\n            createdAt: new Date()\n        }\n    },\n    location: {\n        lat: msg.payload.lat,\n        lon: msg.payload.lon\n    },\n    // _id: msg.chatId,\n    chatId: msg.chatId,\n    i18n: msg.i18n\n    \n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1780,
        "y": 540,
        "wires": [
            [
                "4f819d77.37fcc4",
                "771c05f7.78a3ac",
                "366ad4aa.b96aec"
            ]
        ]
    },
    {
        "id": "10eb3fd5.6d416",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "save location",
        "func": "var newMsg = {\n    query : {\n        // No busca bien con _id, \n        // duplicamos chatId\n        chatId : msg.payload.chatId \n    },\n    // payload $set for updates\n    payload: {\n       $set: {        \n        location: {\n            lat: msg.payload.content.latitude,\n            lon: msg.payload.content.longitude\n        },\n        // _id: msg.payload.chatId,\n        chatId: msg.payload.chatId,\n        geo: {\n            type: \"Point\",\n            coordinates: [\n                msg.payload.content.longitude, \n                msg.payload.content.latitude]\n        },\n        distance: 5,\n        type: 'telegram',\n        createdAt: new Date()\n       }\n    },\n    location: {\n        lat: msg.payload.content.latitude,\n        lon: msg.payload.content.longitude\n    },\n    chatId: msg.payload.chatId,\n    i18n: msg.i18n\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1650,
        "y": 600,
        "wires": [
            [
                "771c05f7.78a3ac",
                "366ad4aa.b96aec"
            ]
        ]
    },
    {
        "id": "543a368a.8447b8",
        "type": "config",
        "z": "93cb4937.6fc068",
        "name": "config-dev",
        "properties": [
            {
                "p": "ftp-path",
                "pt": "global",
                "to": "/tmp/",
                "tot": "str"
            },
            {
                "p": "sends-news-to",
                "pt": "global",
                "to": "all",
                "tot": "str"
            },
            {
                "p": "conf-path",
                "pt": "global",
                "to": "./",
                "tot": "str"
            },
            {
                "p": "website",
                "pt": "global",
                "to": "local.net:3000",
                "tot": "str"
            },
            {
                "p": "telegramBot",
                "pt": "global",
                "to": "es",
                "tot": "str"
            },
            {
                "p": "notifyWebUsers",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "active": true,
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "73b0043e.3d68dc",
        "type": "config",
        "z": "93cb4937.6fc068",
        "name": "config-prod",
        "properties": [
            {
                "p": "ftp-path",
                "pt": "global",
                "to": "/opt/node-red-data/",
                "tot": "str"
            },
            {
                "p": "sends-news-to",
                "pt": "global",
                "to": "all",
                "tot": "str"
            },
            {
                "p": "conf-path",
                "pt": "global",
                "to": "/opt/node-red-data/",
                "tot": "str"
            },
            {
                "p": "website",
                "pt": "global",
                "to": "fuegos.comunes.org",
                "tot": "str"
            },
            {
                "p": "telegramBot",
                "pt": "global",
                "to": "es",
                "tot": "str"
            },
            {
                "p": "notifyWebUsers",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "active": false,
        "x": 330,
        "y": 40,
        "wires": []
    },
    {
        "id": "48cdccd8.2399a4",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "d 300ms",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 2380,
        "y": 640,
        "wires": [
            [
                "f9199a3f.b81058"
            ]
        ]
    },
    {
        "id": "92cf1a70.8b3e38",
        "type": "telegram command",
        "z": "93cb4937.6fc068",
        "name": "/suscribirme",
        "command": "/suscribirme",
        "bot": "f93d1a38.c43218",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "a1932f34.2ab98"
            ],
            []
        ]
    },
    {
        "id": "f3249bab.90eae8",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 570,
        "y": 800,
        "wires": [
            [
                "7636ac6a.243324"
            ]
        ]
    },
    {
        "id": "a1932f34.2ab98",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 270,
        "y": 240,
        "wires": [
            [
                "be0cbd6.2efaf4"
            ]
        ]
    },
    {
        "id": "98bfcdd0.736cf",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 790,
        "y": 380,
        "wires": [
            [
                "b870e649.02f3a8"
            ]
        ]
    },
    {
        "id": "c89c411b.79f73",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 890,
        "y": 480,
        "wires": [
            [
                "9951a307.647d"
            ]
        ]
    },
    {
        "id": "d79d8e7b.539c8",
        "type": "delay",
        "z": "95e78a8b.50a428",
        "name": "rate 20x1m",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "20",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1710,
        "y": 80,
        "wires": [
            [
                "a890056b.ebcff8",
                "a8447ee4.5f9bc"
            ]
        ]
    },
    {
        "id": "8cffd8ff.5786d8",
        "type": "ui_chart",
        "z": "2b8628df.fdcca8",
        "name": "to dash",
        "group": "601660c.cd104a",
        "order": 20,
        "width": "0",
        "height": "0",
        "label": "Usuarios cercanos",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1414,
        "y": 354.0000410079956,
        "wires": [
            [
                "ac0b5f28.dea74"
            ],
            []
        ]
    },
    {
        "id": "c7da78e3.f6ea28",
        "type": "function",
        "z": "2b8628df.fdcca8",
        "name": "users near (hangs!)",
        "func": "var newMsg  = {\n    payload: msg.payload.length,\n    label: 'Usuarios en la zona (notif. ' + msg.type + ')'\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1204,
        "y": 354.0000410079956,
        "wires": [
            [
                "8cffd8ff.5786d8"
            ]
        ]
    },
    {
        "id": "d8b00aa6.5027f8",
        "type": "function",
        "z": "3f0768a7.1fac78",
        "name": "count active",
        "func": "if (Array.isArray(msg.payload)) {\n    var newMsg  = {\n        payload: msg.payload.length,\n        topic: \"Fuegos activos\" //  (\" + msg.type + \"\"\n    };\n    return newMsg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 60,
        "wires": [
            [
                "44fbc396.81360c"
            ]
        ]
    },
    {
        "id": "44fbc396.81360c",
        "type": "ui_chart",
        "z": "3f0768a7.1fac78",
        "name": "count active",
        "group": "601660c.cd104a",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "Fuegos activos en el mundo (fuente NASA)",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "c4c96710.0c14f8"
            ],
            []
        ]
    },
    {
        "id": "abe7d7fb.2c4708",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "inc subs",
        "func": "// var day = context.global.moment.utc().dayOfYear()\n\nvar newMsg = {\n    query : {\n        // day: day,\n        name: \"numsus\"\n    },\n    payload: {\n        $inc: { value: 1 }\n    }\n}\nnewMsg.collection = \"fstats\";\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 740,
        "wires": [
            [
                "b79ba2c5.287b3"
            ]
        ]
    },
    {
        "id": "64500fb0.8e131",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "in desubs",
        "func": "// var day = context.global.moment.utc().dayOfYear()\n\nvar newMsg = {\n    query : {\n        // day: day,\n        name: \"numdesus\"\n    },\n    payload: {\n        $inc: { value: 1 }\n    }\n};\nnewMsg.collection = \"fstats\";\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 520,
        "wires": [
            [
                "7311f974.4670a8"
            ]
        ]
    },
    {
        "id": "a890056b.ebcff8",
        "type": "function",
        "z": "95e78a8b.50a428",
        "name": "increment sendnotis",
        "func": "// var day = context.global.moment.utc().dayOfYear()\n\nvar newMsg = {\n    query : {\n        // day: day,\n        name: \"sendnotis\"\n    },\n    payload: {\n        $inc: { value: 1 }\n    }\n};\nnewMsg.collection = \"fstats\";\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1932.000015258789,
        "y": 144.99999809265137,
        "wires": [
            [
                "a1d870da.64966"
            ]
        ]
    },
    {
        "id": "c6746cf.d2d809",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "all",
        "func": "// empty payload == all\nvar newMsg = {\n    payload: [{\n    }]};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "ca45b7ce.3822c8"
            ]
        ]
    },
    {
        "id": "b3f1e61b.568c08",
        "type": "inject",
        "z": "93cb4937.6fc068",
        "name": "delete day notis",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 0 * * *",
        "once": false,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "c6746cf.d2d809"
            ]
        ]
    },
    {
        "id": "cbe0e85b.a53018",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "112",
        "func": "var t = msg.i18n;\nvar newMsg = {\n    payload: {\n        type: \"message\",\n        content: t('No olvides llamar al 📞112 si no lo has hecho ya para avisar a los servicios de emergencia 🚒'),\n        chatId : msg.payload.chatId\n    },\n    i18n: msg.i18n\n};\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 760,
        "wires": [
            [
                "373aa2ef.0aac9e"
            ]
        ]
    },
    {
        "id": "1292920f.64d29e",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "b0289aa8.88a968"
            ]
        ]
    },
    {
        "id": "b0289aa8.88a968",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 720,
        "y": 440,
        "wires": [
            [
                "22b64555.dd2e7a"
            ]
        ]
    },
    {
        "id": "9620588a.113218",
        "type": "google geocoding",
        "z": "bfeff5b6.e5f178",
        "name": "Geo Fire",
        "geocodeBy": "address",
        "address": "",
        "lat": "",
        "lon": "",
        "googleAPI": "9f205dc2.bd858",
        "bounds": "",
        "language": "",
        "region": "",
        "components": "",
        "x": 900,
        "y": 100,
        "wires": [
            [
                "b9c8c0db.ee0be"
            ]
        ]
    },
    {
        "id": "5c52af18.0b854",
        "type": "telegram reply",
        "z": "bfeff5b6.e5f178",
        "name": "get reply",
        "bot": "f93d1a38.c43218",
        "x": 480,
        "y": 100,
        "wires": [
            [
                "4cd4a2cd.e15ecc"
            ]
        ]
    },
    {
        "id": "4230490a.147bf8",
        "type": "function",
        "z": "bfeff5b6.e5f178",
        "name": "write pos",
        "func": "var t = msg.i18n;\nmsg.payload.type = 'message';\nmsg.payload.content = t('Escribir localización del fuego (por ej. tu pueblo, una calle, etc). Si usas un móvil también puedes adjuntar una ubicación pulsando el clip:');\n\nvar opts = {\n  reply_markup: JSON.stringify({\n    force_reply: true,\n  })\n};\n\nmsg.payload.options = opts;\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 220,
        "y": 100,
        "wires": [
            [
                "320b1cf9.d609d4"
            ]
        ]
    },
    {
        "id": "60ee8a37.032aa4",
        "type": "subflow:c644db46.3854c8",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 580,
        "y": 600,
        "wires": []
    },
    {
        "id": "b0495fbe.5ecca",
        "type": "function",
        "z": "c6a40c11.dfc6b",
        "name": "volver btn",
        "func": "var t = msg.i18n;\nvar opts = {\n    // reply_to_message_id: msg.payload.messageId,\n    reply_to_message_id : null,\n    reply_markup: JSON.stringify({\n        force_reply: true,\n        keyboard: [ \n            [{text: t(\"⬅️ Volver\")}]\n        ], \n        'resize_keyboard' : true, \n        'one_time_keyboard' : false\n        })\n    };\nmsg.payload.type = \"message\";\nmsg.payload.options = opts;\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 120,
        "wires": [
            [
                "1e1d9c8f.87ccc3"
            ]
        ]
    },
    {
        "id": "8e21846c.61c698",
        "type": "function",
        "z": "c644db46.3854c8",
        "name": "ask confirmation",
        "func": "var t = msg.i18n;\n\nvar isUser = msg.payload.chatId > 0;\n\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    \"inline_keyboard\": [[\n                {\n                    \"text\": t('Sí'),\n                    \"callback_data\": \"notify_fire\"\n                },\n                {\n                    \"text\": t('No'),\n                    \"callback_data\": \"no_notify_fire\"\n                }]\n            ]\n  })\n};\n\nvar key = 'location-' + msg.payload.chatId;\nglobal.set(key, msg);\n\nvar newMsg = {\n    payload : {\n        chatId: msg.payload.chatId,\n        type: 'message',\n        content: t('Vas a notificar a los vecinos cercanos sobre este fuego ¿estás seguro/a?'),\n        options: opts\n    }\n};\n\nif (isUser) {\n  //  msg.payload.content += ' Te solicitaremos tú contacto como medida de seguridad.';\n}\n\nreturn [newMsg, null];",
        "outputs": "1",
        "noerr": 0,
        "x": 1300,
        "y": 260,
        "wires": [
            [
                "eda1038.09ff8"
            ]
        ]
    },
    {
        "id": "a95a87ec.d0c648",
        "type": "function",
        "z": "156e20df.86399f",
        "name": "send location",
        "func": "var caption = {\n    payload : {\n      chatId : msg.chatId,\n      type : \"message\",\n      content: msg.caption\n    }\n};\n\nvar location = {\n    payload : {\n      chatId : msg.chatId,\n      type : \"location\",\n      content: {\n         longitude: parseFloat(msg.location.lon).toFixed(5),\n         latitude: parseFloat(msg.location.lat).toFixed(5)\n      }\n    }\n};\nreturn [msg, location, caption];",
        "outputs": "3",
        "noerr": 0,
        "x": 310,
        "y": 160,
        "wires": [
            [
                "748b9d33.3e7354"
            ],
            [
                "dac16e62.49529"
            ],
            [
                "4617874.e42eb78"
            ]
        ],
        "outputLabels": [
            "msg",
            "location",
            "caption"
        ]
    },
    {
        "id": "771c05f7.78a3ac",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "subs caption",
        "func": "var t = msg.i18n;\nmsg.caption = t('Este es el mapa del lugar al que te subscribes');\nmsg.payload.chatId = msg.chatId;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1990,
        "y": 640,
        "wires": [
            [
                "ad6ea913.641818"
            ]
        ]
    },
    {
        "id": "ad6ea913.641818",
        "type": "subflow:156e20df.86399f",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 2200,
        "y": 640,
        "wires": [
            [
                "48cdccd8.2399a4"
            ]
        ]
    },
    {
        "id": "46ab5b3e.b67004",
        "type": "subflow:156e20df.86399f",
        "z": "bfeff5b6.e5f178",
        "name": "",
        "x": 1380,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "6d492c2d.a26024",
        "type": "function",
        "z": "bfeff5b6.e5f178",
        "name": "caption, etc",
        "func": "var t = msg.i18n;\nmsg.caption = t('Este es el mapa del lugar donde crees que hay un fuego');\nmsg.location.text = msg.address;\nmsg.payload.chatId = msg.chatId;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "46ab5b3e.b67004"
            ]
        ]
    },
    {
        "id": "f0bdf975.8486e8",
        "type": "telegram command",
        "z": "93cb4937.6fc068",
        "name": "/fuego",
        "command": "/fuego",
        "bot": "f93d1a38.c43218",
        "x": 90,
        "y": 900,
        "wires": [
            [
                "269ca556.b7a1ba"
            ],
            []
        ]
    },
    {
        "id": "dac16e62.49529",
        "type": "delay",
        "z": "156e20df.86399f",
        "name": "d 300ms",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 540,
        "y": 220,
        "wires": [
            [
                "307c3839.005448"
            ]
        ]
    },
    {
        "id": "748b9d33.3e7354",
        "type": "delay",
        "z": "156e20df.86399f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 540,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "74146dac.0d0704",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "d 300ms",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1240,
        "y": 860,
        "wires": [
            [
                "33cd0275.71172e"
            ]
        ]
    },
    {
        "id": "4a109a88.7389a4",
        "type": "function",
        "z": "9968fcc5.ed33c",
        "name": "menú distancia",
        "func": "var t = msg.i18n;\ncontext.global.keyboard = { pending : true };\n\n// if (msg.payload.type == 'message') {\nvar opts = {\n  // reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    force_reply: true,\n    keyboard: [ \n        [{text: t('a 5 km')}, {text: t('a 10 km')}],\n        [{text: t('a 20 km')}, {text: t('a 40 km')} ],\n        [{text: t('a 100 km')}, {text: t('⬅️ Cancelar')} ]],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.type = 'message';\nmsg.payload.content = t('¿A que distancia a la redonda quieres recibir notificaciones?');\nmsg.payload.options = opts;\n\nreturn msg;\n//}\n",
        "outputs": "1",
        "noerr": 0,
        "x": 360,
        "y": 120,
        "wires": [
            [
                "aa2956c1.cdd168"
            ]
        ]
    },
    {
        "id": "f9199a3f.b81058",
        "type": "subflow:9968fcc5.ed33c",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 2560,
        "y": 640,
        "wires": []
    },
    {
        "id": "19b16d50.b6eed3",
        "type": "telegram command",
        "z": "93cb4937.6fc068",
        "name": "/distancia",
        "command": "/distancia",
        "bot": "f93d1a38.c43218",
        "x": 100,
        "y": 1060,
        "wires": [
            [
                "192c6f7a.054a91"
            ],
            []
        ]
    },
    {
        "id": "192c6f7a.054a91",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 290,
        "y": 1060,
        "wires": [
            [
                "16c436c8.0c8dc9"
            ]
        ]
    },
    {
        "id": "7d6a8c23.8b1694",
        "type": "subflow:9968fcc5.ed33c",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 600,
        "y": 1060,
        "wires": []
    },
    {
        "id": "539a53d4.268c7c",
        "type": "subflow:9968fcc5.ed33c",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 600.9999961853027,
        "y": 838.9999980926514,
        "wires": []
    },
    {
        "id": "d6336a1e.3ad888",
        "type": "subflow:c644db46.3854c8",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1780,
        "y": 680,
        "wires": []
    },
    {
        "id": "5eea2f81.66eb7",
        "type": "debug",
        "z": "9968fcc5.ed33c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "48b0356c.7fd7ac",
        "type": "debug",
        "z": "156e20df.86399f",
        "name": "all sendloc",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 310,
        "y": 220,
        "wires": []
    },
    {
        "id": "862cd972.e97388",
        "type": "telegram receiver",
        "z": "93cb4937.6fc068",
        "name": "rec",
        "bot": "f93d1a38.c43218",
        "saveDataDir": "",
        "x": 950,
        "y": 640,
        "wires": [
            [
                "349ef6f8.98e88a"
            ],
            []
        ]
    },
    {
        "id": "f0552abc.9ccb78",
        "type": "function",
        "z": "76bd701f.29d0f",
        "name": "query sub",
        "func": "msg.chatId = msg.payload.chatId;\nmsg.originalPayload = msg.payload;\nmsg.payload = {chatId: msg.chatId };\nmsg.collection = \"subscriptions\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 100,
        "wires": [
            [
                "43acea2.b597f14"
            ]
        ]
    },
    {
        "id": "875a7c37.8bb0a",
        "type": "function",
        "z": "76bd701f.29d0f",
        "name": "start menu",
        "func": "context.global.keyboard = { pending : true };\n\nvar t = msg.i18n;\n\n// https://apps.timwhitlock.info/emoji/tables/unicode\n\n// is subs or not\nvar subs = msg.payload.length === 0;\nmsg.payload = msg.originalPayload;\n\nvar opts = msg.payload.options ? msg.payload.options : {};\n\nconst statusBtn = { text: t('🌏 Estado actual') };\n\nif (subs) {\n    // Ya suscrito\n    opts.reply_markup =\n        JSON.stringify(\n            {\n                keyboard: [ \n                    [{text: t('📣 Suscribirme a fuegos en mi zona')}, statusBtn],\n                    [{text: t('🔥 Notificar un fuego nuevo')} ], \n                    [{text: t('♥ Apoya esta iniciativa')}, {text: t('📖 Más info')}, ] ],\n                'resize_keyboard' : true, \n                // 'one_time_keyboard' : true\n            });\n} else {\n    opts.reply_markup =\n        JSON.stringify(\n            {\n                keyboard: [ \n                    [{text: t('📣 Suscrito a nuevos fuegos')}, statusBtn],\n                    [{text: t('Desuscribirme')}, {text: t('🔥 Notificar un fuego nuevo')} ], \n                    [{text: t('♥ Apoya esta iniciativa')}, {text: t('📖 Más info')}, ] ],\n                'resize_keyboard' : true, \n                // 'one_time_keyboard' : true\n            });\n\n}\n\n// node.log(typeof msg.payload.content);\n\nif (typeof msg.payload.content === 'undefined' || msg.payload.content === null ||\n    (typeof msg.payload.content === 'string' &&\n    msg.payload.content.match(/⬅️ .*/)) ||\n    msg.payload.content === '') {\n    // Only disable notifications on start (but notify when fires, etc)\n    opts.disable_notification = true;\n    msg.payload.content = t('Elige una de las opciones:');\n} else {\n    // Only for debugging\n    // msg.payload.content = msg.payload.content + \".\";\n}\n\nmsg.payload.chatId = msg.chatId;\n\nif (typeof msg.payload.type === 'undefined' || msg.payload.type === null) {\n    msg.payload.type = \"message\";\n}\n\n\nmsg.payload.options = opts;\n\nreturn [ msg ];",
        "outputs": "1",
        "noerr": 0,
        "x": 1090,
        "y": 100,
        "wires": [
            [
                "b2e2ccf3.f0498"
            ]
        ]
    },
    {
        "id": "55ebd8f8.436e38",
        "type": "subflow:76bd701f.29d0f",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "bf50334e.7ac3a",
        "type": "subflow:76bd701f.29d0f",
        "z": "465e67f.6ebf598",
        "name": "",
        "x": 350,
        "y": 40,
        "wires": []
    },
    {
        "id": "596d56e2.54f5e8",
        "type": "delay",
        "z": "76bd701f.29d0f",
        "name": "start drop",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 280,
        "y": 100,
        "wires": [
            [
                "b3331045.d30b3"
            ]
        ]
    },
    {
        "id": "730cf241.49734c",
        "type": "switch",
        "z": "c644db46.3854c8",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "location",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 150,
        "y": 120,
        "wires": [
            [
                "ad92a3e7.bb743"
            ],
            [
                "bc7d9d4a.8509a"
            ]
        ],
        "outputLabels": [
            "location",
            "message"
        ]
    },
    {
        "id": "349ef6f8.98e88a",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "is loc",
        "func": "if (msg.payload.type === 'location' && \n    typeof msg.geo === 'undefined') {\n    // node.log(\"Location received\");  \n    return msg;\n} else {\n    // return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1110,
        "y": 640,
        "wires": [
            [
                "69a62d00.26b314"
            ]
        ]
    },
    {
        "id": "1e112e4e.062b82",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "payl",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 1410,
        "y": 560,
        "wires": []
    },
    {
        "id": "5b42be73.7ac18",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "loc-lang",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1420,
        "y": 600,
        "wires": []
    },
    {
        "id": "52271fef.7036",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "all",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1790,
        "y": 480,
        "wires": []
    },
    {
        "id": "baa17b12.6767a8",
        "type": "subflow:465e67f.6ebf598",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1240,
        "y": 700,
        "wires": []
    },
    {
        "id": "fbac8488.5194a8",
        "type": "subflow:465e67f.6ebf598",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1440,
        "y": 800,
        "wires": []
    },
    {
        "id": "ad92a3e7.bb743",
        "type": "function",
        "z": "c644db46.3854c8",
        "name": "near today?",
        "func": "var date = new Date();\nvar dateformat = context.global.moment(date).format('YYYYMMDD');\nmsg.originalMessage = msg.payload;\nmsg.originalLocation = msg.location;\nmsg.chatId = msg.payload.chatId;\nvar lon = msg.location.lon;\nvar lat = msg.location.lat;\n\nmsg.payload = {\n    ourid:\n       { $near : {\n            $geometry: { \n                type: \"Point\",  \n                coordinates: [lon, lat]\n            },\n            $minDistance: 0,\n            $maxDistance: 200\n          }\n       },\n    dateformat\n   };\nmsg.collection = \"avisosfuego\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 60,
        "wires": [
            [
                "56b79683.17ee28"
            ]
        ]
    },
    {
        "id": "19f3b34b.f8ebcd",
        "type": "function",
        "z": "c644db46.3854c8",
        "name": "send Orig",
        "func": "var newMsg = {\n    payload: msg.originalMessage,\n    location: msg.originalLocation,\n    address: msg.address,\n    i18n: msg.i18n,\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 260,
        "wires": [
            [
                "8e21846c.61c698"
            ]
        ]
    },
    {
        "id": "af778312.fcd62",
        "type": "switch",
        "z": "c644db46.3854c8",
        "name": "already",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 680,
        "y": 60,
        "wires": [
            [
                "91cf9b3e.1b8b78"
            ],
            [
                "4894d22a.56b13c"
            ]
        ]
    },
    {
        "id": "91cf9b3e.1b8b78",
        "type": "function",
        "z": "c644db46.3854c8",
        "name": "already notif",
        "func": "var t = msg.i18n;\n// node.log(\"i18n: \" + typeof t);\nvar newMsg = {\n    payload: {\n        type: \"message\",\n        chatId: msg.originalMessage.chatId,\n        content: t('Este fuego o uno muy cercano ya ha sido notificado por otra persona anteriormente. ¡Gracias!')\n    },\n    i18n: t\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 60,
        "wires": [
            [
                "9c7b7220.fab4c"
            ]
        ]
    },
    {
        "id": "9c7b7220.fab4c",
        "type": "subflow:c6a40c11.dfc6b",
        "z": "c644db46.3854c8",
        "x": 1170,
        "y": 60,
        "wires": []
    },
    {
        "id": "73053858.f6f538",
        "type": "function",
        "z": "c644db46.3854c8",
        "name": "today limits?",
        "func": "var date = new Date();\nvar dateformat = context.global.moment(date).format('YYYYMMDD');\nmsg.payload = {\n    owner: msg.user,\n    dateformat\n   };\nmsg.collection = \"avisosfuego\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "8e6b94ff.9d6968"
            ]
        ]
    },
    {
        "id": "a227a0dc.c36ca",
        "type": "switch",
        "z": "c644db46.3854c8",
        "name": "already",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 960,
        "y": 120,
        "wires": [
            [
                "d9561c77.e3ca9"
            ],
            [
                "19f3b34b.f8ebcd"
            ]
        ]
    },
    {
        "id": "acfaa5f4.f3b898",
        "type": "function",
        "z": "c644db46.3854c8",
        "name": "limits notif",
        "func": "var t = msg.i18n;\n\nvar newMsg = {\n    payload: {\n        type: \"message\",\n        chatId: msg.originalMessage.chatId,\n        content: t('Ya habías notificado un fuego hoy. Si por algún motivo necesitas reportar más de un fuego al día, ponte en contacto con nosotros: info@comunes.org ¡Gracias!')\n    },\n    i18n: t\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 140,
        "wires": [
            [
                "873d85b7.cdd238"
            ]
        ]
    },
    {
        "id": "873d85b7.cdd238",
        "type": "subflow:c6a40c11.dfc6b",
        "z": "c644db46.3854c8",
        "x": 1450,
        "y": 140,
        "wires": []
    },
    {
        "id": "d9561c77.e3ca9",
        "type": "switch",
        "z": "c644db46.3854c8",
        "name": "admin?",
        "property": "originalMessage.chatId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "4885772",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 1110,
        "y": 120,
        "wires": [
            [
                "19f3b34b.f8ebcd"
            ],
            [
                "acfaa5f4.f3b898"
            ]
        ]
    },
    {
        "id": "9ef9c4c5.a68d08",
        "type": "function",
        "z": "11cb3f4d.6e0081",
        "name": "update active fires",
        "func": "var type = msg.type;\nvar collection = \"activefires\"; // + type; // to detect new fires \n\nvar now = new Date();\nglobal.set('active-now', now);\nflow.set('active-collection', collection);\nflow.set('active-type', type);\n\n\nvar updates = [];\n\n// for (var i = 0; i < 10; i++) {\nfor (var i = 0; i < msg.payload.length; i++) {\n    var pay = msg.payload[i];\n    var lat = pay.latitude;\n    var lon = pay.longitude;\n    if (typeof lat === 'number' && typeof lon === 'number')  {\n        // Sometimes the data is not well formed/downloaded\n        var ourid = {\n            type: \"Point\",\n            coordinates: [ lon, lat ]\n        };\n        \n        // dates sample\n        // acq_date: \"2017-11-09\"\n        ///acq_time: \"06:30\"\n        var acdate = pay.acq_date;\n        var actime = pay.acq_time;\n        var when = context.global.moment.utc(acdate + \" \" + actime, \"YYYY-MM-DD HH:mm\").toDate(); // .valueOf();\n\n        var setcommon = {\n            ourid: ourid,\n            lat: lat,\n            lon: lon,\n            updatedAt: now,\n            type: type,\n            when : when,\n            acq_date: acdate,\n            acq_time: actime,\n            scan : pay.scan,\n            track : pay.track,\n            satellite : pay.satellite,\n            confidence : pay.confidence,\n            version : pay.version,\n            frp : pay.frp,\n            daynight : pay.daynight,\n        };\n        var setdiff;\n        if (type === \"modis\") {\n            setdiff = {\n                brightness : pay.brightness,\n                bright_t31 : pay.bright_t31\n            };\n        } else { // viirs\n            setdiff = {\n                bright_ti4 : pay.bright_ti4,\n                bright_ti5 : pay.bright_ti5,\n            };\n            }\n        \n        var setjoin = Object.assign(setcommon, setdiff);\n        \n        // remove empties\n        /* Object.keys(setjoin).forEach((key) => (setjoin[key] === null || typeof setjoin[key] === 'undefined') && \n               delete setjoin[key]); */\n\n        var set = { \n            $set: setjoin,\n            $setOnInsert: { createdAt: now }\n        };\n        \n        /* mongo basic\n        var update = {};\n        update.payload = set;\n        update.query = { _id:  id };\n        updates.push(update);\n        */\n        \n        // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#bulkWrite\n        // { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n        updates.push({ updateOne: { filter: {ourid: ourid, type: type}, update: set, upsert:true } });\n    }\n}\n\nif (updates.length > 0 ) {\n    // If we have updates\n    var bulkUpdate = {};\n    bulkUpdate.collection = collection;\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#bulkWrite\n    // https://docs.mongodb.com/manual/reference/write-concern/\n    bulkUpdate.payload = [updates, {w: 1, wtimeout: 60000}];\n    return bulkUpdate;\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "54968e5b.432b1"
            ]
        ],
        "outputLabels": [
            "update/save"
        ]
    },
    {
        "id": "d982859c.d8dea8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "args",
        "func": "var newMsg = {\n    payload: {\n        type: \"location\",\n        chatId: msg.payload.chatId\n    },\n    location: {\n        lon: msg.payload.content.longitude,\n        lat: msg.payload.content.latitude,\n        text: \"\"\n    },\n    i18n: msg.i18n\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1630,
        "y": 680,
        "wires": [
            [
                "d6336a1e.3ad888",
                "9c0ff2b9.ff7bc"
            ]
        ]
    },
    {
        "id": "9c0ff2b9.ff7bc",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "all",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1770,
        "y": 720,
        "wires": []
    },
    {
        "id": "c4c96710.0c14f8",
        "type": "persist in",
        "z": "3f0768a7.1fac78",
        "name": "nasa-fire-active",
        "storageNode": "2c23f46.8edd30c",
        "x": 580,
        "y": 60,
        "wires": []
    },
    {
        "id": "b3460bb5.6fb918",
        "type": "persist out",
        "z": "3f0768a7.1fac78",
        "name": "nasa-fire-active",
        "storageNode": "2c23f46.8edd30c",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "44fbc396.81360c"
            ]
        ]
    },
    {
        "id": "ac0b5f28.dea74",
        "type": "persist in",
        "z": "2b8628df.fdcca8",
        "name": "near-neighbours",
        "storageNode": "db913a18.f8bf88",
        "x": 1614,
        "y": 354.0000410079956,
        "wires": []
    },
    {
        "id": "ce1799a1.35d408",
        "type": "persist out",
        "z": "2b8628df.fdcca8",
        "name": "near-neighbours",
        "storageNode": "db913a18.f8bf88",
        "x": 1204,
        "y": 314.0000410079956,
        "wires": [
            [
                "8cffd8ff.5786d8"
            ]
        ]
    },
    {
        "id": "3534f560.645aea",
        "type": "inject",
        "z": "93cb4937.6fc068",
        "name": "onInit",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "f2c9762e.6c90a8"
            ]
        ]
    },
    {
        "id": "a30ccf58.3a1e",
        "type": "function",
        "z": "2f0217a5.051978",
        "name": "find prev false positive register",
        "func": "if (msg.originalMessage && \n    msg.originalMessage.reply_to_message &&\n    msg.originalMessage.reply_to_message.location) {\n    var lon = msg.originalMessage.reply_to_message.location.longitude;\n    var lat = msg.originalMessage.reply_to_message.location.latitude;\n    // TODO: must be a NASA fire\n    var find = {};\n    find.payload = {\n    geo:\n       { $near : {\n            $geometry: { \n                type: \"Point\",  \n                coordinates: [lon, lat]\n            },\n            $minDistance: 0,\n            $maxDistance: 200\n          }\n        },\n        chatId: msg.chatId\n    };\n    find.originalMessage = msg.originalMessage;\n    find.chatId = msg.chatId;\n    find.i18n = msg.i18n;\n    find.collection = \"falsePositives\";\n    return find;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 220,
        "wires": [
            [
                "8c1690d8.cb5c7"
            ]
        ]
    },
    {
        "id": "7f8ce0c9.99ac4",
        "type": "switch",
        "z": "2f0217a5.051978",
        "name": "already",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 880,
        "y": 220,
        "wires": [
            [
                "d7931057.66ab7"
            ],
            [
                "677cc27e.bad8ec",
                "ed07b302.7a6b7"
            ]
        ]
    },
    {
        "id": "677cc27e.bad8ec",
        "type": "function",
        "z": "2f0217a5.051978",
        "name": "save",
        "func": "var date = new Date();\nvar formated = context.global.moment(date).format('YYYYMMDD');\n\nvar orig = msg.originalMessage;\nvar lon = orig.reply_to_message.location.longitude;\nvar lat = orig.reply_to_message.location.latitude;\n\nvar chatId = msg.chatId;\n\nvar reg = {\n    query : {\n        // solo un fuego por usuario por ahora\n        chatId : chatId,\n        geo: {\n            type: \"Point\",\n            coordinates: [lon, lat]\n        }\n    },\n    payload: {\n        $set: {        \n            chatId: chatId,\n            when: date,\n            whendateformat: formated,\n            geo: {\n                type: \"Point\",\n                coordinates: [lon, lat]\n            }\n        }\n    },\n}\nreg.collection = \"falsePositives\";\nreturn reg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "858f9032.262b"
            ]
        ]
    },
    {
        "id": "9f730cf9.c7a3b",
        "type": "subflow:2f0217a5.051978",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 590,
        "y": 920,
        "wires": [
            [
                "63a864bc.f82b1c"
            ]
        ]
    },
    {
        "id": "63a864bc.f82b1c",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "all",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 750,
        "y": 920,
        "wires": []
    },
    {
        "id": "ef71cdfb.1f93",
        "type": "debug",
        "z": "2f0217a5.051978",
        "name": "false positive entry",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 270,
        "y": 140,
        "wires": []
    },
    {
        "id": "ed07b302.7a6b7",
        "type": "function",
        "z": "2f0217a5.051978",
        "name": "thanks!",
        "func": "var t = msg.i18n;\n\nvar thx = {};\nthx.payload = {};\nthx.payload.type = \"message\";\nthx.payload.chatId = msg.chatId;\nthx.payload.content = t('👌 Tomamos nota, ¡gracias por colaborar!');\nreturn thx;",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "eab4c7fe.fd7828"
            ]
        ]
    },
    {
        "id": "d7931057.66ab7",
        "type": "function",
        "z": "2f0217a5.051978",
        "name": "already!",
        "func": "var t = msg.i18n;\n\nvar thx = {};\nthx.payload = {};\nthx.payload.type = \"message\";\nthx.payload.chatId = msg.chatId;\nthx.payload.content = t(\"Ya marcaste este fuego como 'falso positivo'. Gracias en cualquier caso...\");\nreturn thx;",
        "outputs": 1,
        "noerr": 0,
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "364970ea.3f564"
            ]
        ]
    },
    {
        "id": "d76ddf98.d3de9",
        "type": "function",
        "z": "2b8628df.fdcca8",
        "name": "false positive?",
        "func": "var query = {}\nquery.payload = {\n    geo:\n       { $near : {\n            $geometry: { \n                type: \"Point\",  \n                coordinates: [ msg.lon, msg.lat]\n            },\n            $minDistance: 0,\n            $maxDistance: 500 // changed from 350\n          }\n       }\n   }\nquery.originalMessage = msg;\nquery.collection = \"falsePositives\";\nreturn query;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 240,
        "wires": [
            [
                "2f99081.36175f8"
            ]
        ]
    },
    {
        "id": "9e65a744.1a6a68",
        "type": "function",
        "z": "2b8628df.fdcca8",
        "name": "false?",
        "func": "if (msg.payload.length > 0) {\n    // node.log(\"False positive\");\n    return [null, msg.originalMessage];\n} else {\n    // node.log(\"Not false positive\");\n    return [msg.originalMessage, null];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 530,
        "y": 240,
        "wires": [
            [
                "6e743ab8.ff0cb4"
            ],
            []
        ],
        "outputLabels": [
            "not false positive",
            "false"
        ]
    },
    {
        "id": "60fdfcd6.2a6d84",
        "type": "function",
        "z": "bfeff5b6.e5f178",
        "name": "set location",
        "func": "msg.chatId = msg.payload.chatId;\nvar content = msg.payload.content;\nmsg.location = {};\n\nif (content && content.latitude) {\n    // Is a shared location (clip)\n    msg.location.lat = content.latitude;\n    msg.location.lon = content.longitude;\n    return [null, msg];\n} else {\n    // Is a writen location\n    msg.location.address = content;\n    msg.address = content;\n    // global.set(`fire${msg.chatId}`, content);\n    return [msg, null];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 750,
        "y": 100,
        "wires": [
            [
                "9620588a.113218"
            ],
            []
        ],
        "outputLabels": [
            "address",
            "lat,lon already"
        ]
    },
    {
        "id": "f2c9762e.6c90a8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "i18n conf",
        "func": "var i = context.global.i18next;\nvar backend = context.global.i18nextbackend;\n\nvar backOpts = {\n  // path where resources get loaded from\n  loadPath: global.get('conf-path') + './locales/{{lng}}/{{ns}}.json',\n\n  // path to post missing resources\n  addPath: global.get('conf-path') + './locales/{{lng}}/{{ns}}.missing.json',\n\n  // jsonIndent to use when storing json files\n  jsonIndent: 2\n};\n\ni.use(backend)\n .init({\n  backend: backOpts,\n  lng: 'es',\n  //fallbackLng: 'es',\n  fallbackLng: { \n    'en-US': ['en'], \n    'en-GB': ['en'],\n    'pt-BR': ['pt'],\n    'default': ['es']\n    },\n  whitelist: false,  \n  // whitelist: ['es', 'en'], // allowed languages\n  load: 'all', // es-ES -> es, en-US -> en\n  debug: false,\n  ns: 'telegram-bot',\n  defaultNS: 'telegram-bot',\n  saveMissing: false, // if true seems it's fails to getResourceBundle\n  saveMissingTo: 'all',\n  keySeparator: 'ß',\n  nsSeparator: 'ð',\n  pluralSeparator: 'đ',\n}, function(err, t) {\n    // initialized and ready to go!\n    const es = i.getFixedT('es');\n    const en = i.getFixedT('en');\n    const pt = i.getFixedT('pt');\n    const ast = i.getFixedT('ast');\n    const gl = i.getFixedT('gl');\n    global.set('lang-es', es);\n    global.set('lang-en', en);\n    global.set('lang-ast', ast);\n    global.set('lang-pt', pt);\n    global.set('lang-gl', gl);\n    i.loadLanguages(['es', 'en', 'pt', 'ast', 'gl'], function() {\n        // var t = global.get('lang-pt');\n        // node.log(t('Sí'));\n    });\n});\n",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 80,
        "wires": [
            [
                "1f93ce66.41da62"
            ]
        ]
    },
    {
        "id": "1f93ce66.41da62",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "payl",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "373aa2ef.0aac9e",
        "type": "subflow:e81a68fa.695e38",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 710,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "dd683e99.7c126",
        "type": "telegram sender",
        "z": "e81a68fa.695e38",
        "name": "",
        "bot": "f93d1a38.c43218",
        "x": 450,
        "y": 40,
        "wires": [
            [
                "7817e97.07b9f18"
            ]
        ]
    },
    {
        "id": "33cd0275.71172e",
        "type": "subflow:e81a68fa.695e38",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1410,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "5541b1d7.23da4",
        "type": "function",
        "z": "6995c6a.1a0bf38",
        "name": "set i18n if not set",
        "func": "if (typeof msg.i18n === 'undefined') {\n    var current = msg.lang;\n    // FIXME: for some reason lang sometimes is empty\n    if (typeof msg.lang !== 'undefined') { \n        if (current.match(/^es/)) {\n            //node.log(\"Current language Spanish\");\n            msg.i18n = global.get('lang-es');\n        } else if (current.match(/^gl/)) {\n            // node.log(\"Current language Galego\");\n            msg.i18n = global.get('lang-gl');\n        } else if (current.match(/^en/)) {\n            // node.log(\"Current language English\");\n            msg.i18n = global.get('lang-en');\n        } else if (current.match(/^ast/)) {\n            // node.log(\"Current language Asturian\");\n            msg.i18n = global.get('lang-ast');\n        } else if (current.match(/^pt/)) {\n            // node.log(\"Current language Portuguese\");\n            msg.i18n = global.get('lang-pt');\n        }\n    }\n}\n\nif (typeof msg.i18n !== 'function') {\n    // fallback to Spanish\n    node.log(\"Fallback language Spanish\");\n    msg.i18n = global.get('lang-es');\n} else {\n    // node.log(\"i18n already configured\");\n} \n\n// console.assert(typeof msg.i18n === 'function', 'wooops problem setting i18n');\n\n// node.log(\"Type of i18n \" + typeof msg.i18n);\n\nreturn [msg, null]; ",
        "outputs": "1",
        "noerr": 0,
        "x": 310,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f4470f67.a877d",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 570,
        "y": 480,
        "wires": [
            [
                "1b848c63.4e2bf4"
            ]
        ]
    },
    {
        "id": "e9667844.7ff518",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "start opts",
        "func": "var chatId = msg.payload.chatId;\nvar uconf = \"user_\" + chatId;\nif (context.global.uconf && context.global.uconf.keyboardlang && context.global.uconf.keyboardlang.pending) { \n    // Lang response do nothing here\n} else {\n    var output = [];\n    var opt = msg.payload.content;\n    var t = msg.i18n;\n    // node.log(\"Type of i18n \" + typeof t);\n    \n    if (opt === \"/start@rednodetest_bot\") {\n      output[0] = msg; return output;\n    } else if (opt === \"/start@TodosContraElFuego_bot\") {\n      output[0] = msg; return output;\n    } else if (opt === \"/inicio@rednodetest_bot\") {\n      output[0] = msg; return output;\n    } else if (opt === \"/inicio\") {\n      output[0] = msg; return output;\n    } else if (opt === \"/inicio@TodosContraElFuego_bot\") {\n      output[0] = msg; return output;\n    } else if (opt === t(\"⬅️ Volver\")) {\n      output[0] = msg; return output;\n    } else if (opt === t(\"⬅️ Cancelar\")) {\n      output[0] = msg; return output;\n    } else if (opt === t(\"📣 Suscribirme a fuegos en mi zona\")) {\n      output[1] = msg; return output;\n    } else if (opt === \"/suscribirme@rednodetest_bot\") {\n      output[1] = msg; return output;\n    } else if (opt === \"/suscribirme@TodosContraElFuego_bot\") {\n      output[1] = msg; return output;\n    } else if (opt === t(\"📖 Más info\")) {\n      output[2] = msg; return output;\n    } else if (opt === t(\"♥ Apoya esta iniciativa\")) {\n      output[2] = msg; return output;\n    } else if (opt === t(\"🔥 Notificar un fuego nuevo\")) {\n      output[3] = msg; return output;\n    } else if (opt === t(\"📝 Escribir mi posición\")) {\n      output[4] = msg; return output;\n    } else if (opt === t(\"📝 Escribir localización fuego\")) {\n      output[5] = msg; return output;\n    } else if ((opt + \"\").match(new RegExp(\"^(a |em |en |)[0-9]*[ ]*km( around| arredor|)\",'i'))) {\n      output[6] = msg; return output;\n    } else if (opt === t(\"📣 Suscrito a nuevos fuegos\")) {\n      output[7] = msg; return output;\n    } else if (opt === \"/info@rednodetest_bot\") {\n      output[7] = msg; return output;\n    } else if (opt === \"/info@TodosContraElFuego_bot\") {\n      output[7] = msg; return output;\n    } else if (opt === \"/distancia@rednodetest_bot\") {\n      output[8] = msg; return output;\n    } else if (opt === \"/distancia@TodosContraElFuego_bot\") {\n      output[8] = msg; return output;\n    } else if (opt === t(\"📍 El fuego está en mi ubicación\")) {\n      output[9] = msg; return output;\n    } else if ((opt + \"\").match(new RegExp(\"(falsa alarma|falso positivo|es una industria|industria)\",'i'))) {\n      output[10] = msg; return output;\n    } else if (opt === t(\"Desuscribirme\")) {\n      output[11] = msg; return output;\n    } else if (opt === \"/lang@rednodetest_bot\") {\n      output[12] = msg; return output;\n    } else if (opt === \"/lang@TodosContraElFuego_bot\") {\n      output[12] = msg; return output;\n    } else if (opt === \"/mylang\") {\n    } else if (opt === \"/lang\") {\n      // do nothing\n    } else if (opt === t(\"🌏 Estado actual\")) {\n      output[13] = msg; return output;\n    } else {\n      output[14] = msg; return output;\n    }\n}",
        "outputs": "15",
        "noerr": 0,
        "x": 300,
        "y": 480,
        "wires": [
            [
                "55ebd8f8.436e38"
            ],
            [
                "be0cbd6.2efaf4"
            ],
            [
                "33879e8b.3151b2"
            ],
            [
                "1292920f.64d29e",
                "fa14bb16.1c3248",
                "cbe0e85b.a53018"
            ],
            [
                "f4470f67.a877d"
            ],
            [
                "60ee8a37.032aa4"
            ],
            [
                "82292481.dd9428"
            ],
            [
                "f3249bab.90eae8"
            ],
            [
                "539a53d4.268c7c"
            ],
            [
                "60ee8a37.032aa4"
            ],
            [
                "9f730cf9.c7a3b"
            ],
            [
                "529f65ba.a3f03c",
                "33879e8b.3151b2"
            ],
            [
                "e0417a.e678ee88"
            ],
            [
                "86eb44d0.c874a8"
            ],
            [
                "c37e7408.e43de8",
                "e0bc7e33.2a795"
            ]
        ],
        "outputLabels": [
            "start",
            "subscribe",
            "more info, desubscribe, support...",
            "Notify new fire",
            "Write my position",
            "Write fire position",
            "in n km",
            "info",
            "distance",
            "fire in my location",
            "false alarm",
            "desubscription",
            "lang",
            "status",
            "others"
        ]
    },
    {
        "id": "11e83fb2.09a37",
        "type": "subflow:4384af8e.a7409",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "e9667844.7ff518",
                "b2cc00b4.29906"
            ]
        ]
    },
    {
        "id": "b3331045.d30b3",
        "type": "subflow:4384af8e.a7409",
        "z": "76bd701f.29d0f",
        "name": "",
        "x": 430,
        "y": 100,
        "wires": [
            [
                "f0552abc.9ccb78"
            ]
        ]
    },
    {
        "id": "4cd4a2cd.e15ecc",
        "type": "subflow:4384af8e.a7409",
        "z": "bfeff5b6.e5f178",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "60fdfcd6.2a6d84"
            ]
        ]
    },
    {
        "id": "bb4817df.01de48",
        "type": "subflow:4384af8e.a7409",
        "z": "93cb4937.6fc068",
        "x": 1510,
        "y": 480,
        "wires": [
            [
                "189c6a9b.aab975"
            ]
        ]
    },
    {
        "id": "6906bc92.3ea1d4",
        "type": "debug",
        "z": "128790f6.dee0df",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1370,
        "y": 200,
        "wires": []
    },
    {
        "id": "20aeace7.594e64",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "current susc",
        "func": "var newMsg = {};\nnewMsg.notification = msg;\nnewMsg.collection = \"subscriptions\";\nnewMsg.payload = { telegramBot: global.get('telegramBot') };\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "6a393315.a9ee1c"
            ]
        ]
    },
    {
        "id": "ace2d6f2.4362f8",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "to who?",
        "func": "var who = global.get('sends-news-to');\nif ( who === 'all') {\n    return msg;\n} else {\n    var newMsg = {};\n    newMsg.payload = [];\n    newMsg.notification = msg.notification;\n    var sp = who.split(\",\");\n    for (var i = 0; i < sp.length; i++) {\n        var chatId = sp[i];\n        newMsg.payload[i] = { chatId: chatId };\n    }\n    return newMsg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 200,
        "wires": [
            [
                "199dadf2.46a4b2",
                "26b36dd6.0fc162"
            ]
        ]
    },
    {
        "id": "a5da0c46.379c6",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "ask confirmation",
        "func": "// var t = global.get(\"i18n-es\");\n// No internacionalizamos esta parte por ahora\n\ncontext.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    \"inline_keyboard\": [[\n                {\n                    \"text\": 'Sí',\n                    \"callback_data\": \"news_send\"\n                },\n                {\n                    \"text\": 'No',\n                    \"callback_data\": \"news_no_send\"\n                }]\n            ]\n  })\n};\n\nvar newMsg = {\n    payload : {\n        chatId: msg.payload.chatId,\n        type: 'message',\n        content: 'Vas a enviar estas novedades a todos los usuarios ¿estás seguro?',\n        options: opts\n    }\n};\n\nglobal.set('notification', msg);\n\nreturn [newMsg, null];",
        "outputs": "1",
        "noerr": 0,
        "x": 1090,
        "y": 60,
        "wires": [
            [
                "9a57fc1b.84c16"
            ]
        ]
    },
    {
        "id": "4675b760.d24348",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "set send opts",
        "func": "msg.payload.type = \"message\";\nmsg.payload.options = {};\nmsg.payload.options.parse_mode = \"Markdown\";\nmsg.payload.options.disable_web_page_preview = true; \nmsg.payload.options.disable_notification = true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 60,
        "wires": [
            [
                "6618aac1.2a3744",
                "4fe7fb99.30eb64"
            ]
        ]
    },
    {
        "id": "b4cf9be5.550978",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "news to send",
        "func": "var news = {};\nnews.payload = {};\nnews.payload.content  = \"📣 * Novedades de @TodosContraElFuego_bot *\\r\\n\";\nnews.payload.content += \"\\r\\n\";\nnews.payload.content += \"➖ Estrenamos página web: [https://fuegos.comunes.org](https://fuegos.comunes.org). Además de vía telegram ahora podemos recibir alertas de fuegos por correo y/o en nuestro navegador, visibilizar los fuegos actuales, las áreas cubiertas por nuestros usuari@s, etc\\r\\n\";\nnews.payload.content += \"➖ Además podemos aportar más [información sobre cada fuego](https://fuegos.comunes.org/fire/Fe26.2**b6781b869b766977b1fcec45ab7dc9900c71752964f3f0ede058c9554b6fbfbf*yWUEzDk3M25ScGlOAlPDjw*yDV4tUDHMDBI9Y4u4TRjsER8SI350M5DP6Hj_ZI9Jsnxwf4le_256oDRA-LuC7vFGaxbPBlPjC94OpNjYXYLhvCtSqDu0rDkER4GWAVVTZzsTiKaztzGm9itg4sJWGHR8mvvIYhRwhVNfz3m-pSuRzV-FYwRwcF0YTgyRUuinOtd9PHdkxXMxG_BDoKAh-zR6V308MaDHj2j2di3TmBUtqVSAZCMXzj7_WWO0NOCC1F_ZvW-67bbRXoWjNG13UmdPbDbEcWGBV89HA_fpjYdR-iAIw_2UqVHObfKMenIpiP4JNezK5E3hghIQxuA9jb498wjZkn9BC62W26y8KZcpFtceLj_1kD-X9woH3oyKTOyaqY-azfFHCT3q_-FDBBz1DiDiS5cyddfy2ggl5mVWiCkww6o_b0ZKMCYo3NeOLBcD3EQ9mLrmR63G6xMzHDW2nDWeHw9XgeZILSOolAw3VTd2hA11Kn54uN-CbciIeQlXk7beom2EvK6HJyzvWFZ6pmDX3iB2GbiPD4dDHK7v0sTF5ediaqMKu7cwssAXno**8573bcd9c4bdaf70223c3e0478ba0481994c2f6d3df40af72f7b3a492445b027*PNm7pYbNGNLTWuSe2VOFDeErqsbmn9XxongS1dxj7ko) en nuestra web, por ejemplo, como se accede al fuego (para facilitar la extinción o posterior investigación), posibles causas, etc\\r\\n\";\nnews.payload.content += \"➖ Hemos incorporado en las alertas la hora de detección del fuego\\r\\n\"\nnews.payload.content += \"➖ Además de muchas mejoras internas en nuestro bot y solución de pequeños errores\\r\\n\";\nnews.payload.content += \"Seguimos en pruebas, comentarios, bienvenidos...\\r\\n\";\n// this is me, for preview:\nnews.payload.chatId = 4885772;\nreturn news;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "4675b760.d24348"
            ]
        ]
    },
    {
        "id": "b2a86687.974fc8",
        "type": "inject",
        "z": "128790f6.dee0df",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 60,
        "wires": [
            [
                "903240b.81669c"
            ]
        ]
    },
    {
        "id": "903240b.81669c",
        "type": "delay",
        "z": "128790f6.dee0df",
        "name": "rate 1x1m",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "b4cf9be5.550978"
            ]
        ]
    },
    {
        "id": "765837ba.bc31e8",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "answer confirm",
        "func": "// Not translated right now\n// var t = msg.i18n;\n\nvar show_alert = false; // you can set this to true to open a dialog with the answer in the client.\nvar notification = global.get('notification');\n\nif (notification !== null) {\n    // node.log(\"Notification callback\");\n    msg.payload.options = show_alert;\n    \n    global.set('notification', null);\n    // msg.payload.content contains the callback data from the keyboard.\n    if (msg.payload.content === 'news_send') {\n        return [notification, null];\n    } else if (msg.payload.content === 'news_no_send') {\n        var newMsg = {\n            payload: {\n                type: \"message\",\n                content: 'Notificación cancelada',\n                chatId: msg.payload.chatId\n            }\n        };\n        return [null, newMsg];\n    }\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 300,
        "y": 200,
        "wires": [
            [
                "20aeace7.594e64"
            ],
            [
                "df3bdc0f.4cd2f"
            ]
        ],
        "outputLabels": [
            "notification",
            "No"
        ]
    },
    {
        "id": "df3bdc0f.4cd2f",
        "type": "telegram sender",
        "z": "128790f6.dee0df",
        "name": "send",
        "bot": "f93d1a38.c43218",
        "x": 490,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6618aac1.2a3744",
        "type": "telegram sender",
        "z": "128790f6.dee0df",
        "name": "send",
        "bot": "f93d1a38.c43218",
        "x": 910,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9a57fc1b.84c16",
        "type": "telegram sender",
        "z": "128790f6.dee0df",
        "name": "send",
        "bot": "f93d1a38.c43218",
        "x": 1270,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "74385b88.39eb04",
        "type": "telegram callback_query",
        "z": "128790f6.dee0df",
        "name": "callback",
        "bot": "f93d1a38.c43218",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "765837ba.bc31e8"
            ]
        ]
    },
    {
        "id": "4fe7fb99.30eb64",
        "type": "delay",
        "z": "128790f6.dee0df",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 900,
        "y": 60,
        "wires": [
            [
                "a5da0c46.379c6"
            ]
        ]
    },
    {
        "id": "977bb03b.dc94f",
        "type": "delay",
        "z": "128790f6.dee0df",
        "name": "rate 1x2s",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1220,
        "y": 260,
        "wires": [
            [
                "bd6813b1.2cab5"
            ]
        ]
    },
    {
        "id": "bd6813b1.2cab5",
        "type": "delay",
        "z": "128790f6.dee0df",
        "name": "rate 10x1m",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1250,
        "y": 340,
        "wires": [
            [
                "bff4fef3.9fe3e"
            ]
        ]
    },
    {
        "id": "49f7750c.76675c",
        "type": "telegram sender",
        "z": "128790f6.dee0df",
        "name": "send",
        "bot": "f93d1a38.c43218",
        "x": 1590,
        "y": 340,
        "wires": [
            [
                "d64b5dd7.24b69"
            ]
        ]
    },
    {
        "id": "199dadf2.46a4b2",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "send to all",
        "func": "var noti = msg.notification;\nfor (var i = 0; i < msg.payload.length; i++) {\n    var chatId = msg.payload[i].chatId;\n    noti.payload.chatId = chatId;\n    if (noti.payload.content === 'empty') {\n        noti.payload.content = '';\n    }\n    if (typeof chatId === 'number' && chatId !== 9998999) {  // test chatId\n        node.send(noti);\n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "d5cbb344.cf8db",
                "977bb03b.dc94f"
            ]
        ]
    },
    {
        "id": "152ee632.13c3fa",
        "type": "comment",
        "z": "93cb4937.6fc068",
        "name": "Warning: Listeners like /commands in subflows can be duplicated",
        "info": "",
        "x": 270,
        "y": 1140,
        "wires": []
    },
    {
        "id": "81be2f6c.56aa8",
        "type": "function",
        "z": "4384af8e.a7409",
        "name": "user? no:ask-lang",
        "func": "if (msg.payload.length === 0) {\n    msg.payload = msg.originalPayload;\n    return [msg, null];\n} else {\n    // user registered\n    var lang = msg.payload[0].lang;\n    var user = msg.payload[0]._id;\n    msg.payload = msg.originalPayload;\n    msg.lang = lang;\n    msg.user = user;\n    return [null, msg];\n}\n\n",
        "outputs": "2",
        "noerr": 0,
        "x": 1480.0000076293945,
        "y": 43.00000190734863,
        "wires": [
            [
                "4e79d201.8c93bc"
            ],
            [
                "c46a6a2.a934698",
                "e11dde1f.ea412",
                "811b82bc.ffc63"
            ]
        ],
        "outputLabels": [
            "ask",
            "we have lang"
        ]
    },
    {
        "id": "6173b8ee.c73038",
        "type": "Cache in",
        "z": "4384af8e.a7409",
        "name": "chatId-lang-cache",
        "cache": "488013b6.1183ec",
        "keyType": "msg",
        "keyProperty": "chatId",
        "valueType": "msg",
        "valueProperty": "lang",
        "useString": false,
        "x": 664.0000305175781,
        "y": 41.00000762939453,
        "wires": [
            [
                "406eb40c.69dd7c"
            ]
        ]
    },
    {
        "id": "5ade250d.5e12fc",
        "type": "function",
        "z": "4384af8e.a7409",
        "name": "query user",
        "func": "msg.chatId = msg.payload.chatId;\nmsg.payload = {\"telegramChatId\": msg.chatId };\nmsg.collection = \"users\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150.0000076293945,
        "y": 43.00000190734863,
        "wires": [
            [
                "c034b2bd.9e5f7"
            ]
        ]
    },
    {
        "id": "6b27a3a5.4208dc",
        "type": "function",
        "z": "4384af8e.a7409",
        "name": "no cached?",
        "func": "if (typeof msg.lang === 'undefined'  || msg.lang === null) {\n    // node.log(\"Lang no cached\");\n    return [msg, null];\n} else {\n    // node.log(\"Lang cached\");\n    return [null, msg];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 980.0000076293945,
        "y": 43.00000190734863,
        "wires": [
            [
                "5ade250d.5e12fc"
            ],
            [
                "c46a6a2.a934698"
            ]
        ],
        "outputLabels": [
            "no cached",
            "cached"
        ]
    },
    {
        "id": "57e40a1.1461bf4",
        "type": "debug",
        "z": "4384af8e.a7409",
        "name": "lang keyboard active!",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1150.0000076293945,
        "y": 223.00000190734863,
        "wires": []
    },
    {
        "id": "afdf0d2.1f75ef",
        "type": "function",
        "z": "4384af8e.a7409",
        "name": "lang?",
        "func": "var chatId = msg.payload.chatId;\nvar uconf = \"user_\" + chatId;\n\nmsg.chatId = chatId;\nmsg.originalPayload = msg.payload;\nflow.set('payload-assert', msg.payload);\nflow.set('payload-chatId', msg.chatId);\n\nif (typeof msg.lang === 'string') {\n    // node.log(\"Bypass, we have already the lang\");\n    return [null, msg, null];\n} else {\n    if (context.global.uconf && context.global.uconf.keyboardlang && context.global.uconf.keyboardlang.pending) {\n        // do nothing   \n        // node.log(\"We are asking for lang, do nothing\");\n        return [null, null, msg];\n    } else {\n        // node.log(\"Let query the lang\");\n        return [msg, null, null];   \n    }\n}",
        "outputs": "3",
        "noerr": 0,
        "x": 600.0000076293945,
        "y": 103.00000190734863,
        "wires": [
            [
                "6173b8ee.c73038"
            ],
            [
                "c46a6a2.a934698"
            ],
            []
        ],
        "outputLabels": [
            "continue",
            "do nothing",
            ""
        ]
    },
    {
        "id": "f47aa14b.72c2b",
        "type": "telegram command",
        "z": "93cb4937.6fc068",
        "name": "/lang",
        "command": "/lang",
        "bot": "f93d1a38.c43218",
        "x": 90,
        "y": 1180,
        "wires": [
            [
                "9174cb7d.757948"
            ],
            []
        ]
    },
    {
        "id": "5e792abd.c19084",
        "type": "subflow:e6f3db8c.48eac8",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 385,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4e79d201.8c93bc",
        "type": "subflow:e6f3db8c.48eac8",
        "z": "4384af8e.a7409",
        "name": "",
        "x": 1710.0000076293945,
        "y": 43.00000190734863,
        "wires": []
    },
    {
        "id": "69a62d00.26b314",
        "type": "subflow:4384af8e.a7409",
        "z": "93cb4937.6fc068",
        "x": 1250,
        "y": 640,
        "wires": [
            [
                "5b42be73.7ac18",
                "fdba8b7a.1a1b08"
            ]
        ]
    },
    {
        "id": "1986ad37.928233",
        "type": "split",
        "z": "2b8628df.fdcca8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "237a3af6.86ed06"
            ]
        ]
    },
    {
        "id": "e39f3d19.34c0f",
        "type": "subflow:6995c6a.1a0bf38",
        "z": "4384af8e.a7409",
        "name": "",
        "x": 1890.0000076293945,
        "y": 223.00000190734863,
        "wires": [
            [
                "1586a4b5.782b9b"
            ]
        ]
    },
    {
        "id": "2a9cd9af.ae25c6",
        "type": "subflow:6995c6a.1a0bf38",
        "z": "2b8628df.fdcca8",
        "name": "",
        "x": 1820,
        "y": 240,
        "wires": [
            [
                "1041069a.2c84b9"
            ]
        ]
    },
    {
        "id": "b47755bb.64af48",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "save",
        "func": "var date = new Date();\nvar dateformat = context.global.moment(date).format('YYYYMMDD');\nvar lon = msg.location.lon;\nvar lat = msg.location.lat;\nvar chatId = msg.payload.chatId;\nvar address = msg.address;\n\n// console.log(address);\n\nvar newMsg = {\n    query : {\n        // Descomentar para solo un fuego por usuario por ahora\n        // owner: msg.user \n    },\n    payload: {\n       $set: {        \n            ourid: {\n                type: \"Point\",\n                coordinates: [lon, lat]\n            },\n            lat,\n            lon,\n            address,\n            // chatId,\n            type: \"vecinal\",\n            when: date,\n            owner: msg.user,\n            dateformat,\n            createdAt: date,\n            updatedAt: date\n        }\n    },\n    type: \"vecinal\",\n    lat,\n    lon\n};\nnewMsg.collection = \"avisosfuego\";\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 1560,
        "wires": [
            [
                "ca6b8c1d.12749",
                "be5e8e74.31b64"
            ]
        ]
    },
    {
        "id": "76cd31f0.40e6",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "inc fuegos",
        "func": "var day = context.global.moment.utc().dayOfYear();\n\nvar newMsg = {\n    query : {\n        day: day,\n        name: \"numfuegos\"\n    },\n    payload: {\n        $inc: { value: 1 }\n    }\n};\nnewMsg.collection = \"fstats\";\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1520,
        "wires": [
            [
                "c728fd84.28afc"
            ]
        ]
    },
    {
        "id": "f7be44bd.5d84f8",
        "type": "telegram callback_query",
        "z": "93cb4937.6fc068",
        "name": "callback_query",
        "bot": "f93d1a38.c43218",
        "x": 120,
        "y": 1480,
        "wires": [
            [
                "b81751c6.f7b84",
                "e75ad8bd.147e48"
            ]
        ]
    },
    {
        "id": "4964dee.a0c6e2",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "answer confirm",
        "func": "var t = msg.i18n;\n\nvar show_alert = false; // you can set this to true to open a dialog with the answer in the client.\n\nmsg.payload.options = show_alert;\nvar key = 'location-' + msg.payload.chatId;\nvar location = global.get(key);\nvar chatId = msg.payload.chatId;\nlocation.chatId = chatId;\n\nif (location !== null) {\n    // node.log(\"Location confirm callback\");\n    global.set(key, null);\n    // msg.payload.content contains the callback data from the keyboard.\n    if (msg.payload.content === 'notify_fire') {\n        // msg.payload.content = i.t('📣 Alerta recibida, ¡gracias!');\n        msg.payload.content = t('📣 Alerta recibida, ¡gracias!');\n        // node.log(location.payload.content);\n        return [msg, location, null];\n    } else if (msg.payload.content === 'no_notify_fire') {\n        var newMsg = {\n            payload: {\n                type: \"message\",\n                content: t('Aviso cancelado'),\n                chatId: chatId\n            },\n            i18n: t\n        };\n        return [null, null, newMsg];\n    }\n}",
        "outputs": "3",
        "noerr": 0,
        "x": 480,
        "y": 1480,
        "wires": [
            [
                "a1aac5f6.cf0228",
                "9cc764dc.591728"
            ],
            [
                "76cd31f0.40e6",
                "930b53f0.787a9",
                "5f48c4ee.744aac"
            ],
            [
                "a1aac5f6.cf0228"
            ]
        ],
        "outputLabels": [
            "Sí",
            "Location",
            "No"
        ]
    },
    {
        "id": "a1aac5f6.cf0228",
        "type": "subflow:c6a40c11.dfc6b",
        "z": "93cb4937.6fc068",
        "x": 690,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e75ad8bd.147e48",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "previous confirm",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 390,
        "y": 1560,
        "wires": []
    },
    {
        "id": "311b07de.9a7238",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "send notis!",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1030,
        "y": 1680,
        "wires": []
    },
    {
        "id": "6fe5f874.cf4978",
        "type": "subflow:2b8628df.fdcca8",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1290,
        "y": 1620,
        "wires": []
    },
    {
        "id": "2ccdf622.74c9ba",
        "type": "comment",
        "z": "93cb4937.6fc068",
        "name": "location attached is received also in the switch",
        "info": "",
        "x": 210,
        "y": 1420,
        "wires": []
    },
    {
        "id": "b81751c6.f7b84",
        "type": "subflow:4384af8e.a7409",
        "z": "93cb4937.6fc068",
        "x": 310,
        "y": 1480,
        "wires": [
            [
                "4964dee.a0c6e2",
                "e75ad8bd.147e48"
            ]
        ]
    },
    {
        "id": "74a88d3a.e6fe64",
        "type": "debug",
        "z": "2b8628df.fdcca8",
        "name": "users near?",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1184,
        "y": 394.0000410079956,
        "wires": []
    },
    {
        "id": "50bb0492.b20fbc",
        "type": "debug",
        "z": "2b8628df.fdcca8",
        "name": "user near",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1260,
        "y": 180,
        "wires": []
    },
    {
        "id": "d1901604.d1e3a8",
        "type": "debug",
        "z": "2b8628df.fdcca8",
        "name": "user result",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1820,
        "y": 180,
        "wires": []
    },
    {
        "id": "3eff4b32.9114b4",
        "type": "subflow:465e67f.6ebf598",
        "z": "128790f6.dee0df",
        "x": 1600,
        "y": 400,
        "wires": []
    },
    {
        "id": "c60831ef.7bc3a",
        "type": "function",
        "z": "1bbd6687.58eae9",
        "name": "geo?",
        "func": "var t = msg.i18n;\nif (msg.status === 'OK') {\n    return [msg, null];\n} else {\n    var noti = {};\n    noti.payload = {};\n    noti.payload.chatId = msg.chatId;\n    noti.payload.type = \"message\";\n    noti.i18n = msg.i18n;\n    noti.payload.content = t(\"Lo siento, no podemos localizar ese lugar\");\n    return [null, noti];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 250,
        "y": 80,
        "wires": [
            [],
            [
                "1c7bb3.5a30b44e"
            ]
        ],
        "outputLabels": [
            "geo",
            "failed to geo"
        ]
    },
    {
        "id": "1c7bb3.5a30b44e",
        "type": "subflow:c6a40c11.dfc6b",
        "z": "1bbd6687.58eae9",
        "x": 390,
        "y": 180,
        "wires": []
    },
    {
        "id": "b9c8c0db.ee0be",
        "type": "subflow:1bbd6687.58eae9",
        "z": "bfeff5b6.e5f178",
        "name": "",
        "x": 1050,
        "y": 100,
        "wires": [
            [
                "6d492c2d.a26024"
            ]
        ]
    },
    {
        "id": "daebf6ef.f07908",
        "type": "subflow:1bbd6687.58eae9",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1610,
        "y": 540,
        "wires": [
            [
                "70cddff9.2dbfb"
            ]
        ]
    },
    {
        "id": "d5cbb344.cf8db",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "counter",
        "func": "c = context.get('counter') || 0;\nc += 1;\ncontext.set('counter', c);\n\nnode.status({fill:\"green\",shape:\"ring\",text:c});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 200,
        "wires": [
            [
                "6906bc92.3ea1d4",
                "c3cd9894.0f4098"
            ]
        ]
    },
    {
        "id": "2e950a20.784d56",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 60,
        "wires": [
            [
                "36d5ed85.92faa2"
            ]
        ]
    },
    {
        "id": "36d5ed85.92faa2",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "counter no reset",
        "func": "c = context.get('counter') || 0;\nc += 1;\ncontext.set('counter', c);\n\nnode.status({fill:\"green\",shape:\"dot\",text:c});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "90683393.0463b",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "detect lang change",
        "func": "if (msg.payload.content &&\n    msg.payload.content.match(/^[♥⬅️📖📣🔥📣📝📍📝]+ .*/)) {\n    node.log(\"Detect lang changed\");\n    return [null, msg];\n}\nelse \n    return [msg, null];",
        "outputs": "2",
        "noerr": 0,
        "x": 770,
        "y": 60,
        "wires": [
            [],
            [
                "d1767c0c.2aaad",
                "54be8ab0.25fa74"
            ]
        ]
    },
    {
        "id": "54be8ab0.25fa74",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "all",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 990,
        "y": 100,
        "wires": []
    },
    {
        "id": "d1767c0c.2aaad",
        "type": "subflow:76bd701f.29d0f",
        "z": "5501c3cc.11327c",
        "x": 990,
        "y": 60,
        "wires": []
    },
    {
        "id": "59bde767.a4c4a8",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test something",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 414.00000190734863,
        "wires": [
            []
        ]
    },
    {
        "id": "427cb9c9.0ef938",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 414.00000190734863,
        "wires": [
            [
                "59bde767.a4c4a8"
            ]
        ]
    },
    {
        "id": "77e79521.bcb3bc",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "use lang",
        "func": "var en = msg.i18n;\nnode.log(\"en: \" + typeof en + \" \" + en('Desuscribirme'));\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 414.00000190734863,
        "wires": [
            []
        ]
    },
    {
        "id": "4be8c098.1e6e5",
        "type": "comment",
        "z": "93cb4937.6fc068",
        "name": "lang response",
        "info": "",
        "x": 110,
        "y": 1320,
        "wires": []
    },
    {
        "id": "e2d3ccae.d4b75",
        "type": "comment",
        "z": "93cb4937.6fc068",
        "name": "new fire response",
        "info": "",
        "x": 130,
        "y": 1540,
        "wires": []
    },
    {
        "id": "885ee90f.2464f8",
        "type": "comment",
        "z": "95e78a8b.50a428",
        "name": "users notifications are removed everyday",
        "info": "",
        "x": 200,
        "y": 160,
        "wires": []
    },
    {
        "id": "9b050a0a.961c38",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "on/off",
        "func": "var c = context.get('switch') || false;\n\nvar update = function (c) {\n    node.status({fill:c? \"green\": \"red\",shape: c? \"dot\":\"ring\", text: c? \"on\": \"off\"});\n}\n\nif (msg.payload.switch) {\n    c = !c;\n    context.set('switch', c);\n    update(c);\n} else {\n    update(c);\n    if (c) {\n        return msg;\n    }    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 534.0000019073486,
        "wires": [
            [
                "785425b4.1d028c"
            ]
        ]
    },
    {
        "id": "6ade62.c8bf51a",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "on/off",
        "topic": "",
        "payload": "{\"switch\":true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 330,
        "y": 474.00000190734863,
        "wires": [
            [
                "9b050a0a.961c38"
            ]
        ]
    },
    {
        "id": "8b3df4e9.c08ec8",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "Hello!",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 330,
        "y": 534.0000019073486,
        "wires": [
            [
                "9b050a0a.961c38"
            ]
        ]
    },
    {
        "id": "785425b4.1d028c",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 650,
        "y": 534.0000019073486,
        "wires": []
    },
    {
        "id": "16c436c8.0c8dc9",
        "type": "subflow:4384af8e.a7409",
        "z": "93cb4937.6fc068",
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "7d6a8c23.8b1694"
            ]
        ]
    },
    {
        "id": "35d1de38.e04672",
        "type": "subflow:4384af8e.a7409",
        "z": "93cb4937.6fc068",
        "x": 270,
        "y": 800,
        "wires": [
            [
                "829ed9c9.8cd588"
            ]
        ]
    },
    {
        "id": "269ca556.b7a1ba",
        "type": "subflow:4384af8e.a7409",
        "z": "93cb4937.6fc068",
        "x": 320,
        "y": 680,
        "wires": [
            [
                "1292920f.64d29e"
            ]
        ]
    },
    {
        "id": "95b8009f.b410c",
        "type": "function",
        "z": "557e0255.d1220c",
        "name": "input msg test",
        "func": "var chatId = 9998999;\nvar rec = msg.payload;\n\nmsg.payload = {\n    \"chatId\": chatId,\n    \"messageId\":99999,\n    \"type\": \"message\",\n    \"content\":\"\"\n    };\nmsg.originalMessage = {\n    \"message_id\":99999,\n    \"from\": {\n        \"id\": chatId,\n        \"is_bot\":false,\n        \"first_name\":\"testnick\",\n        \"username\":\"test_nick\",\n        \"language_code\": \"es-ES\"},\n        \"chat\": {\n            \"id\": chatId,\n            \"first_name\":\"testnick\",\n            \"username\": \"test_nick\",\n            \"type\": \"private\"\n        },\"date\":1510102651,\n        \"text\": rec,\n        \"entities\":[{\"offset\":0,\"length\":6,\"type\":\"bot_command\"}]\n};\n\nif (rec === \"/start\") {\n    context.global.keyboardlang = { pending : false };\n    return [msg, null, null, null];\n} else if (rec === \"/lang\") {\n    context.global.keyboardlang = { pending : false };\n    return [null, msg, null, null];\n} else if (rec === \"location\") {\n    msg.payload = {\"chatId\":chatId,\"messageId\":11563,\"type\":\"location\",\"content\":{\"latitude\":21.197681,\"longitude\":-13.312859}};\n    return [null, null, msg, null];\n} else if (rec === \"\") {\n    msg.payload = \"Ready!\\n\";\n    return [null, null, null, msg];\n} else {\n    msg.payload.content = rec;\n    return [null, null, msg, null];\n}\n\n/*\n{\"payload\":{\"chatId\":4885772,\"messageId\":11563,\"type\":\"location\",\"content\":{\"latitude\":21.197681,\"longitude\":-13.312859}},\"originalMessage\":{\"message_id\":11563,\"from\":{\"id\":4885772,\"is_bot\":false,\"first_name\":\"vjrj\",\"username\":\"vj_rj\",\"language_code\":\"es-ES\"},\"chat\":{\"id\":4885772,\"first_name\":\"vjrj\",\"username\":\"vj_rj\",\"type\":\"private\"},\"date\":1510114140,\"reply_to_message\":{\"message_id\":11562,\"from\":{\"id\":457126364,\"is_bot\":true,\"first_name\":\"¡Tod@s contra el Desarrollo!\",\"username\":\"rednodetest_bot\"},\"chat\":{\"id\":4885772,\"first_name\":\"vjrj\",\"username\":\"vj_rj\",\"type\":\"private\"},\"date\":1510114109,\"text\":\"Indica cal a posición a vixiar (por ex. a túa aldea, rúa, vivenda,  etc). Se estás a utilizar un móbil podes anexar tamén unha localización premendo no clip\"},\"location\":{\"latitude\":21.197681,\"longitude\":-13.312859}},\"_msgid\":\"872d3ee7.01903\"} */\n/* REAL one:\n{\"payload\": {\n    \"chatId\":7777777,\n    \"messageId\":11442,\n    \"type\": \"message\",\n    \"content\":\"\"\n    },\n\"originalMessage\":{\n    \"message_id\":11442,\n    \"from\": {\n        \"id\":7777777,\n        \"is_bot\":false,\n        \"first_name\":\"somenick\",\n        \"username\":\"some_nick\",\n        \"language_code\": \"es-ES\"},\n        \"chat\": {\n            \"id\":7777777,\n            \"first_name\":\"somenick\",\n            \"username\": \"some_nick\",\n            \"type\": \"private\"\n        },\"date\":1510102651,\n        \"text\":\"/start\",\n        \"entities\":[{\"offset\":0,\"length\":6,\"type\":\"bot_command\"}]\n    },\n\"_msgid\":\"79e9eba6.722994\"\n} */",
        "outputs": "4",
        "noerr": 0,
        "x": 340,
        "y": 80,
        "wires": [
            [
                "e2056e63.a9e84"
            ],
            [],
            [],
            [
                "6604bcf8.bf3a84"
            ]
        ],
        "outputLabels": [
            "start",
            "lang",
            "others",
            "ack"
        ]
    },
    {
        "id": "dadeaa31.8d2c18",
        "type": "function",
        "z": "fe0c8b72.8a51a8",
        "name": "is a test?",
        "func": "if (msg.payload && msg.payload.chatId === 9998999) {\n    // Is a test message, print output in payload for send via tcp\n    if (msg.payload && msg.payload.content) {\n        var cnt = msg.payload.content;\n        var pay = msg.payload;\n        msg.payload = cnt + \"\\n\";\n        \n        if (pay.options && pay.options.reply_markup) {\n            var reply = JSON.parse(pay.options.reply_markup);\n            var keys = reply.keyboard || reply.inline_keyboard;\n            if (keys) {\n                for (var i = 0; i < keys.length; i++) {\n                    if (Array.isArray(keys[i])) {\n                        for (var j = 0; j < keys[i].length; j++) {\n                            msg.payload += \"[\" + keys[i][j].text + \"]\";\n                        }\n                        msg.payload += \"\\n\";\n                    } else {\n                        msg.payload += \"[\" + keys[i].text + \"]\";\n                    }\n                }\n                //msg.payload += \"\\n\";\n            }\n            //msg.payload += \"\\n\";\n        }\n    } else {\n        msg.payload = \"ack\\n\";\n    }\n    return [null, msg];\n} else {\n    return [msg, null];\n}\n    /* Real\n    payload: {\n            \"content\": \"Elige una de las opciones:\",\"chatId\":4885772,\"type\":\"message\",\"options\":{\"reply_markup\":\"{\\\"keyboard\\\":[[{\\\"text\\\":\\\"📣 Suscrito a nuevos fuegos\\\"}],[{\\\"text\\\":\\\"Desuscribirme\\\"},{\\\"text\\\":\\\"🔥 Notificar un fuego nuevo\\\"}],[{\\\"text\\\":\\\"♥ Apoya esta iniciativa\\\"},{\\\"text\\\":\\\"📖 Más info\\\"}]],\\\"resize_keyboard\\\":true}\",\"disable_notification\":true}} \n            }\n        */\n  /*      \n        var opts = {\n  // reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    force_reply: true,\n    keyboard: [ \n        [{text: t('a 5 km')}, {text: t('a 10 km')}],\n        [{text: t('a 20 km')}, {text: t('a 40 km')} ],\n        [{text: t('a 100 km')}, {text: t('⬅️ Cancelar')} ]],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n*/",
        "outputs": "2",
        "noerr": 0,
        "x": 220,
        "y": 60,
        "wires": [
            [],
            [
                "c1c4b1a2.fcf2f"
            ]
        ],
        "outputLabels": [
            "real msg",
            "test msg"
        ]
    },
    {
        "id": "4e437841.9b8a58",
        "type": "debug",
        "z": "76bd701f.29d0f",
        "name": "start output",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1290,
        "y": 160,
        "wires": []
    },
    {
        "id": "c1c4b1a2.fcf2f",
        "type": "tcp out",
        "z": "fe0c8b72.8a51a8",
        "host": "",
        "port": "6789",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "name": "tcp :6789",
        "x": 400,
        "y": 120,
        "wires": []
    },
    {
        "id": "5fb93052.0736a",
        "type": "debug",
        "z": "fe0c8b72.8a51a8",
        "name": "tcp out",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 390,
        "y": 160,
        "wires": []
    },
    {
        "id": "f3418b4a.16c128",
        "type": "subflow:fe0c8b72.8a51a8",
        "z": "e81a68fa.695e38",
        "name": "",
        "x": 240,
        "y": 40,
        "wires": [
            [
                "dd683e99.7c126"
            ]
        ]
    },
    {
        "id": "b870e649.02f3a8",
        "type": "subflow:e81a68fa.695e38",
        "z": "93cb4937.6fc068",
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "574b0512.1f89ac",
        "type": "subflow:e81a68fa.695e38",
        "z": "93cb4937.6fc068",
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "1e1d9c8f.87ccc3",
        "type": "subflow:e81a68fa.695e38",
        "z": "c6a40c11.dfc6b",
        "x": 490,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "aa2956c1.cdd168",
        "type": "subflow:e81a68fa.695e38",
        "z": "9968fcc5.ed33c",
        "x": 570,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9951a307.647d",
        "type": "subflow:e81a68fa.695e38",
        "z": "93cb4937.6fc068",
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "57988778.321178",
                "b052941e.4306e8"
            ]
        ]
    },
    {
        "id": "2b4ae0ff.b8f4a",
        "type": "link in",
        "z": "93cb4937.6fc068",
        "name": "/start",
        "links": [
            "e0c7d1c8.f4c64",
            "cfcc965c.921128"
        ],
        "x": 215,
        "y": 320,
        "wires": [
            [
                "55ebd8f8.436e38"
            ]
        ]
    },
    {
        "id": "73d9c14e.3f5d8",
        "type": "link in",
        "z": "93cb4937.6fc068",
        "name": "location",
        "links": [
            "ef39738e.0c383",
            "6d50e228.268eac"
        ],
        "x": 955,
        "y": 600,
        "wires": [
            [
                "349ef6f8.98e88a"
            ]
        ]
    },
    {
        "id": "89c5dc5e.6c881",
        "type": "link in",
        "z": "93cb4937.6fc068",
        "name": "other",
        "links": [
            "b77cd057.d584d",
            "da0408ba.8cc8b8"
        ],
        "x": 55,
        "y": 480,
        "wires": [
            [
                "11e83fb2.09a37"
            ]
        ]
    },
    {
        "id": "77f4e314.54a59c",
        "type": "link in",
        "z": "93cb4937.6fc068",
        "name": "lang",
        "links": [
            "4ec55575.36665c",
            "7f1d2825.26cab8",
            "e0417a.e678ee88"
        ],
        "x": 255,
        "y": 1200,
        "wires": [
            [
                "5e792abd.c19084"
            ]
        ]
    },
    {
        "id": "b53c3cf6.699f6",
        "type": "subflow:557e0255.d1220c",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 90,
        "y": 620,
        "wires": [
            [
                "e0c7d1c8.f4c64"
            ],
            [
                "4ec55575.36665c"
            ],
            [
                "ef39738e.0c383",
                "b77cd057.d584d",
                "849e7348.7e94c"
            ]
        ]
    },
    {
        "id": "e0c7d1c8.f4c64",
        "type": "link out",
        "z": "93cb4937.6fc068",
        "name": "/start",
        "links": [
            "2b4ae0ff.b8f4a"
        ],
        "x": 175,
        "y": 580,
        "wires": []
    },
    {
        "id": "ef39738e.0c383",
        "type": "link out",
        "z": "93cb4937.6fc068",
        "name": "",
        "links": [
            "73d9c14e.3f5d8"
        ],
        "x": 195,
        "y": 620,
        "wires": []
    },
    {
        "id": "b77cd057.d584d",
        "type": "link out",
        "z": "93cb4937.6fc068",
        "name": "other",
        "links": [
            "89c5dc5e.6c881"
        ],
        "x": 195,
        "y": 680,
        "wires": []
    },
    {
        "id": "4ec55575.36665c",
        "type": "link out",
        "z": "93cb4937.6fc068",
        "name": "lang",
        "links": [
            "77f4e314.54a59c"
        ],
        "x": 215,
        "y": 600,
        "wires": []
    },
    {
        "id": "849e7348.7e94c",
        "type": "link out",
        "z": "93cb4937.6fc068",
        "name": "lang resp",
        "links": [
            "f4ebe282.6a894"
        ],
        "x": 215,
        "y": 640,
        "wires": []
    },
    {
        "id": "99d32045.c775e",
        "type": "inject",
        "z": "93cb4937.6fc068",
        "name": "update stats",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1900,
        "wires": [
            [
                "6cb0558a.3408bc"
            ]
        ]
    },
    {
        "id": "8be77355.e4b82",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "current susc",
        "func": "msg.payload = {};\nmsg.collection = \"subscriptions\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1840,
        "wires": [
            [
                "37ad51e8.5a665e"
            ]
        ]
    },
    {
        "id": "df3b630.a229ea",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "count susc",
        "func": "var newMsg = {\n    payload : {\n        name: \"numsus\"\n    },\n    projection: { \n        value: \n        1\n        \n    }\n};\nnewMsg.collection = \"fstats\";\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1880,
        "wires": [
            [
                "c84b4c60.464b8"
            ]
        ]
    },
    {
        "id": "39f43b07.3083e4",
        "type": "ui_text",
        "z": "93cb4937.6fc068",
        "group": "601660c.cd104a",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "sus",
        "label": "Suscripciones en el tiempo",
        "format": "{{msg.payload[0].value}}",
        "layout": "row-spread",
        "x": 950,
        "y": 1880,
        "wires": []
    },
    {
        "id": "58ad5a16.021874",
        "type": "ui_text",
        "z": "93cb4937.6fc068",
        "group": "601660c.cd104a",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "subs real",
        "label": "Subscripciones actuales",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 960,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6e94e3ec.29eafc",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "count susc",
        "func": "var newMsg = {\n    payload : {\n        name: \"numdesus\"\n    },\n    projection: { \n        value: \n        1\n        \n    }\n};\nnewMsg.collection = \"fstats\";\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1920,
        "wires": [
            [
                "1ea5e961.92d277"
            ]
        ]
    },
    {
        "id": "92dfe851.a1b278",
        "type": "ui_text",
        "z": "93cb4937.6fc068",
        "group": "601660c.cd104a",
        "order": 18,
        "width": 0,
        "height": 0,
        "name": "desus",
        "label": "Desucripciones",
        "format": "{{msg.payload[0].value}}",
        "layout": "row-spread",
        "x": 950,
        "y": 1920,
        "wires": []
    },
    {
        "id": "28213612.28e18a",
        "type": "ui_text",
        "z": "93cb4937.6fc068",
        "group": "601660c.cd104a",
        "order": 19,
        "width": 0,
        "height": 0,
        "name": "avisos",
        "label": "Avisos recibidos",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 950,
        "y": 2000,
        "wires": []
    },
    {
        "id": "2cb7dc7e.180204",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "count avisos",
        "func": "msg.payload = {};\nmsg.collection = \"avisosfuego\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 2000,
        "wires": [
            [
                "e1171d99.ae10e"
            ]
        ]
    },
    {
        "id": "61f539b5.950d08",
        "type": "ui_chart",
        "z": "93cb4937.6fc068",
        "name": "daily alerts",
        "group": "601660c.cd104a",
        "order": 8,
        "width": "0",
        "height": "0",
        "label": "Avisos diarios",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 960,
        "y": 2040,
        "wires": [
            [
                "c36fe8.87636018"
            ],
            []
        ]
    },
    {
        "id": "997b33bf.c90ae",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "alertas hoy",
        "func": "var today = context.global.moment(new Date()).format('YYYYMMDD');\nmsg.payload = {\n    dateformat: today\n};\nmsg.collection = \"avisosfuego\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 2040,
        "wires": [
            [
                "d544e3ec.6be83"
            ]
        ]
    },
    {
        "id": "c36fe8.87636018",
        "type": "persist in",
        "z": "93cb4937.6fc068",
        "name": "dayly-file-alerts",
        "storageNode": "103d89d5.f04ab6",
        "x": 1140,
        "y": 2040,
        "wires": []
    },
    {
        "id": "64e6a443.2ab69c",
        "type": "persist out",
        "z": "93cb4937.6fc068",
        "name": "dayly-file-alerts",
        "storageNode": "103d89d5.f04ab6",
        "x": 980,
        "y": 2080,
        "wires": [
            [
                "61f539b5.950d08"
            ]
        ]
    },
    {
        "id": "fdcc349d.ccb418",
        "type": "ui_chart",
        "z": "93cb4937.6fc068",
        "name": "subs to dash",
        "group": "601660c.cd104a",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Suscripciones",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1130,
        "y": 1840,
        "wires": [
            [
                "b6ba07c8.358c38"
            ],
            []
        ]
    },
    {
        "id": "d5c8bece.6075c",
        "type": "persist out",
        "z": "93cb4937.6fc068",
        "name": "suscriptions-in-time",
        "storageNode": "cb34ee3.be2b31",
        "x": 1150,
        "y": 1880,
        "wires": [
            [
                "fdcc349d.ccb418"
            ]
        ]
    },
    {
        "id": "b6ba07c8.358c38",
        "type": "persist in",
        "z": "93cb4937.6fc068",
        "name": "suscriptions-in-time",
        "storageNode": "cb34ee3.be2b31",
        "x": 1330,
        "y": 1840,
        "wires": []
    },
    {
        "id": "b2e2ccf3.f0498",
        "type": "subflow:e81a68fa.695e38",
        "z": "76bd701f.29d0f",
        "name": "",
        "x": 1270,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9cc764dc.591728",
        "type": "subflow:e81a68fa.695e38",
        "z": "93cb4937.6fc068",
        "x": 690,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "eda1038.09ff8",
        "type": "subflow:e81a68fa.695e38",
        "z": "c644db46.3854c8",
        "x": 1480,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "320b1cf9.d609d4",
        "type": "subflow:e81a68fa.695e38",
        "z": "bfeff5b6.e5f178",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "5c52af18.0b854"
            ]
        ]
    },
    {
        "id": "fdba8b7a.1a1b08",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "sus o fire?",
        "func": "var key = 'locationtopic-' + msg.payload.chatId;\nvar type = global.get(key);\nglobal.set(key, null);\nif (type == 'sus') {\n    return [msg, null];\n} else if (type == 'newfire') {\n    return [null, msg];\n}\nnode.error(\"Wrong location received for key: \" + key + \" type: \" + type);",
        "outputs": "2",
        "noerr": 0,
        "x": 1430,
        "y": 640,
        "wires": [
            [
                "10eb3fd5.6d416"
            ],
            [
                "d982859c.d8dea8"
            ]
        ],
        "outputLabels": [
            "sus",
            "fire"
        ]
    },
    {
        "id": "26070084.ca2db",
        "type": "switch",
        "z": "5501c3cc.11327c",
        "name": "susc o fuego?",
        "property": "locationtopic",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "sus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nuevofuego",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 140,
        "y": 614.0000019073486,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4617874.e42eb78",
        "type": "subflow:e81a68fa.695e38",
        "z": "156e20df.86399f",
        "x": 530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "307c3839.005448",
        "type": "subflow:e81a68fa.695e38",
        "z": "156e20df.86399f",
        "x": 710,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "eab4c7fe.fd7828",
        "type": "subflow:e81a68fa.695e38",
        "z": "2f0217a5.051978",
        "x": 1230,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "364970ea.3f564",
        "type": "subflow:e81a68fa.695e38",
        "z": "2f0217a5.051978",
        "x": 1230,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6604bcf8.bf3a84",
        "type": "tcp out",
        "z": "557e0255.d1220c",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "name": "tcp reply empty msgs",
        "x": 760,
        "y": 240,
        "wires": []
    },
    {
        "id": "e2056e63.a9e84",
        "type": "debug",
        "z": "557e0255.d1220c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 710,
        "y": 300,
        "wires": []
    },
    {
        "id": "5031ecc8.ccb184",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "catch error ----------------------",
        "active": true,
        "console": "true",
        "complete": "true",
        "x": 330,
        "y": 160,
        "wires": []
    },
    {
        "id": "2c822866.453948",
        "type": "catch",
        "z": "93cb4937.6fc068",
        "name": "catch all",
        "scope": null,
        "x": 100,
        "y": 160,
        "wires": [
            [
                "5031ecc8.ccb184"
            ]
        ]
    },
    {
        "id": "d35010eb.26fdd",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "set location",
        "func": "msg.chatId = msg.payload.chatId;\nvar content = msg.payload.content;\n\nmsg.location = {};\n\nif (content && content.latitude) {\n    // Is a shared location (clip)\n    msg.location.lat = content.latitude;\n    msg.location.lon = content.longitude;\n    return [null, msg];\n} else {\n    // Is a writen location\n    msg.address = content;\n    msg.location.address = content;\n    return [msg, null];\n}\n\nreturn msg;",
        "outputs": "2",
        "noerr": 0,
        "x": 1330,
        "y": 480,
        "wires": [
            [
                "bb4817df.01de48"
            ],
            []
        ],
        "outputLabels": [
            "address",
            "shared location"
        ]
    },
    {
        "id": "62f992fa.519cec",
        "type": "persist out",
        "z": "c8522537.c6f908",
        "name": "nasa-new-fire-actives",
        "storageNode": "9a28d188.bb94e",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "796f3781.151c38"
            ]
        ]
    },
    {
        "id": "796f3781.151c38",
        "type": "ui_chart",
        "z": "c8522537.c6f908",
        "name": "count new",
        "group": "601660c.cd104a",
        "order": 4,
        "width": "0",
        "height": "0",
        "label": "Fuegos activos nuevos",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 430,
        "y": 40,
        "wires": [
            [
                "67495f5f.e8643"
            ],
            []
        ]
    },
    {
        "id": "67495f5f.e8643",
        "type": "persist in",
        "z": "c8522537.c6f908",
        "name": "nasa-new-fire-actives",
        "storageNode": "9a28d188.bb94e",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "8d910d3f.7ff39",
        "type": "function",
        "z": "c8522537.c6f908",
        "name": "count active",
        "func": "if (Array.isArray(msg.payload)) {\n    var newMsg  = {\n        payload: msg.payload.length,\n        topic: \"Fuegos activos nuevos\" //  (\" + msg.type + \")\"\n    };\n    return newMsg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 40,
        "wires": [
            [
                "796f3781.151c38"
            ]
        ]
    },
    {
        "id": "17c09c20.9d4a84",
        "type": "function",
        "z": "2f0217a5.051978",
        "name": "find fire",
        "func": "if (msg.originalMessage && \n    msg.originalMessage.reply_to_message &&\n    msg.originalMessage.reply_to_message.location) {\n    var lon = msg.originalMessage.reply_to_message.location.longitude;\n    var lat = msg.originalMessage.reply_to_message.location.latitude;\n    var find = {};\n    find.payload = {\n    ourid:\n       { $near : {\n            $geometry: { \n                type: \"Point\",  \n                coordinates: [lon, lat]\n            },\n            $minDistance: 0,\n            $maxDistance: 50\n          }\n        },\n    };\n    find.originalMessage = msg.originalMessage;\n    find.chatId = msg.payload.chatId;\n    find.i18n = msg.i18n;\n    find.collection = \"activefires\";\n    return find;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 60,
        "wires": [
            [
                "e4ab6e6b.fef9"
            ]
        ]
    },
    {
        "id": "557a9912.ee75e8",
        "type": "switch",
        "z": "2f0217a5.051978",
        "name": "nasa fire?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 560,
        "y": 60,
        "wires": [
            [
                "280900e5.654d3"
            ],
            [
                "a30ccf58.3a1e"
            ]
        ]
    },
    {
        "id": "280900e5.654d3",
        "type": "function",
        "z": "2f0217a5.051978",
        "name": "not active!",
        "func": "var t = msg.i18n;\n\nvar thx = {};\nthx.payload = {};\nthx.payload.type = \"message\";\nthx.payload.chatId = msg.chatId;\nthx.payload.content = t(\"No tenemos registrado un fuego activo en ese lugar\");\nreturn thx;",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "2b5fa53f.8b255a"
            ]
        ]
    },
    {
        "id": "2b5fa53f.8b255a",
        "type": "subflow:e81a68fa.695e38",
        "z": "2f0217a5.051978",
        "x": 1230,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "55e258a.51dd4a8",
        "type": "debug",
        "z": "2f0217a5.051978",
        "name": "find nasa 1",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "7efc5567.7d712c",
        "type": "debug",
        "z": "2f0217a5.051978",
        "name": "find false positive",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 690,
        "y": 280,
        "wires": []
    },
    {
        "id": "ceeae061.7eb55",
        "type": "debug",
        "z": "2f0217a5.051978",
        "name": "false positive count",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "1041069a.2c84b9",
        "type": "subflow:95e78a8b.50a428",
        "z": "2b8628df.fdcca8",
        "name": "node-admin",
        "x": 2010,
        "y": 240,
        "wires": []
    },
    {
        "id": "430ec153.ed1f8",
        "type": "comment",
        "z": "95e78a8b.50a428",
        "name": "msg.payload.location and chatId for user info",
        "info": "",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "a8447ee4.5f9bc",
        "type": "subflow:465e67f.6ebf598",
        "z": "95e78a8b.50a428",
        "x": 1922.0000114440918,
        "y": 79.99999809265137,
        "wires": []
    },
    {
        "id": "59bd465d.f6ae48",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test active fires",
        "func": "var type = \"viirs\";\nvar collection = \"activefires\"; // + type; // to detect new fires \nvar now = global.get('lastact');\nvar newfires = {};\nnewfires.type = type;\nnewfires.collection = collection;\nnewfires.payload = {\n    createdAt: new Date(now)\n};\nreturn newfires;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 540,
        "y": 694.0000019073486,
        "wires": [
            [
                "3f6a0233.81338e"
            ]
        ],
        "outputLabels": [
            "update/save"
        ]
    },
    {
        "id": "e6581364.42858",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 340,
        "y": 694.0000019073486,
        "wires": [
            [
                "59bd465d.f6ae48"
            ]
        ]
    },
    {
        "id": "10e6ffe2.fab67",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 810,
        "y": 794.0000019073486,
        "wires": []
    },
    {
        "id": "26b36dd6.0fc162",
        "type": "debug",
        "z": "128790f6.dee0df",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1010,
        "y": 260,
        "wires": []
    },
    {
        "id": "bff4fef3.9fe3e",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "on/off",
        "func": "var c = context.get('switch') || false;\n\nvar update = function (c) {\n    node.status({fill:c? \"green\": \"red\",shape: c? \"dot\":\"ring\", text: c? \"on\": \"off\"});\n}\n\nif (msg.payload.switch) {\n    c = !c;\n    context.set('switch', c);\n    update(c);\n} else {\n    update(c);\n    if (c) {\n        return msg;\n    }    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 340,
        "wires": [
            [
                "3eff4b32.9114b4"
            ]
        ]
    },
    {
        "id": "6767dc05.9d1a14",
        "type": "inject",
        "z": "128790f6.dee0df",
        "name": "on/off",
        "topic": "",
        "payload": "{\"switch\":true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1230,
        "y": 400,
        "wires": [
            [
                "bff4fef3.9fe3e"
            ]
        ]
    },
    {
        "id": "c3cd9894.0f4098",
        "type": "debug",
        "z": "128790f6.dee0df",
        "name": "send to chatId",
        "active": true,
        "console": "false",
        "complete": "payload.chatId",
        "x": 1400,
        "y": 240,
        "wires": []
    },
    {
        "id": "54968e5b.432b1",
        "type": "mongodb2 in",
        "z": "11cb3f4d.6e0081",
        "service": "_ext_",
        "configNode": "d5287e69.2b449",
        "name": "bulkWrite",
        "collection": "",
        "operation": "bulkWrite",
        "x": 400,
        "y": 140,
        "wires": [
            [
                "9c69454c.af1928"
            ]
        ]
    },
    {
        "id": "35871943.67ee96",
        "type": "debug",
        "z": "11cb3f4d.6e0081",
        "name": "update",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "2f350204.d4c09e",
        "type": "mongodb2 in",
        "z": "11cb3f4d.6e0081",
        "service": "_ext_",
        "configNode": "d5287e69.2b449",
        "name": "deleteMany",
        "collection": "",
        "operation": "deleteMany",
        "x": 790,
        "y": 140,
        "wires": [
            [
                "3150215a.5e429e"
            ]
        ]
    },
    {
        "id": "e548f509.8b1958",
        "type": "mongodb2 in",
        "z": "11cb3f4d.6e0081",
        "service": "_ext_",
        "configNode": "d5287e69.2b449",
        "name": "find",
        "collection": "",
        "operation": "find.toArray",
        "x": 1190,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6c4b8a1f.1c02a4",
        "type": "debug",
        "z": "11cb3f4d.6e0081",
        "name": "find all",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1390,
        "y": 260,
        "wires": []
    },
    {
        "id": "e58b1a65.b4b888",
        "type": "debug",
        "z": "11cb3f4d.6e0081",
        "name": "del",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 180,
        "wires": []
    },
    {
        "id": "9c69454c.af1928",
        "type": "function",
        "z": "11cb3f4d.6e0081",
        "name": "del not active fires",
        "func": "if (msg.payload.ok || !msg.error) {\n    // var type = flow.get('type');\n    var now = global.get('active-now');\n    var collection = flow.get('active-collection');\n    var type = flow.get('active-type');\n    \n    // del not active fires\n    var del = {};\n    del.collection = collection;\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#deleteMany\n    // deleteMany(filter, options, callback)\n    del.payload = [{updatedAt: {$ne: now}, type: type}, null];\n    return del;\n} else {\n    node.log(\"Error in update\" + msg.error);\n    return msg;\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "2f350204.d4c09e"
            ]
        ]
    },
    {
        "id": "3150215a.5e429e",
        "type": "function",
        "z": "11cb3f4d.6e0081",
        "name": "find new active fires",
        "func": "if (msg.payload.ok || !msg.error) {\n    var type = msg.type;\n    var now = global.get('active-now');\n    global.set('active-now', null); // we disable timestamp to semaphore deadlock detection\n    var type = flow.get('active-type');\n    var collection = flow.get('active-collection');\n    \n    var newfires = {};\n    newfires.type = type;\n    newfires.collection = collection;\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#find\n    newfires.payload = [{ createdAt: now, type: type }];\n    return newfires;\n} else {\n    node.log(\"Error in deletion\" + msg.error);\n    return msg;\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 1000,
        "y": 140,
        "wires": [
            [
                "e548f509.8b1958"
            ]
        ]
    },
    {
        "id": "c37e7408.e43de8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "detect lang change",
        "func": "if (msg.payload.content &&\n    msg.payload.content.match(/^[♥⬅️📖📣🔥📣📝📍📝]+ .*/)) {\n    node.log(\"Detect lang changed\");\n    return msg;\n}\n",
        "outputs": "1",
        "noerr": 0,
        "x": 610,
        "y": 1020,
        "wires": [
            [
                "63abfabd.c35504",
                "87d143dc.3e3b3"
            ]
        ]
    },
    {
        "id": "87d143dc.3e3b3",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "lang changed?",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 880,
        "y": 1060,
        "wires": []
    },
    {
        "id": "63abfabd.c35504",
        "type": "subflow:76bd701f.29d0f",
        "z": "93cb4937.6fc068",
        "x": 850,
        "y": 1020,
        "wires": []
    },
    {
        "id": "765fb9d8.730558",
        "type": "e-mail",
        "z": "5501c3cc.11327c",
        "server": "selver.comunes.org",
        "port": "587",
        "secure": false,
        "name": "",
        "dname": "send email",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "e4fc71c5.ae308",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test email",
        "func": "        var email = {};\n        email.topic = \"Test email\";\n        email.payload = \"Pues eso...\";\n        return email;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 120,
        "wires": [
            [
                "eefbb122.72c71"
            ]
        ]
    },
    {
        "id": "2c31df23.b95e6",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "e4fc71c5.ae308"
            ]
        ]
    },
    {
        "id": "f78bdf2e.e07e8",
        "type": "subflow:76bd701f.29d0f",
        "z": "5501c3cc.11327c",
        "x": 470,
        "y": 174.00000190734863,
        "wires": []
    },
    {
        "id": "4e9c6a21.dbe994",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 174.00000190734863,
        "wires": [
            [
                "c9213523.ff07b8"
            ]
        ]
    },
    {
        "id": "c9213523.ff07b8",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test msg",
        "func": "var m = {}\nm.payload = {};\nm.chatId = 4885772;\nm.payload.chatId = 4885772;\nm.payload.content = \"<code>Lalal ↖↗↘↙⬆⬇⬅➡</code>\";\nm.payload.type = \"message\";\nm.payload.options = {};\nm.payload.options.parse_mode = \"HTML\";\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 171,
        "wires": [
            [
                "37453c0b.19dd74"
            ]
        ]
    },
    {
        "id": "cbe6ee70.2be05",
        "type": "debug",
        "z": "76bd701f.29d0f",
        "name": "all after lang",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 570,
        "y": 140,
        "wires": []
    },
    {
        "id": "e5f28b05.bf6ea8",
        "type": "debug",
        "z": "76bd701f.29d0f",
        "name": "subs",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 910,
        "y": 40,
        "wires": []
    },
    {
        "id": "79f1e71d.6acff8",
        "type": "debug",
        "z": "76bd701f.29d0f",
        "name": "all before lang",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 460,
        "y": 60,
        "wires": []
    },
    {
        "id": "7bba7c0.77e4f84",
        "type": "subflow:76bd701f.29d0f",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1210,
        "y": 580,
        "wires": []
    },
    {
        "id": "fa14bb16.1c3248",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "new fire",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 580,
        "y": 680,
        "wires": []
    },
    {
        "id": "c46a6a2.a934698",
        "type": "assert",
        "z": "4384af8e.a7409",
        "name": "assert setLang",
        "rules": [
            {
                "property": "payload.chatId",
                "propertyType": "msg",
                "type": "eq",
                "value": "payload-assert.chatId",
                "valueType": "flow",
                "failMsg": "Wrong chatId returned after lang setting"
            },
            {
                "property": "lang",
                "propertyType": "msg",
                "type": "type",
                "value": "string",
                "failMsg": "Wrong lang returned after lang setting"
            },
            {
                "property": "payload.content",
                "propertyType": "msg",
                "type": "eq",
                "value": "payload-assert.content",
                "valueType": "flow",
                "failMsg": "Wrong content returned after lang setting"
            },
            {
                "property": "chatId",
                "propertyType": "msg",
                "type": "eq",
                "value": "payload-assert.chatId",
                "valueType": "flow",
                "failMsg": "Wrong mgs.chatId"
            }
        ],
        "x": 1730.0000076293945,
        "y": 223.00000190734863,
        "wires": [
            [
                "e39f3d19.34c0f"
            ]
        ]
    },
    {
        "id": "e11dde1f.ea412",
        "type": "Cache out",
        "z": "4384af8e.a7409",
        "name": "chadId-lang-cache",
        "cache": "488013b6.1183ec",
        "keyType": "msg",
        "keyProperty": "chatId",
        "valueType": "msg",
        "valueProperty": "lang",
        "ttlType": "msg",
        "ttlProperty": "",
        "useString": false,
        "x": 1740.0000076293945,
        "y": 83.00000190734863,
        "wires": []
    },
    {
        "id": "593e8a9f.d2fd54",
        "type": "assert",
        "z": "5501c3cc.11327c",
        "name": "Payload < 100",
        "rules": [
            {
                "property": "payload",
                "propertyType": "msg",
                "type": "lt",
                "value": "100",
                "valueType": "num",
                "failMsg": ""
            }
        ],
        "x": 342,
        "y": 771.0000019073486,
        "wires": [
            [
                "7f762f9d.71602"
            ]
        ]
    },
    {
        "id": "7f762f9d.71602",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 590,
        "y": 774.0000019073486,
        "wires": []
    },
    {
        "id": "4d49b9c8.a65f18",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 92,
        "y": 769.0000019073486,
        "wires": [
            [
                "593e8a9f.d2fd54"
            ]
        ]
    },
    {
        "id": "8a57658e.867158",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "150",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 92,
        "y": 831.0000019073486,
        "wires": [
            [
                "593e8a9f.d2fd54"
            ]
        ]
    },
    {
        "id": "1586a4b5.782b9b",
        "type": "assert",
        "z": "4384af8e.a7409",
        "name": "assert setI18n",
        "rules": [
            {
                "property": "payload.chatId",
                "propertyType": "msg",
                "type": "eq",
                "value": "payload-assert.chatId",
                "valueType": "flow",
                "failMsg": "Wrong chatId returned after lang setting"
            },
            {
                "property": "lang",
                "propertyType": "msg",
                "type": "type",
                "value": "string",
                "failMsg": "Wrong lang returned after lang setting"
            },
            {
                "property": "payload.content",
                "propertyType": "msg",
                "type": "eq",
                "value": "payload-assert.content",
                "valueType": "flow",
                "failMsg": "Wrong content returned after lang setting"
            },
            {
                "property": "i18n",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": ""
            },
            {
                "property": "chatId",
                "propertyType": "msg",
                "type": "eq",
                "value": "payload-assert.chatId",
                "valueType": "flow",
                "failMsg": "wrong msg.chatId"
            }
        ],
        "x": 2050.0000076293945,
        "y": 223.00000190734863,
        "wires": [
            []
        ]
    },
    {
        "id": "21c6b163.12e99e",
        "type": "function",
        "z": "76bd701f.29d0f",
        "name": "asserts",
        "func": "flow.set('payload-assert', msg.payload);\n// flow.set('chatId-assert', msg.chatId);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 120,
        "y": 100,
        "wires": [
            [
                "596d56e2.54f5e8"
            ]
        ]
    },
    {
        "id": "56722a87.7bd4b4",
        "type": "assert",
        "z": "76bd701f.29d0f",
        "name": "assert pre-start",
        "rules": [
            {
                "property": "originalPayload.content",
                "propertyType": "msg",
                "type": "eq",
                "value": "payload-assert.content",
                "valueType": "flow",
                "failMsg": "Wrong payload"
            },
            {
                "property": "chatId",
                "propertyType": "msg",
                "type": "type",
                "value": "number",
                "failMsg": "No chatId"
            },
            {
                "property": "i18n",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": ""
            },
            {
                "property": "payload",
                "propertyType": "msg",
                "type": "type",
                "value": "array",
                "failMsg": "Wrong subs result"
            },
            {
                "property": "originalPayload.chatId",
                "propertyType": "msg",
                "type": "eq",
                "value": "payload-assert.chatId",
                "valueType": "flow",
                "failMsg": ""
            }
        ],
        "x": 900,
        "y": 100,
        "wires": [
            [
                "875a7c37.8bb0a"
            ]
        ]
    },
    {
        "id": "da7e1a7c.19d3c8",
        "type": "assert",
        "z": "76bd701f.29d0f",
        "name": "assert initial-start",
        "rules": [],
        "x": 210,
        "y": 160,
        "wires": [
            [
                "21c6b163.12e99e"
            ]
        ]
    },
    {
        "id": "e0417a.e678ee88",
        "type": "link out",
        "z": "93cb4937.6fc068",
        "name": "lang",
        "links": [
            "77f4e314.54a59c"
        ],
        "x": 535,
        "y": 720,
        "wires": []
    },
    {
        "id": "a06c9e0.494806",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "counter",
        "func": "var c = context.get('counter') || false;\n\nvar update = function (c) {\n    node.status({fill:\"green\",shape:\"dot\",text:c});\n}\n\nif (msg.payload.counter) {\n    c = 0;\n    context.set('counter', c);\n    update(c);\n} else {\n    c += 1;\n    context.set('counter', c);\n    update(c);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 474.00000190734863,
        "wires": [
            [
                "15cc01b0.ff80be"
            ]
        ]
    },
    {
        "id": "53a9608e.e527a",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "reset",
        "topic": "",
        "payload": "{\"counter\":true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 770,
        "y": 414.00000190734863,
        "wires": [
            [
                "a06c9e0.494806"
            ]
        ]
    },
    {
        "id": "c1b4bd12.f0d9d",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "Hello!",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 770,
        "y": 474.00000190734863,
        "wires": [
            [
                "a06c9e0.494806"
            ]
        ]
    },
    {
        "id": "15cc01b0.ff80be",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1090,
        "y": 474.00000190734863,
        "wires": []
    },
    {
        "id": "83c851d.12e2ab",
        "type": "inject",
        "z": "93cb4937.6fc068",
        "name": "reset",
        "topic": "",
        "payload": "{\"counter\":true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 300,
        "wires": [
            [
                "17af36df.d20ff9"
            ]
        ]
    },
    {
        "id": "17af36df.d20ff9",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "counter",
        "func": "var c = context.get('counter') || false;\n\nvar update = function (c) {\n    node.status({fill:\"green\",shape:\"dot\",text:c});\n}\n\nif (msg.payload.counter) {\n    c = 0;\n    context.set('counter', c);\n    update(c);\n} else {\n    c += 1;\n    context.set('counter', c);\n    update(c);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "829ed9c9.8cd588",
        "type": "assert",
        "z": "93cb4937.6fc068",
        "name": "i18n",
        "rules": [
            {
                "property": "i18n",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": ""
            }
        ],
        "x": 390,
        "y": 800,
        "wires": [
            [
                "f3249bab.90eae8"
            ]
        ]
    },
    {
        "id": "83d02c40.cf2b6",
        "type": "assert",
        "z": "4384af8e.a7409",
        "name": "assert init-lang",
        "rules": [
            {
                "property": "payload.chatId",
                "propertyType": "msg",
                "type": "type",
                "value": "number",
                "failMsg": "Wrong chatId in lang enter"
            }
        ],
        "x": 410.00000762939453,
        "y": 103.00000190734863,
        "wires": [
            [
                "afdf0d2.1f75ef"
            ]
        ]
    },
    {
        "id": "71ddbc3a.d5e9a4",
        "type": "subflow:4384af8e.a7409",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 710,
        "y": 2400,
        "wires": [
            [
                "5983db7f.7b6614"
            ]
        ]
    },
    {
        "id": "2d3ed690.563dfa",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "show lang",
        "func": "var t = msg.i18n;\nvar m = {}\nm.payload = {};\nm.payload.chatId = msg.chatId;\nm.payload.content = \"Lenguaje \" + msg.lang + \", sample: \" + t('Desuscribirme') + ', ' + t('kmdistancia', {km: 99});\nm.payload.type = \"message\";\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 2420,
        "wires": [
            [
                "eee020eb.36a75"
            ]
        ]
    },
    {
        "id": "20f4d6ba.631d1a",
        "type": "subflow:e81a68fa.695e38",
        "z": "93cb4937.6fc068",
        "x": 1350,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "2f1fab9a.fbb754",
        "type": "telegram command",
        "z": "93cb4937.6fc068",
        "name": "/mylang",
        "command": "/mylang",
        "bot": "f93d1a38.c43218",
        "x": 80,
        "y": 2400,
        "wires": [
            [
                "c9679475.577988"
            ],
            []
        ]
    },
    {
        "id": "d7dd880.07c5d78",
        "type": "inject",
        "z": "93cb4937.6fc068",
        "name": "reset",
        "topic": "",
        "payload": "{\"counter\":true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 410,
        "y": 2460,
        "wires": [
            [
                "c9679475.577988",
                "5983db7f.7b6614",
                "eee020eb.36a75"
            ]
        ]
    },
    {
        "id": "c9679475.577988",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "counter",
        "func": "var c = context.get('counter') || false;\n\nvar update = function (c) {\n    node.status({fill:\"green\",shape:\"dot\",text:c});\n}\n\nif (msg.payload.counter) {\n    c = 0;\n    context.set('counter', c);\n    update(c);\n} else {\n    c += 1;\n    context.set('counter', c);\n    update(c);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 2400,
        "wires": [
            [
                "71ddbc3a.d5e9a4"
            ]
        ]
    },
    {
        "id": "eee020eb.36a75",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "counter",
        "func": "var c = context.get('counter') || false;\n\nvar update = function (c) {\n    node.status({fill:\"green\",shape:\"dot\",text:c});\n}\n\nif (msg.payload.counter) {\n    c = 0;\n    context.set('counter', c);\n    update(c);\n} else {\n    c += 1;\n    context.set('counter', c);\n    update(c);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 2420,
        "wires": [
            [
                "20f4d6ba.631d1a"
            ]
        ]
    },
    {
        "id": "5983db7f.7b6614",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "counter",
        "func": "var c = context.get('counter2') || false;\n\nvar update = function (c) {\n    node.status({fill:\"green\",shape:\"dot\",text:c});\n}\n\nif (msg.payload.counter) {\n    c = 0;\n    context.set('counter2', c);\n    update(c);\n} else {\n    c += 1;\n    context.set('counter2', c);\n    update(c);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 2420,
        "wires": [
            [
                "2d3ed690.563dfa"
            ]
        ]
    },
    {
        "id": "2c203b85.157434",
        "type": "subflow:c6a40c11.dfc6b",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1090,
        "y": 580,
        "wires": []
    },
    {
        "id": "b052941e.4306e8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "counter",
        "func": "var c = context.get('counter') || false;\n\nvar update = function (c) {\n    node.status({fill:\"green\",shape:\"dot\",text:c});\n}\n\nif (msg.payload.counter) {\n    c = 0;\n    context.set('counter', c);\n    update(c);\n} else {\n    c += 1;\n    context.set('counter', c);\n    update(c);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "ee894a30.ecb7c8",
        "type": "inject",
        "z": "93cb4937.6fc068",
        "name": "reset",
        "topic": "",
        "payload": "{\"counter\":true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1090,
        "y": 380,
        "wires": [
            [
                "b052941e.4306e8"
            ]
        ]
    },
    {
        "id": "f099bf63.3e489",
        "type": "debug",
        "z": "e81a68fa.695e38",
        "name": "send!",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 650,
        "y": 100,
        "wires": []
    },
    {
        "id": "90cc5a97.f73e08",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "d 300ms",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 920,
        "y": 560,
        "wires": [
            [
                "2c203b85.157434"
            ]
        ]
    },
    {
        "id": "882e4fb1.24e3a",
        "type": "inject",
        "z": "128790f6.dee0df",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "b6f75a8a.36fb18"
            ]
        ]
    },
    {
        "id": "b6f75a8a.36fb18",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "empty news - go /start",
        "func": "var news = {};\nnews.payload = {};\nnews.payload.content  = \"empty\";\n// this is me, for preview:\nnews.payload.chatId = 4885772;\nreturn news;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 120,
        "wires": [
            [
                "4675b760.d24348"
            ]
        ]
    },
    {
        "id": "10ab7dc2.5c82a2",
        "type": "catch",
        "z": "c1e7ebde.3e0b68",
        "name": "catch all",
        "scope": null,
        "x": 120,
        "y": 140,
        "wires": [
            [
                "1a8f241d.48463c"
            ]
        ]
    },
    {
        "id": "1a8f241d.48463c",
        "type": "debug",
        "z": "c1e7ebde.3e0b68",
        "name": "catch error ----------------------",
        "active": true,
        "console": "true",
        "complete": "true",
        "x": 350,
        "y": 140,
        "wires": []
    },
    {
        "id": "37453c0b.19dd74",
        "type": "subflow:e81a68fa.695e38",
        "z": "5501c3cc.11327c",
        "x": 475.5,
        "y": 218,
        "wires": [
            []
        ]
    },
    {
        "id": "321eea2f.5c3886",
        "type": "openweathermap",
        "z": "5501c3cc.11327c",
        "name": "",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "",
        "country": "",
        "language": "en",
        "x": 480.5,
        "y": 334,
        "wires": [
            [
                "d828a00b.a765a"
            ]
        ]
    },
    {
        "id": "209e2a.026d71d6",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 111,
        "y": 335,
        "wires": [
            [
                "d358d9f5.3b6d58"
            ]
        ]
    },
    {
        "id": "d358d9f5.3b6d58",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test msg",
        "func": "var m = {}\nm.payload = {};\nm.chatId = 4885772;\nm.payload.chatId = 4885772;\nm.payload.content = \"Nuevo fuego\";\nm.payload.type = \"message\";\nm.payload.options = {};\nm.payload.options.parse_mode = \"HTML\";\nm.location = {};\nm.location.lat = 40.242723;\nm.location.lon = -3.476341;\nm.originalPayload = m.payload;\nm.language = 'es';\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "x": 283,
        "y": 333,
        "wires": [
            [
                "321eea2f.5c3886"
            ]
        ]
    },
    {
        "id": "c0713e61.08a91",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 260,
        "wires": []
    },
    {
        "id": "d828a00b.a765a",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "set dir and speed",
        "func": "var beaufortScale = context.global.beaufortScale;\n\nfunction getDirection(angle) {\n  //easy to customize by changing the number of directions you have\n  var directions = 8;\n\n  var degree = 360 / directions;\n  angle = angle + degree/2;\n\n  if (angle >= 0 * degree && angle < 1 * degree)\n    return \"⬆\"; // return \"N\";\n  if (angle >= 1 * degree && angle < 2 * degree)\n    return \"↗\"; // return \"NE\";\n  if (angle >= 2 * degree && angle < 3 * degree)\n    return \"➡\"; // return \"E\";\n  if (angle >= 3 * degree && angle < 4 * degree)\n    return \"↘\"; // return \"SE\";\n  if (angle >= 4 * degree && angle < 5 * degree)\n    return \"⬇\"; // return \"S\";\n  if (angle >= 5 * degree && angle < 6 * degree)\n    return \"↙\"; // return \"SW\";\n  if (angle >= 6 * degree && angle < 7 * degree)\n    return \"⬅\"; // return \"W\";\n  if (angle >= 7 * degree && angle < 8 * degree)\n    return \"↖\"; // return \"NW\";\n  //Should never happen:\n  return \"⬆\";\n}\n\nvar w = msg.payload;\nmsg.payload = msg.originalPayload;\nvar dir = getDirection(w.winddirection);\nvar type = beaufortScale(w.windspeed, {lang: 'es', int: true});\nmsg.payload.content += \". \" + \"Dirección del viento y fuerza: \" + dir + \" (\" +  type.desc + \")\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 732.5,
        "y": 336,
        "wires": [
            [
                "c0713e61.08a91",
                "22bffe7e.389d92"
            ]
        ]
    },
    {
        "id": "12d062a0.5d751d",
        "type": "subflow:e81a68fa.695e38",
        "z": "5501c3cc.11327c",
        "x": 944,
        "y": 332,
        "wires": [
            []
        ]
    },
    {
        "id": "22bffe7e.389d92",
        "type": "subflow:76bd701f.29d0f",
        "z": "5501c3cc.11327c",
        "x": 941,
        "y": 383,
        "wires": []
    },
    {
        "id": "c72dac24.b6014",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "add weather to noti",
        "func": "var t = msg.i18n;\nconsole.log(msg.lang);\n\nvar weather = context.global.weather;\nvar beaufortScale = context.global.beaufortScale;\n\nfunction getDirection(angle) {\n  //easy to customize by changing the number of directions you have\n  var directions = 8;\n\n  var degree = 360 / directions;\n  angle = angle + degree/2;\n\n  if (angle >= 0 * degree && angle < 1 * degree)\n    return \"⬆ \" + t(\"norte\"); // return \"N\";\n  if (angle >= 1 * degree && angle < 2 * degree)\n    return \"↗ \" + t(\"noreste\"); // return \"NE\";\n  if (angle >= 2 * degree && angle < 3 * degree)\n    return \"➡ \" + t(\"este\"); // return \"E\";\n  if (angle >= 3 * degree && angle < 4 * degree)\n    return \"↘ \" + t(\"sureste\"); // return \"SE\";\n  if (angle >= 4 * degree && angle < 5 * degree)\n    return \"⬇ \" + t(\"sur\"); // return \"S\";\n  if (angle >= 5 * degree && angle < 6 * degree)\n    return \"↙ \" + t(\"suroeste\"); // return \"SW\";\n  if (angle >= 6 * degree && angle < 7 * degree)\n    return \"⬅ \" + t(\"oeste\"); // return \"W\";\n  if (angle >= 7 * degree && angle < 8 * degree)\n    return \"↖ \" + t(\"noroeste\"); // return \"NW\";\n  //Should never happen:\n  return \"⬆\";\n}\n\n\nweather.setCoordinate(43.5293, -5.6774);\n// weather.setLang('es');\nweather.setAPPID(msg.weatherapi);\n\nweather.getAllWeather(function(err, w){\n  /* wind.speed Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.\n     wind.deg Wind direction, degrees (meteorological)*/\n    if (err || !w.wind || !w.wind.deg || !w.wind.speed) {\n      // send without weather info\n      node.send(msg);\n  }\n\n  // console.log(w.wind);\n  // https://en.wikipedia.org/wiki/Beaufort_scale\n/*   console.log(beaufort(w.wind.speed, {lang: 'es', int: true}));\n  console.log(getDirection(w.wind.deg, {lang: 'es', int: true}));\n  console.log(beaufort(40, {lang: 'es', int: true}));\n  console.log(beaufort(80, {lang: 'es', int: true}));\n  console.log(beaufort(200, {lang: 'es', int: true})); */\n  \n  var dir = getDirection(w.wind.deg);\n  var type = beaufortScale(w.wind.speed, {lang: 'es', int: true});\n  if ((type && dir) && type.grade > 0) {\n    var windinfo = t(\"wind\", {dir: dir, desc: t(type.desc).toLowerCase()});\n    msg.payload.content += \" \" + windinfo + \":\";\n  } else {\n    msg.payload.content += \":\";\n  }\n  node.send(msg);\n});\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 832,
        "y": 931,
        "wires": [
            [
                "9971619a.55e28"
            ]
        ]
    },
    {
        "id": "8497b0dc.44e88",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 103,
        "y": 921,
        "wires": [
            [
                "623c34af.3a072c"
            ]
        ]
    },
    {
        "id": "d2b4e34d.4cc55",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 755,
        "y": 1012,
        "wires": []
    },
    {
        "id": "9971619a.55e28",
        "type": "subflow:76bd701f.29d0f",
        "z": "5501c3cc.11327c",
        "x": 1066,
        "y": 931,
        "wires": []
    },
    {
        "id": "3e2730ca.cc703",
        "type": "subflow:4384af8e.a7409",
        "z": "5501c3cc.11327c",
        "x": 405,
        "y": 921,
        "wires": [
            [
                "aa2ffca6.5a2ef"
            ]
        ]
    },
    {
        "id": "623c34af.3a072c",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test msg",
        "func": "var m = {};\nm.payload = {};\nm.chatId = 4885772;\nm.payload.chatId = 4885772;\nm.payload.content = \"Nuevo fuego a 4 km de distancia\";\nm.payload.type = \"message\";\nm.payload.options = {};\nm.payload.options.parse_mode = \"HTML\";\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "x": 257.5,
        "y": 922,
        "wires": [
            [
                "3e2730ca.cc703"
            ]
        ]
    },
    {
        "id": "870dd05.0bd283",
        "type": "function",
        "z": "161177e4.37eca8",
        "name": "+weather",
        "func": "var t = msg.i18n;\nvar weather = context.global.weather;\nvar beaufortScale = context.global.beaufortScale;\n\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction getDirection(degree){\n    if (degree>337.5) return t(\"norte\") + \" ⬆\";\n    if (degree>292.5) return t(\"noroeste\") + \" ↖\";\n    if(degree>247.5) return t(\"oeste\") + \" ⬅\";\n    if(degree>202.5) return t(\"suroeste\") + \" ↙\";\n    if(degree>157.5) return t(\"sur\") + \" ⬇\";\n    if(degree>122.5) return t(\"sureste\") + \" ↘\"; \n    if(degree>67.5) return t(\"este\") + \" ➡\"; \n    if(degree>22.5){return t(\"noreste\") + \" ↗\";}\n    return t(\"norte\") + \" ⬆\";\n}\n\n// msg.caption, msg.notification]\nvar onWeather = function (err, w, msg) {\n    /* wind.speed Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.\n     wind.deg Wind direction, degrees (meteorological)*/\n    \n    if (err || !w.wind || !isNumeric(w.wind.deg) || !isNumeric(w.wind.speed)) {\n        // send without weather info\n        // console.log(\"weather : \" + JSON.stringify(w) + \", err : \" + JSON.stringify(err));\n        msg.caption.payload.content += \":\";\n        // node.send(msg.caption);\n        // node.send(msg.notification);\n        node.send(msg);\n    } else {\n        var dir = getDirection(w.wind.deg);\n        // sometimes gust (rafagas)\n        // lang: es, so we use translation from Spanish later\n        var type = beaufortScale(w.wind.speed, {lang: 'es', int: true});\n        if (type && dir) {\n            if (type.grade > 0) {\n                // \"(dirección del viento {{dir}} de tipo '{{desc}}')\",\n                \n                var windinfo = t(\"wind\", {dir: dir, desc: t(type.desc).toLowerCase()});\n                msg.caption.payload.content += \", \" + windinfo + \":\";\n            } else {\n                msg.caption.payload.content += \", \" + t(\"sin viento\") + \":\";\n            }\n        } else {\n            msg.caption.payload.content += \":\";\n        }\n        node.send(msg);\n        // node.send(msg.caption);\n        // node.send(msg.notification);\n    }\n};\n\nif (typeof msg.weather === 'undefined' || msg.weather === null) {\n    // not cached\n    weather.setCoordinate(msg.notification.payload.content.latitude, msg.notification.payload.content.longitude);\n    weather.setAPPID(msg.weatherapi);\n    weather.getAllWeather(function(err, w){\n        onWeather(err, w, msg);\n        // put in cache the weather with some ttl (to avoid many petitions to openweathermap)\n        msg.weather = w;\n        node.send([null, msg]);\n    });\n} else {\n    // cached\n    // node.log(\"Weather cached\");\n    onWeather(null, msg.weather, msg);\n}\n// clear API from message\nmsg.weatherapi=\"\";\n\n",
        "outputs": "2",
        "noerr": 0,
        "x": 480,
        "y": 80,
        "wires": [
            [],
            [
                "1679cfff.d1e81"
            ]
        ],
        "outputLabels": [
            "msgs",
            "weather"
        ]
    },
    {
        "id": "f672b9a9.7f30f8",
        "type": "credentials",
        "z": "161177e4.37eca8",
        "name": "api",
        "props": [
            {
                "value": "weatherapi",
                "type": "msg"
            }
        ],
        "x": 170,
        "y": 80,
        "wires": [
            [
                "406a361e.4ef9e8"
            ]
        ]
    },
    {
        "id": "aa2ffca6.5a2ef",
        "type": "credentials",
        "z": "5501c3cc.11327c",
        "name": "weather api",
        "props": [
            {
                "value": "weatherapi",
                "type": "msg"
            }
        ],
        "x": 600,
        "y": 928,
        "wires": [
            [
                "c72dac24.b6014",
                "d2b4e34d.4cc55"
            ]
        ]
    },
    {
        "id": "720ad232.b3bf4c",
        "type": "subflow:2b8628df.fdcca8",
        "z": "66901439.f20abc",
        "name": "",
        "x": 1130,
        "y": 40,
        "wires": []
    },
    {
        "id": "16d45a2d.d8bd56",
        "type": "assert",
        "z": "66901439.f20abc",
        "name": "",
        "rules": [
            {
                "property": "chatId",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": "Invalid chatId"
            }
        ],
        "x": 170,
        "y": 40,
        "wires": [
            [
                "2b0af1c1.83ce0e"
            ]
        ]
    },
    {
        "id": "a269194f.283f18",
        "type": "function",
        "z": "66901439.f20abc",
        "name": "find active fires",
        "func": "var types = ['modis', 'viirs'];\nvar subs = msg.subscription;\nvar dist = subs.distance;\n\nfor (var i = 0; i < types.length; i++) {\n    var type = types[i];\n    var collection = \"activefires\"; \n    var actfires = {};\n    actfires.type = type;\n    actfires.collection = collection;\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#find\n    actfires.payload = [{\n     ourid:\n       { $near : {\n            $geometry: { \n                type: \"Point\",  \n                coordinates: [ subs.location.lon, subs.location.lat]\n            },\n            $minDistance: 0,\n            $maxDistance: dist * 1000\n          }\n       }\n    }];\n    actfires.chatId = msg.chatId;\n    node.send(actfires);\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 520,
        "y": 40,
        "wires": [
            [
                "d4354e88.10073"
            ]
        ]
    },
    {
        "id": "d4354e88.10073",
        "type": "mongodb2 in",
        "z": "66901439.f20abc",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find",
        "collection": "",
        "operation": "find.toArray",
        "x": 670,
        "y": 40,
        "wires": [
            [
                "681bc146.698d7"
            ]
        ]
    },
    {
        "id": "681bc146.698d7",
        "type": "split",
        "z": "66901439.f20abc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 40,
        "wires": [
            [
                "abd8152f.402f58"
            ]
        ]
    },
    {
        "id": "abd8152f.402f58",
        "type": "function",
        "z": "66901439.f20abc",
        "name": "set lat/lon",
        "func": "msg.lon = msg.payload.ourid.coordinates[0];\nmsg.lat = msg.payload.ourid.coordinates[1];\nmsg.limitToChatId = msg.chatId;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 40,
        "wires": [
            [
                "720ad232.b3bf4c"
            ]
        ]
    },
    {
        "id": "a0b36fca.c59c5",
        "type": "subflow:66901439.f20abc",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 880,
        "y": 760,
        "wires": []
    },
    {
        "id": "406a361e.4ef9e8",
        "type": "Cache in",
        "z": "161177e4.37eca8",
        "name": "weather",
        "cache": "fdb2fbe2.1f8a48",
        "keyType": "msg",
        "keyProperty": "cacheKey",
        "valueType": "msg",
        "valueProperty": "weather",
        "useString": false,
        "x": 320,
        "y": 80,
        "wires": [
            [
                "870dd05.0bd283"
            ]
        ]
    },
    {
        "id": "1679cfff.d1e81",
        "type": "Cache out",
        "z": "161177e4.37eca8",
        "name": "weather store",
        "cache": "fdb2fbe2.1f8a48",
        "keyType": "msg",
        "keyProperty": "cacheKey",
        "valueType": "msg",
        "valueProperty": "weather",
        "ttlType": "msg",
        "ttlProperty": "",
        "useString": false,
        "x": 680,
        "y": 140,
        "wires": []
    },
    {
        "id": "e9922131.cfda7",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "d5",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 730,
        "y": 720,
        "wires": [
            [
                "a0b36fca.c59c5"
            ]
        ]
    },
    {
        "id": "eefbb122.72c71",
        "type": "credentials",
        "z": "5501c3cc.11327c",
        "name": "errors-email-to",
        "props": [
            {
                "value": "to",
                "type": "msg"
            }
        ],
        "x": 460,
        "y": 120,
        "wires": [
            [
                "765fb9d8.730558"
            ]
        ]
    },
    {
        "id": "9632864e.b56228",
        "type": "debug",
        "z": "2b8628df.fdcca8",
        "name": "user result i18n",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 2000,
        "y": 180,
        "wires": []
    },
    {
        "id": "b9ef5c78.d942a",
        "type": "delay",
        "z": "4384af8e.a7409",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 770.0000076293945,
        "y": 223.00000190734863,
        "wires": [
            [
                "8cb25716.a68a38"
            ]
        ]
    },
    {
        "id": "8cb25716.a68a38",
        "type": "function",
        "z": "4384af8e.a7409",
        "name": "disable keyb lang",
        "func": "var chatId = msg.payload.chatId;\nvar uconf = \"user_\" + chatId;\n\n// disable!\ncontext.global.uconf.keyboardlang.pending = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950.0000076293945,
        "y": 223.00000190734863,
        "wires": [
            [
                "57e40a1.1461bf4"
            ]
        ]
    },
    {
        "id": "c64dc3e3.9154b",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 100,
        "y": 1020,
        "wires": [
            [
                "8ba45b41.7cbad8"
            ]
        ]
    },
    {
        "id": "8ba45b41.7cbad8",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test iron cmd",
        "func": "const Iron = context.global.iron;\nvar newmsg = {};\nnewmsg.payload = {};\nnewmsg.payload.content = \"♥ Apoya esta iniciativa\";\nnewmsg.payload.content = \"a 10 km\";\nnewmsg.originalMessage = {};\nnewmsg.originalMessage.from = {};\nnewmsg.originalMessage.from.language_code = \"es-ES\";\n\nvar password = 'some_not_random_password_that_is_at_least_32_characters';\n\nIron.seal({a: 2}, password, Iron.defaults).then(function(sealed) {\n    newmsg.enc = sealed;\n    node.send(newmsg);\n  }, function(reason) {\n  node.error(reason);\n});",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 1020,
        "wires": [
            [
                "b5027c2b.d3c12"
            ]
        ]
    },
    {
        "id": "5e90f4f.8bf400c",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test msg",
        "func": "var msg = {};\nmsg.date = \"12-12-2017\";\nmsg.time = \"1:30\";\nmsg.fire = \"La la la\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "17d0fb13.cded65",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "inject on start",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 120,
        "y": 1080,
        "wires": [
            [
                "5e90f4f.8bf400c"
            ]
        ]
    },
    {
        "id": "45268ce5.0dd8c4",
        "type": "mongodb2 in",
        "z": "93cb4937.6fc068",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "count fires",
        "collection": "activefires",
        "operation": "count",
        "x": 1554.000015258789,
        "y": 900.0000295639038,
        "wires": [
            [
                "652bf811.8cc3d8"
            ]
        ]
    },
    {
        "id": "933dd7fe.916ab8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "send status",
        "func": "var t = msg.i18n;\nvar count = msg.count;\nvar last = msg.lastCheck;\n\nlet firesInZone = {};\n\nif (msg.payload) {\n    try {\n        firesInZone = JSON.parse(msg.payload);\n    } catch (e) {\n        // do nothing\n    }\n}\n\nvar real = firesInZone.real ? firesInZone.real : 0;\n\nif (msg.lang === 'ast') {\n    msg.lang = 'es';\n} \ncontext.global.moment.locale(msg.lang);\n\nvar since = context.global.moment(last).fromNow();\n\nvar status = {};\nstatus.payload = {\n    chatId: msg.chatId,\n    type: \"message\",\n    content: t('serviceStatus', {count: count, since: since}) + \" \"  +\n    ((firesInZone.real >= 0) ? \n        t('firesInZone', { firesnum: real > 0 ? real : t('Ningún'), fires: real > 1 ? t('fuegos') : t('fuego'), dist: msg.dist }) + ' ': '' ) +\n    t('serviceStatusExtra', { server: global.get('website') })\n};\n\nstatus.payload.options = {};\nstatus.payload.options.parse_mode = \"Markdown\";\nstatus.payload.options.disable_web_page_preview = true; \n\nreturn status;",
        "outputs": 1,
        "noerr": 0,
        "x": 2343.0000381469727,
        "y": 902.0000238418579,
        "wires": [
            [
                "ae6f1258.7ec31"
            ]
        ]
    },
    {
        "id": "f99f7b1f.c91d68",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "find",
        "func": "msg.originalPayload = msg.payload;\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1407.0000915527344,
        "y": 902.0000143051147,
        "wires": [
            [
                "45268ce5.0dd8c4"
            ]
        ]
    },
    {
        "id": "ae6f1258.7ec31",
        "type": "subflow:e81a68fa.695e38",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 2532.0000381469727,
        "y": 902.000039100647,
        "wires": [
            []
        ]
    },
    {
        "id": "5f91ea91.19aff4",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 2535.0005989074707,
        "y": 941.0000276565552,
        "wires": []
    },
    {
        "id": "1e81ed1a.57bfa3",
        "type": "subflow:76bd701f.29d0f",
        "z": "93cb4937.6fc068",
        "x": 1410,
        "y": 760,
        "wires": []
    },
    {
        "id": "a6cec47b.33f458",
        "type": "debug",
        "z": "128790f6.dee0df",
        "name": "Send errors in notifications",
        "active": true,
        "console": "true",
        "complete": "true",
        "x": 1990,
        "y": 340,
        "wires": []
    },
    {
        "id": "97c6027.faeb8",
        "type": "debug",
        "z": "e81a68fa.695e38",
        "name": "Send errors in tsend",
        "active": true,
        "console": "true",
        "complete": "true",
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "7817e97.07b9f18",
        "type": "function",
        "z": "e81a68fa.695e38",
        "name": "if error debug",
        "func": "if (msg.error) {\n    return msg;\n}   ",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 140,
        "wires": [
            [
                "97c6027.faeb8"
            ]
        ]
    },
    {
        "id": "d64b5dd7.24b69",
        "type": "function",
        "z": "128790f6.dee0df",
        "name": "if error debug",
        "func": "if (msg.error) {\n    return msg;\n}   ",
        "outputs": 1,
        "noerr": 0,
        "x": 1740,
        "y": 340,
        "wires": [
            [
                "a6cec47b.33f458"
            ]
        ]
    },
    {
        "id": "e2c7bb0a.9c4f58",
        "type": "semaphore-leave",
        "z": "f21ab878.9fd518",
        "config": "267e38ad.11f318",
        "name": "leave",
        "x": 210,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f2de1625.f47288",
        "type": "debug",
        "z": "76bd701f.29d0f",
        "name": "start msg",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 180,
        "y": 200,
        "wires": []
    },
    {
        "id": "7141db39.a3c694",
        "type": "function",
        "z": "1f740501.0b8ccb",
        "name": "check for hash",
        "func": "if (msg.payload.content) {\n    // msg with hash\n    return [null, msg];    \n} else {\n    // normal /start\n    return [msg, null];\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 220,
        "y": 80,
        "wires": [
            [],
            [
                "eb0d7746.e96e18"
            ]
        ],
        "outputLabels": [
            "normal",
            "hash"
        ]
    },
    {
        "id": "59c9129.f66d6ec",
        "type": "subflow:e81a68fa.695e38",
        "z": "1f740501.0b8ccb",
        "name": "",
        "x": 1210,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "eb647330.4056c",
        "type": "function",
        "z": "1f740501.0b8ccb",
        "name": "send hash back",
        "func": "const t = msg.i18n;\nconst hash = msg.token;\nconst website = 'https://' + global.get('website');\nconst url =  website + \"/auth/\" + hash;\nconst text = t('serviceAuth');\nmsg.payload.type = \"message\";\nmsg.payload.chatId = msg.chatId;\nmsg.payload.options = {};\nmsg.payload.options.parse_mode = \"HTML\";\nmsg.payload.options.disable_web_page_preview = true; \nmsg.payload.content = `${text} <a href=\"${url}\">${website}</a>`;\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1020,
        "y": 80,
        "wires": [
            [
                "59c9129.f66d6ec"
            ]
        ],
        "outputLabels": [
            "msg"
        ]
    },
    {
        "id": "eb0d7746.e96e18",
        "type": "subflow:4384af8e.a7409",
        "z": "1f740501.0b8ccb",
        "name": "",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "b41a3405.3d7a58"
            ]
        ]
    },
    {
        "id": "1a02f494.12ac8b",
        "type": "subflow:1f740501.0b8ccb",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 290,
        "y": 340,
        "wires": [
            [
                "55ebd8f8.436e38"
            ]
        ]
    },
    {
        "id": "e004c259.0eea",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1590,
        "y": 1240,
        "wires": []
    },
    {
        "id": "3aec3f92.d57de",
        "type": "mongodb2 in",
        "z": "93cb4937.6fc068",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "updateOne",
        "collection": "users",
        "operation": "updateOne",
        "x": 1410,
        "y": 1240,
        "wires": [
            [
                "e004c259.0eea"
            ]
        ]
    },
    {
        "id": "2e774d09.afa5b2",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "upsert User",
        "func": "var objectid = context.global.objectid;\n\nvar orig = msg.originalMessage;\n\nif (msg.payload.length === 1) {\n    msg.id = msg.payload[0]._id;\n} \n\nmsg.payload = msg.originalPayload;\n\nvar update = {};\nupdate.payload = [\n    {\n        telegramChatId : msg.payload.chatId \n    },\n    {\n       $set: {\n           _id: msg.id || objectid().toString(),\n           telegramChatId : msg.payload.chatId,\n           telegramUsername : orig.from.username,\n           telegramFirstName : orig.from.first_name,\n           telegramLanguageCode : orig.from.language_code,\n           lang : msg.lang,\n           updated: new Date()\n       },\n       $setOnInsert: { createdAt: new Date() }\n    },\n    { upsert: true }\n];\nreturn [update, msg];",
        "outputs": "2",
        "noerr": 0,
        "x": 1210,
        "y": 1240,
        "wires": [
            [
                "3aec3f92.d57de",
                "16cf6a69.e7e7f6",
                "496c1587.4ebd7c"
            ],
            [
                "bb1ffea3.4e9f4"
            ]
        ]
    },
    {
        "id": "16cf6a69.e7e7f6",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1390,
        "y": 1280,
        "wires": []
    },
    {
        "id": "496c1587.4ebd7c",
        "type": "Cache out",
        "z": "93cb4937.6fc068",
        "name": "chatId-lang-cache",
        "cache": "488013b6.1183ec",
        "keyType": "msg",
        "keyProperty": "payload[1].$set.telegramChatId",
        "valueType": "msg",
        "valueProperty": "payload[1].$set.lang",
        "ttlType": "msg",
        "ttlProperty": "",
        "useString": false,
        "x": 1430,
        "y": 1320,
        "wires": []
    },
    {
        "id": "8eb488eb.2a6448",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "find user by chatId",
        "func": "var chatId = msg.payload.chatId;\nmsg.originalPayload = msg.payload;\nmsg.collection = \"users\";\nmsg.payload = { telegramChatId: chatId };\nmsg.limit = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 1240,
        "wires": [
            [
                "a2a7d875.715408"
            ]
        ]
    },
    {
        "id": "9d03d653.8cca68",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "lang response",
        "func": "var chatId = msg.payload.chatId;\nvar uconf = \"user_\" + chatId;\n\n// node.log(JSON.stringify(context.global.uconf));\n\nif (msg.payload.content !== '/lang' && \n    context.global.uconf && \n    context.global.uconf.keyboardlang && \n    context.global.uconf.keyboardlang.pending) {\n    context.global.uconf.keyboardlang.pending = false;\n    var langs = {\n        'Asturianu': 'ast',\n        'Català': 'ca',\n        'Español': 'es',\n        'English': 'en',\n        'Galego': 'gl',\n        'Português': 'pt',\n        'Português do Brasil': 'pt_BR'\n        // Euskara\n    };\n    \n    if (msg.payload.content.match(/(Asturianu)|(Español)|(English)|(Galego)|(Português)|(Português do Brasil)/i)) {\n        msg.lang = langs[msg.payload.content];\n        \n        // For start menu:\n        msg.payload.content = '';\n        return [msg, null];   \n    } else\n    {\n        return [null, msg];   \n    }\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 480,
        "y": 1260,
        "wires": [
            [
                "8eb488eb.2a6448",
                "cea091d8.7a5a4"
            ],
            [
                "1475a6c1.176199"
            ]
        ],
        "outputLabels": [
            "correct answer",
            "incorrect answer"
        ]
    },
    {
        "id": "bb1ffea3.4e9f4",
        "type": "subflow:465e67f.6ebf598",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1417.0002365112305,
        "y": 1454.0000267028809,
        "wires": []
    },
    {
        "id": "1475a6c1.176199",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "wrong answer ignore",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 760,
        "y": 1280,
        "wires": []
    },
    {
        "id": "faffc082.4386a",
        "type": "telegram receiver",
        "z": "93cb4937.6fc068",
        "name": "",
        "bot": "f93d1a38.c43218",
        "saveDataDir": "",
        "x": 120,
        "y": 1260,
        "wires": [
            [
                "9d03d653.8cca68",
                "43864735.d1af38"
            ],
            []
        ]
    },
    {
        "id": "f4ebe282.6a894",
        "type": "link in",
        "z": "93cb4937.6fc068",
        "name": "lang-resp",
        "links": [
            "849e7348.7e94c",
            "3f59d0ce.bdd8d"
        ],
        "x": 315,
        "y": 1220,
        "wires": [
            [
                "9d03d653.8cca68"
            ]
        ]
    },
    {
        "id": "43864735.d1af38",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 350,
        "y": 1300,
        "wires": []
    },
    {
        "id": "cea091d8.7a5a4",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 690,
        "y": 1120,
        "wires": []
    },
    {
        "id": "4091f971.ce23f8",
        "type": "function",
        "z": "e6f3db8c.48eac8",
        "name": "ask-lang",
        "func": "var chatId = msg.payload.chatId? msg.payload.chatId : msg.chatId;\nvar uconf = \"user_\" + chatId;\nif (!context.global.uconf) {\n    context.global.uconf = {};\n}\n\ncontext.global.uconf.keyboardlang = { pending : true };\n// no user\nvar opts = {\n    disable_notification : true,\n    // reply_to_message_id: msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        keyboard: [ \n            [{text: 'Asturianu'}, {text: 'Español'}, ],\n            [{text: 'English'}, {text: 'Galego'}, ],\n            [{text: 'Português'}, /* {text: 'Português do Brasil'}, */ ]\n            ],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n      \n    })\n};\nmsg.payload.chatId = chatId;\nmsg.payload.type = \"message\";\nmsg.payload.content = 'Escoge tu idioma / Choose your language:';\nmsg.payload.options = opts;\nreturn [msg, null];\n",
        "outputs": "2",
        "noerr": 0,
        "x": 260,
        "y": 100,
        "wires": [
            [
                "3d9b789b.37b188"
            ],
            []
        ],
        "outputLabels": [
            "ask",
            "we have lang"
        ]
    },
    {
        "id": "3d9b789b.37b188",
        "type": "subflow:fe0c8b72.8a51a8",
        "z": "e6f3db8c.48eac8",
        "x": 440,
        "y": 100,
        "wires": [
            [
                "a2c7e3af.c055f"
            ]
        ]
    },
    {
        "id": "a2c7e3af.c055f",
        "type": "telegram sender",
        "z": "e6f3db8c.48eac8",
        "name": "send",
        "bot": "f93d1a38.c43218",
        "x": 630,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "366ad4aa.b96aec",
        "type": "subflow:289c75f9.8cd11a",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 2010,
        "y": 580,
        "wires": []
    },
    {
        "id": "d30272e.0a9f99",
        "type": "mongodb2 in",
        "z": "8903a5fd.4fbc88",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find",
        "collection": "users",
        "operation": "find.toArray",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "2904cce3.f7b554"
            ]
        ]
    },
    {
        "id": "5ea414fc.9b1c1c",
        "type": "function",
        "z": "8903a5fd.4fbc88",
        "name": "find user",
        "func": "var newMsg = {}; \nnewMsg.originalMsg = msg;\nvar chatId = msg.chatId;\nnewMsg.payload = { telegramChatId: chatId };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 80,
        "wires": [
            [
                "d30272e.0a9f99"
            ]
        ]
    },
    {
        "id": "a9b1c277.74b9",
        "type": "function",
        "z": "289c75f9.8cd11a",
        "name": "save subs-user",
        "func": "msg.payload.$set.owner = msg.user;\nmsg.payload.$set.telegramBot = global.get('telegramBot');\nmsg.collection = \"subscriptions\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "c9885f4.242bda"
            ]
        ]
    },
    {
        "id": "2904cce3.f7b554",
        "type": "assert",
        "z": "8903a5fd.4fbc88",
        "name": "user found",
        "rules": [
            {
                "property": "payload.length",
                "propertyType": "msg",
                "type": "eq",
                "value": "1",
                "valueType": "num",
                "failMsg": "Error in  user find"
            },
            {
                "property": "payload[0]._id",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": "Wrong user _id"
            }
        ],
        "x": 650,
        "y": 80,
        "wires": [
            [
                "b36966af.102298"
            ]
        ]
    },
    {
        "id": "aa9bd3df.c016b",
        "type": "assert",
        "z": "8903a5fd.4fbc88",
        "name": "",
        "rules": [
            {
                "property": "chatId",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": "Wrong chatId in find user"
            }
        ],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "5ea414fc.9b1c1c"
            ]
        ]
    },
    {
        "id": "b36966af.102298",
        "type": "function",
        "z": "8903a5fd.4fbc88",
        "name": "Return origMsg + user",
        "func": "var newMsg = msg.originalMsg;\nnewMsg.user = msg.payload[0]._id;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d8654cba.a8be5",
        "type": "subflow:8903a5fd.4fbc88",
        "z": "289c75f9.8cd11a",
        "name": "",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "a9b1c277.74b9"
            ]
        ]
    },
    {
        "id": "6bd532b5.40017c",
        "type": "mongodb2 in",
        "z": "1409e32d.aacfbd",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find",
        "collection": "subscriptions",
        "operation": "find.toArray",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "f0f61dbb.e43a8"
            ]
        ]
    },
    {
        "id": "3dd5be16.fa6e22",
        "type": "function",
        "z": "1409e32d.aacfbd",
        "name": "find subs",
        "func": "var newMsg = {}; \nnewMsg.originalMsg = msg;\nvar chatId = msg.chatId;\nnewMsg.payload = { chatId: chatId };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "6bd532b5.40017c"
            ]
        ]
    },
    {
        "id": "f0f61dbb.e43a8",
        "type": "assert",
        "z": "1409e32d.aacfbd",
        "name": "subs found",
        "rules": [
            {
                "property": "payload.length",
                "propertyType": "msg",
                "type": "eq",
                "value": "1",
                "valueType": "num",
                "failMsg": "Error in  user find"
            },
            {
                "property": "payload[0]._id",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": "Wrong subscription _id"
            }
        ],
        "x": 630,
        "y": 120,
        "wires": [
            [
                "97f74b45.1f64e8"
            ]
        ]
    },
    {
        "id": "e2568d96.bbf41",
        "type": "assert",
        "z": "1409e32d.aacfbd",
        "name": "",
        "rules": [
            {
                "property": "chatId",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": "Wrong chatId in find user"
            }
        ],
        "x": 170,
        "y": 120,
        "wires": [
            [
                "3dd5be16.fa6e22"
            ]
        ]
    },
    {
        "id": "97f74b45.1f64e8",
        "type": "function",
        "z": "1409e32d.aacfbd",
        "name": "Return origMsg + subs",
        "func": "var newMsg = msg.originalMsg;\nnewMsg.subscription = msg.payload[0];\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2b0af1c1.83ce0e",
        "type": "subflow:1409e32d.aacfbd",
        "z": "66901439.f20abc",
        "name": "",
        "x": 320,
        "y": 40,
        "wires": [
            [
                "a269194f.283f18"
            ]
        ]
    },
    {
        "id": "70f8c779.15ef68",
        "type": "debug",
        "z": "66901439.f20abc",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 790,
        "y": 120,
        "wires": []
    },
    {
        "id": "930b53f0.787a9",
        "type": "subflow:8903a5fd.4fbc88",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 700,
        "y": 1560,
        "wires": [
            [
                "b47755bb.64af48"
            ]
        ]
    },
    {
        "id": "a5a1ad93.0eb1d",
        "type": "comment",
        "z": "8903a5fd.4fbc88",
        "name": "msg.user == user._id",
        "info": "",
        "x": 950,
        "y": 140,
        "wires": []
    },
    {
        "id": "f1a59416.8e6838",
        "type": "comment",
        "z": "8903a5fd.4fbc88",
        "name": "msg.chatId query",
        "info": "",
        "x": 220,
        "y": 140,
        "wires": []
    },
    {
        "id": "5f48c4ee.744aac",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 530,
        "y": 1680,
        "wires": []
    },
    {
        "id": "4715076b.02d7e8",
        "type": "Cache out",
        "z": "93cb4937.6fc068",
        "name": "userId-lang-cache",
        "cache": "da772a3d.b17c88",
        "keyType": "msg",
        "keyProperty": "user",
        "valueType": "msg",
        "valueProperty": "lang",
        "ttlType": "msg",
        "ttlProperty": "",
        "useString": false,
        "x": 1430,
        "y": 1380,
        "wires": []
    },
    {
        "id": "811b82bc.ffc63",
        "type": "Cache out",
        "z": "4384af8e.a7409",
        "name": "userId-lang-cache",
        "cache": "da772a3d.b17c88",
        "keyType": "msg",
        "keyProperty": "user",
        "valueType": "msg",
        "valueProperty": "lang",
        "ttlType": "msg",
        "ttlProperty": "",
        "useString": false,
        "x": 1740.0000076293945,
        "y": 123.00000190734863,
        "wires": []
    },
    {
        "id": "3560f00b.6d6ac",
        "type": "subflow:161177e4.37eca8",
        "z": "95e78a8b.50a428",
        "name": "",
        "x": 870,
        "y": 100,
        "wires": [
            [
                "df96962a.fac598"
            ]
        ]
    },
    {
        "id": "41daf76.461cf08",
        "type": "debug",
        "z": "161177e4.37eca8",
        "name": "weather cached",
        "active": true,
        "console": "false",
        "complete": "weather",
        "x": 320,
        "y": 160,
        "wires": []
    },
    {
        "id": "22aa95fe.d8313a",
        "type": "debug",
        "z": "161177e4.37eca8",
        "name": "cache!",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 490,
        "y": 140,
        "wires": []
    },
    {
        "id": "df96962a.fac598",
        "type": "switch",
        "z": "95e78a8b.50a428",
        "name": "telegram?",
        "property": "notitype",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "telegram",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "web",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 1040,
        "y": 100,
        "wires": [
            [
                "f9083a41.b80318",
                "acd49174.ede59"
            ],
            [
                "acd49174.ede59"
            ],
            [
                "1e4f281a.ede6b8"
            ]
        ],
        "outputLabels": [
            "telegram",
            "web",
            "otherwise"
        ]
    },
    {
        "id": "1e4f281a.ede6b8",
        "type": "debug",
        "z": "95e78a8b.50a428",
        "name": "wrong subs type",
        "active": true,
        "console": "true",
        "complete": "true",
        "x": 1270,
        "y": 180,
        "wires": []
    },
    {
        "id": "2145b257.4761fe",
        "type": "debug",
        "z": "95e78a8b.50a428",
        "name": "notif",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1230,
        "y": 220,
        "wires": []
    },
    {
        "id": "62549691.c19fd8",
        "type": "mongodb2 in",
        "z": "85e2a4b3.4947a8",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find",
        "collection": "users",
        "operation": "find.toArray",
        "x": 450,
        "y": 120,
        "wires": [
            [
                "ac3ea97a.bbed18"
            ]
        ]
    },
    {
        "id": "3a74e2c8.63a63e",
        "type": "function",
        "z": "85e2a4b3.4947a8",
        "name": "find user",
        "func": "var newMsg = {}; \nnewMsg.originalMsg = msg;\nvar userId = msg.userId;\nnewMsg.payload = { _id: userId };\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 120,
        "wires": [
            [
                "62549691.c19fd8"
            ]
        ]
    },
    {
        "id": "ac3ea97a.bbed18",
        "type": "assert",
        "z": "85e2a4b3.4947a8",
        "name": "user found",
        "rules": [
            {
                "property": "payload.length",
                "propertyType": "msg",
                "type": "eq",
                "value": "1",
                "valueType": "num",
                "failMsg": "Error in  user find"
            },
            {
                "property": "payload[0]._id",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": "Wrong user _id"
            }
        ],
        "x": 610,
        "y": 120,
        "wires": [
            [
                "bce62c6b.0dc38"
            ]
        ]
    },
    {
        "id": "36073f85.3f7c9",
        "type": "assert",
        "z": "85e2a4b3.4947a8",
        "name": "",
        "rules": [
            {
                "property": "userId",
                "propertyType": "msg",
                "type": "nnull",
                "failMsg": "Wrong chatId in find user"
            }
        ],
        "x": 150,
        "y": 120,
        "wires": [
            [
                "3a74e2c8.63a63e"
            ]
        ]
    },
    {
        "id": "bce62c6b.0dc38",
        "type": "function",
        "z": "85e2a4b3.4947a8",
        "name": "Return origMsg + user",
        "func": "var newMsg = msg.originalMsg;\nnewMsg.user = msg.payload[0];\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "eb2c8c2e.cf197",
        "type": "comment",
        "z": "85e2a4b3.4947a8",
        "name": "msg.user == user",
        "info": "",
        "x": 910,
        "y": 180,
        "wires": []
    },
    {
        "id": "803ee29e.49689",
        "type": "comment",
        "z": "85e2a4b3.4947a8",
        "name": "msg.userId query",
        "info": "",
        "x": 180,
        "y": 180,
        "wires": []
    },
    {
        "id": "237a3af6.86ed06",
        "type": "change",
        "z": "2b8628df.fdcca8",
        "name": "setUserId",
        "rules": [
            {
                "t": "set",
                "p": "userId",
                "pt": "msg",
                "to": "payload.owner",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 240,
        "wires": [
            [
                "473fa064.799bb"
            ]
        ]
    },
    {
        "id": "473fa064.799bb",
        "type": "subflow:85e2a4b3.4947a8",
        "z": "2b8628df.fdcca8",
        "name": "",
        "x": 1450,
        "y": 240,
        "wires": [
            [
                "b49d372.8deeec8"
            ]
        ]
    },
    {
        "id": "b49d372.8deeec8",
        "type": "change",
        "z": "2b8628df.fdcca8",
        "name": "set lang",
        "rules": [
            {
                "t": "set",
                "p": "lang",
                "pt": "msg",
                "to": "user.lang",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 240,
        "wires": [
            [
                "2a9cd9af.ae25c6"
            ]
        ]
    },
    {
        "id": "f9083a41.b80318",
        "type": "function",
        "z": "95e78a8b.50a428",
        "name": "send tel",
        "func": "var t = msg.i18n;\nvar alert = msg.caption.payload.content;\n\nif (msg.lang === 'ast') {\n    msg.lang = 'es';\n} \ncontext.global.moment.locale(msg.lang);\n\nvar when = context.global.moment(msg.when).fromNow();\nmsg.caption.payload.content = alert.replace(/:$/, \" (\" + t('fireDetected', {when: when}) + \", \" + msg.caption.link + \"):\");\ndelete msg.caption.link;\ndelete msg.caption.sealed;\ndelete msg.notification.caption;\n// node.log(JSON.stringify(msg.notification));\nreturn [msg.caption, msg.notification];",
        "outputs": "2",
        "noerr": 0,
        "x": 1240,
        "y": 80,
        "wires": [
            [
                "cf97891b.2928a8"
            ],
            [
                "58a1cd97.d024e4"
            ]
        ],
        "outputLabels": [
            "caption",
            "location"
        ]
    },
    {
        "id": "58a1cd97.d024e4",
        "type": "delay",
        "z": "95e78a8b.50a428",
        "name": "d300ms",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1380,
        "y": 100,
        "wires": [
            [
                "cf97891b.2928a8"
            ]
        ]
    },
    {
        "id": "acd49174.ede59",
        "type": "function",
        "z": "95e78a8b.50a428",
        "name": "insert noti",
        "func": "var noti = msg.notification;\nvar save = {};\nsave.userId = msg.user._id;\nsave.content = msg.caption.payload.content;\nsave.sealed = msg.caption.sealed;\nsave.type = msg.notitype;\nsave.when = msg.when;\nsave.geo = {\n            type: \"Point\",\n            coordinates: [ \n                noti.payload.content.longitude,\n                noti.payload.content.latitude\n            ]\n        };\nsave.createdAt = new Date();\nconst insert = {};\ninsert.payload = [ save ];\ninsert.collection = \"notifications\";\nreturn insert;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 140,
        "wires": [
            [
                "dba8bb0b.46db38",
                "a890056b.ebcff8"
            ]
        ]
    },
    {
        "id": "1f6e77cb.2803c8",
        "type": "debug",
        "z": "95e78a8b.50a428",
        "name": "notif",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "b5027c2b.d3c12",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 470,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4894d22a.56b13c",
        "type": "subflow:8903a5fd.4fbc88",
        "z": "c644db46.3854c8",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "73053858.f6f538"
            ]
        ]
    },
    {
        "id": "ca6b8c1d.12749",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "remove $set",
        "func": "var pay = msg.payload;\nmsg.payload = pay.$set;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 1620,
        "wires": [
            [
                "6fe5f874.cf4978"
            ]
        ]
    },
    {
        "id": "bc7d9d4a.8509a",
        "type": "subflow:bfeff5b6.e5f178",
        "z": "c644db46.3854c8",
        "name": "",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "ad92a3e7.bb743"
            ]
        ]
    },
    {
        "id": "dd53d5e0.fdd0b8",
        "type": "debug",
        "z": "c644db46.3854c8",
        "name": "near?",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 550,
        "y": 20,
        "wires": []
    },
    {
        "id": "3d0c5ffd.b48db",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test wrong decimal location",
        "func": "\nvar newmsg = {\n    \"payload\": {\n        \"chatId\": -253600015,\n        \"type\": \"location\", \n        \"content\": {\n            \"longitude\": -3.47238,\n            \"latitude\": 40.24621\n            // \"longitude\": -3.4723,\n            // \"latitude\": 40.2462\n            \n        }\n    }};\nreturn newmsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 1160,
        "wires": [
            [
                "deea4e74.45995",
                "796ca8ed.f479d8"
            ]
        ]
    },
    {
        "id": "7207f3e5.5a3fcc",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1160,
        "wires": [
            [
                "3d0c5ffd.b48db"
            ]
        ]
    },
    {
        "id": "deea4e74.45995",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 630,
        "y": 1160,
        "wires": []
    },
    {
        "id": "796ca8ed.f479d8",
        "type": "subflow:e81a68fa.695e38",
        "z": "5501c3cc.11327c",
        "x": 560,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "e89f5a78.fa06d8",
        "type": "subflow:8903a5fd.4fbc88",
        "z": "5501c3cc.11327c",
        "name": "",
        "x": 410,
        "y": 1320,
        "wires": [
            [
                "dfb0cea8.435b"
            ]
        ]
    },
    {
        "id": "e526a3d3.260c7",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1010,
        "y": 1320,
        "wires": []
    },
    {
        "id": "dfb0cea8.435b",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "set verify token",
        "func": "const Iron = context.global.iron;\nconst hash = \"Fe26.2**5759fac7e58777549e861c21cc5c85db5817d1c86aa3ae3570e1245ed70b666b*30s5YMNPjZS3waOlOA-gYg*_0vV22lIY7I6Pu15R3H93sL7sOvzOWOhfCIIrPJyUjIKfAjKoan2RGW9swOIhal6YiMBpGIvrBBslMYqFvEJXJ8P__BL-7KCQ3gjA1YcrZ8Z0-t-TNk5mAqk85IGXNGV_V6bMZ8a5jZ87Sk1ySzQXA**9b21f19ca380b5639b3fe8328c35c00b5f6ca2afca732903d4f6c8a1a26b3772*Z5hS97tlK_AYug54ardzVtuqoJG5q7R-WIoNjWmmPEk\";\nvar password = global.get('ironPassword');\nIron.unseal(hash, password, Iron.defaults).then(function(hashedToken) {\n    msg.enc = hashedToken.hashedToken;\n    const update = {};\n    update.payload = [\n        {_id : msg.user},\n        {$addToSet: { \"services.resume.loginTokens\": hashedToken}}\n    ];\n    node.send(update);\n  }, function(reason) {\n  node.error(reason);\n});\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 1320,
        "wires": [
            [
                "c6be1f8.5625be",
                "e526a3d3.260c7"
            ]
        ]
    },
    {
        "id": "95b1db49.992508",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "test msg",
        "func": "var m = {};\nm.payload = {};\nm.chatId = 4885772;\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 1380,
        "wires": [
            [
                "e89f5a78.fa06d8"
            ]
        ]
    },
    {
        "id": "1599bc2f.a723b4",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 1380,
        "wires": [
            [
                "95b1db49.992508"
            ]
        ]
    },
    {
        "id": "c6be1f8.5625be",
        "type": "mongodb2 in",
        "z": "5501c3cc.11327c",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "updateOne",
        "collection": "users",
        "operation": "updateOne",
        "x": 850,
        "y": 1340,
        "wires": [
            [
                "e526a3d3.260c7"
            ]
        ]
    },
    {
        "id": "b41a3405.3d7a58",
        "type": "subflow:8903a5fd.4fbc88",
        "z": "1f740501.0b8ccb",
        "name": "",
        "x": 570,
        "y": 80,
        "wires": [
            [
                "8f81054d.b88c78"
            ]
        ]
    },
    {
        "id": "8f81054d.b88c78",
        "type": "function",
        "z": "1f740501.0b8ccb",
        "name": "set verify token",
        "func": "const Iron = context.global.iron;\nconst hash = msg.payload.content.trim();\nvar password = global.get('ironPassword');\nIron.unseal(hash, password, Iron.defaults).then(function(hashedToken) {\n    const update = {};\n    update.payload = [\n        {_id : msg.user},\n        {$addToSet: { \"services.resume.loginTokens\": hashedToken}}\n    ];\n    update.token = hashedToken.hashedToken;\n    update.lang = msg.lang;\n    update.i18n = msg.i18n;\n    update.user = msg.user;\n    update.chatId = msg.payload.chatId;\n    \n    node.send(update);\n  }, function(reason) {\n  node.error(reason);\n});\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 80,
        "wires": [
            [
                "255c8b5a.c81f94",
                "eb647330.4056c",
                "79433d1e.b3a374"
            ]
        ]
    },
    {
        "id": "255c8b5a.c81f94",
        "type": "mongodb2 in",
        "z": "1f740501.0b8ccb",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "updateOne",
        "collection": "users",
        "operation": "updateOne",
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "cb764a9b.8ca008"
            ]
        ]
    },
    {
        "id": "b732ef4b.1fa5a",
        "type": "debug",
        "z": "1f740501.0b8ccb",
        "name": "error setting user.hash ",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1388.4615478515625,
        "y": 139.23077392578125,
        "wires": []
    },
    {
        "id": "cb764a9b.8ca008",
        "type": "function",
        "z": "1f740501.0b8ccb",
        "name": "if error",
        "func": "if (msg.error) {\n    return msg;\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 1178.4615478515625,
        "y": 139.23077392578125,
        "wires": [
            [
                "b732ef4b.1fa5a"
            ]
        ]
    },
    {
        "id": "bf8b3a10.bb87b8",
        "type": "debug",
        "z": "1f740501.0b8ccb",
        "name": "start hash",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 390,
        "y": 140,
        "wires": []
    },
    {
        "id": "79433d1e.b3a374",
        "type": "debug",
        "z": "1f740501.0b8ccb",
        "name": "user token update",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 990,
        "y": 220,
        "wires": []
    },
    {
        "id": "b625046e.2f3668",
        "type": "comment",
        "z": "128790f6.dee0df",
        "name": "this was sending duplicate news",
        "info": "",
        "x": 1670,
        "y": 300,
        "wires": []
    },
    {
        "id": "f9147748.c27188",
        "type": "ui_text",
        "z": "93cb4937.6fc068",
        "group": "601660c.cd104a",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "usuarios",
        "label": "Usuarios",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 960,
        "y": 1800,
        "wires": []
    },
    {
        "id": "79c5a18b.dc663",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "count all",
        "func": "msg.payload = {};\nmsg.collection = \"users\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 1800,
        "wires": [
            [
                "9145956e.801918"
            ]
        ]
    },
    {
        "id": "ba21eb4a.fea8d8",
        "type": "persist out",
        "z": "93cb4937.6fc068",
        "name": "users-in-time",
        "storageNode": "7888b81c.30fa28",
        "x": 1130,
        "y": 1780,
        "wires": [
            [
                "b5a4b8cf.619128"
            ]
        ]
    },
    {
        "id": "b5a4b8cf.619128",
        "type": "ui_chart",
        "z": "93cb4937.6fc068",
        "name": "users to dash",
        "group": "601660c.cd104a",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "Usuarios",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1150,
        "y": 1740,
        "wires": [
            [
                "7a098901.285d28"
            ],
            []
        ]
    },
    {
        "id": "7a098901.285d28",
        "type": "persist in",
        "z": "93cb4937.6fc068",
        "name": "users-in-time",
        "storageNode": "7888b81c.30fa28",
        "x": 1310,
        "y": 1740,
        "wires": []
    },
    {
        "id": "5d0b4862.79b4f8",
        "type": "ui_text",
        "z": "93cb4937.6fc068",
        "group": "601660c.cd104a",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "comentarios",
        "label": "Comentarios (no anon)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 2180,
        "wires": []
    },
    {
        "id": "56638eac.27187",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "count comments",
        "func": "msg.payload = {};\nmsg.collection = \"comments\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 2180,
        "wires": [
            [
                "6439ed03.3aab74"
            ]
        ]
    },
    {
        "id": "14e2581b.69cf28",
        "type": "persist out",
        "z": "93cb4937.6fc068",
        "name": "comments-in-time",
        "storageNode": "69bdf451.05197c",
        "x": 1170,
        "y": 2180,
        "wires": [
            [
                "2d2926db.d591ea"
            ]
        ]
    },
    {
        "id": "2d2926db.d591ea",
        "type": "ui_chart",
        "z": "93cb4937.6fc068",
        "name": "comments to dash",
        "group": "601660c.cd104a",
        "order": 10,
        "width": "0",
        "height": "0",
        "label": "Comentarios",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1150,
        "y": 2140,
        "wires": [
            [
                "38a26bc6.250834"
            ],
            []
        ]
    },
    {
        "id": "38a26bc6.250834",
        "type": "persist in",
        "z": "93cb4937.6fc068",
        "name": "comments-in-time",
        "storageNode": "69bdf451.05197c",
        "x": 1350,
        "y": 2140,
        "wires": []
    },
    {
        "id": "fed29111.b7e59",
        "type": "ui_text",
        "z": "93cb4937.6fc068",
        "group": "601660c.cd104a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "com-anon",
        "label": "Comentarios (anon)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 2280,
        "wires": []
    },
    {
        "id": "47d9b91c.d37ec8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "count anon-comments",
        "func": "msg.payload = {};\nmsg.collection = \"commentsui-anonymoususer\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 2280,
        "wires": [
            [
                "e1453fda.78635"
            ]
        ]
    },
    {
        "id": "84740e25.b2dec",
        "type": "persist out",
        "z": "93cb4937.6fc068",
        "name": "comments-anon-in-time",
        "storageNode": "372ec561.04074a",
        "x": 1190,
        "y": 2280,
        "wires": [
            [
                "f35944b1.d59d48"
            ]
        ]
    },
    {
        "id": "f35944b1.d59d48",
        "type": "ui_chart",
        "z": "93cb4937.6fc068",
        "name": "comments-a to dash",
        "group": "601660c.cd104a",
        "order": 11,
        "width": "0",
        "height": "0",
        "label": "Comentarios anon",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1160,
        "y": 2240,
        "wires": [
            [
                "10de0b52.64df25"
            ],
            []
        ]
    },
    {
        "id": "10de0b52.64df25",
        "type": "persist in",
        "z": "93cb4937.6fc068",
        "name": "comments-anon-in-time",
        "storageNode": "372ec561.04074a",
        "x": 1370,
        "y": 2240,
        "wires": []
    },
    {
        "id": "6e743ab8.ff0cb4",
        "type": "function",
        "z": "2b8628df.fdcca8",
        "name": "industry?",
        "func": "var query = {}\nquery.payload = {\n    geo:\n       { $near : {\n            $geometry: { \n                type: \"Point\",  \n                coordinates: [ msg.lon, msg.lat]\n            },\n            $minDistance: 0,\n            $maxDistance: 500 // changed from 350\n          }\n       }\n   }\nquery.originalMessage = msg;\nquery.collection = \"industries\";\nreturn query;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 320,
        "wires": [
            [
                "e2407548.63e388"
            ]
        ]
    },
    {
        "id": "4eceb0da.a51cc",
        "type": "function",
        "z": "2b8628df.fdcca8",
        "name": "false?",
        "func": "if (msg.payload.length > 0) {\n    // node.log(\"Is an industrie\");\n    return [null, msg.originalMessage];\n} else {\n    // node.log(\"Not an industrie positive\");\n    return [msg.originalMessage, null];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "59c0890d.7d97e8"
            ],
            []
        ],
        "outputLabels": [
            "not false positive",
            "false"
        ]
    },
    {
        "id": "2d1f11c9.bb155e",
        "type": "split",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1587.9999561309814,
        "y": 275.99999237060547,
        "wires": [
            [
                "9d8b3c7e.498b",
                "eaba3cfa.9782b"
            ]
        ]
    },
    {
        "id": "f52e79fc.196b48",
        "type": "delay",
        "z": "c1e7ebde.3e0b68",
        "name": "1000msg/5seg",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "minutes",
        "rate": "1000",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1977.9999561309814,
        "y": 275.99999237060547,
        "wires": [
            [
                "185b9977.ad8c57"
            ]
        ]
    },
    {
        "id": "185b9977.ad8c57",
        "type": "subflow:2b8628df.fdcca8",
        "z": "c1e7ebde.3e0b68",
        "name": "node-admin",
        "x": 2187.9999561309814,
        "y": 275.99999237060547,
        "wires": []
    },
    {
        "id": "d66ede91.62de4",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "match tracked fires",
        "func": "var pay = msg.payload;\nvar lon = msg.payload.ourid.coordinates[0];\nvar lat = msg.payload.ourid.coordinates[1];\n\nvar fires = {};\n// http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#find\nfires.collection = \"activefires\";\nfires.payload = [{\n    ourid:\n    { $near : {\n        $geometry: { \n        type: \"Point\",  \n        coordinates: [ lon, lat]\n    },\n    $minDistance: 0,\n    $maxDistance: 400\n  }\n}\n}];\nfires.originalPayload = pay;\nreturn fires;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1567.9999561309814,
        "y": 415.99999237060547,
        "wires": [
            [
                "8b3931ab.4733a"
            ]
        ]
    },
    {
        "id": "7fc4e8e9.ae5088",
        "type": "mongodb2 in",
        "z": "c1e7ebde.3e0b68",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find tracked",
        "collection": "trackedfires",
        "operation": "find.toArray",
        "x": 1215.999912261963,
        "y": 411.99998474121094,
        "wires": [
            [
                "c7d8a9c0.68e118"
            ]
        ]
    },
    {
        "id": "c7d8a9c0.68e118",
        "type": "split",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1395.999912261963,
        "y": 411.99998474121094,
        "wires": [
            [
                "d66ede91.62de4"
            ]
        ]
    },
    {
        "id": "78ecc59a.9af62c",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "find",
        "func": "var trackedfires = {};\ntrackedfires.payload = [{}];\nreturn [trackedfires, null]",
        "outputs": 1,
        "noerr": 0,
        "x": 1075.999912261963,
        "y": 411.99998474121094,
        "wires": [
            [
                "7fc4e8e9.ae5088"
            ]
        ]
    },
    {
        "id": "8b3931ab.4733a",
        "type": "mongodb2 in",
        "z": "c1e7ebde.3e0b68",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find tracked",
        "collection": "",
        "operation": "find.toArray",
        "x": 1767.9999561309814,
        "y": 415.99999237060547,
        "wires": [
            [
                "65a6556e.2c1acc"
            ]
        ]
    },
    {
        "id": "65a6556e.2c1acc",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "store",
        "func": "var onError = function (err) {\n    if (err) {\n        node.error(err);\n    }\n};\n\nif (Array.isArray(msg.payload) && \n    msg.payload.length > 0) {\n    \n    var tracked = msg.originalPayload;\n    // node.log(\"Processing fire \" + when);\n    var path = global.get('ftp-path');\n    var updates = [];\n    for (var i = 0; i < msg.payload.length; i++) {\n        var fire = msg.payload[i];\n        var acdate = fire.acq_date;\n        var actime = fire.acq_time;\n        var when = context.global.moment.utc(acdate + \" \" + actime, \"YYYY-MM-DD HH:mm\").toDate(); // .valueOf();\n        fire.when = when;\n\n        var ourid = {\n            type: fire.type,\n            when: when,\n            fire: tracked.name\n        };\n\n        var setcommon = {\n            //_id: id,\n            ourid: ourid,\n            when : when,\n            longitude: fire.longitude,\n            latitude: fire.latitude,\n            acq_date: acdate,\n            acq_time: actime,\n            scan : fire.scan,\n            track : fire.track,\n            satellite : fire.satellite,\n            confidence : fire.confidence,\n            version : fire.version,\n            frp : fire.frp,\n            daynight : fire.daynight,\n        };\n        var setdiff;\n        if (fire.type === \"modis\") {\n            setdiff = {\n                brightness : fire.brightness,\n                bright_t31 : fire.bright_t31\n            };\n        } else { // viirs\n            setdiff = {\n                bright_ti4 : fire.bright_ti4,\n                bright_ti5 : fire.bright_ti5,\n            };\n        }\n        \n        var setjoin = Object.assign(setcommon, setdiff);\n\n        var set = { \n            $set: setjoin\n        };\n        \n        // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#bulkWrite\n        // { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n        updates.push({ updateOne: { filter: {ourid: ourid}, update: set, upsert:true } });\n        \n        var email = {\n            fire: tracked.name,\n            date: acdate,\n            time: actime\n        }\n        node.send([null, email]);\n    }\n    var bulkUpdate = {};\n    bulkUpdate.collection = \"trackedfireshistory\";\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#bulkWrite\n    // https://docs.mongodb.com/manual/reference/write-concern/\n    bulkUpdate.payload = [updates, {w: 1, wtimeout: 60000}];\n    return bulkUpdate;\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 1921.9999561309814,
        "y": 415.99999237060547,
        "wires": [
            [
                "67a49970.cb1498",
                "9537932a.82321"
            ],
            [
                "4bfe00a0.45866"
            ]
        ],
        "outputLabels": [
            "db",
            "email"
        ]
    },
    {
        "id": "9537932a.82321",
        "type": "debug",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 2117.9999561309814,
        "y": 455.99999237060547,
        "wires": []
    },
    {
        "id": "67a49970.cb1498",
        "type": "mongodb2 in",
        "z": "c1e7ebde.3e0b68",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "bulkWrite",
        "collection": "",
        "operation": "bulkWrite",
        "x": 2107.9999561309814,
        "y": 415.99999237060547,
        "wires": [
            []
        ]
    },
    {
        "id": "1a45c24.a8cd93e",
        "type": "e-mail",
        "z": "c1e7ebde.3e0b68",
        "server": "selver.comunes.org",
        "port": "587",
        "secure": false,
        "name": "",
        "dname": "send email with notification",
        "x": 2725.999912261963,
        "y": 491.99998474121094,
        "wires": []
    },
    {
        "id": "4bfe00a0.45866",
        "type": "credentials",
        "z": "c1e7ebde.3e0b68",
        "name": "email-to",
        "props": [
            {
                "value": "to",
                "type": "msg"
            }
        ],
        "x": 2105.999912261963,
        "y": 491.99998474121094,
        "wires": [
            [
                "3b0ef9e7.190336"
            ]
        ]
    },
    {
        "id": "3b0ef9e7.190336",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "tracked fire alarm",
        "func": "var email = {};\nemail.from = \"noreply@comunes.org\";\nemail.to = msg.to;\nemail.topic = \"Fuego detectado en \" + msg.fire;\nemail.payload  = \"Detectado a las \" + msg.date +  \" \" + msg.time + \"(UTC)\\n\\n\";\nemail.payload += \"Recibirás como máximo dos avisos al día.\\n\\n\";\nreturn email;",
        "outputs": 1,
        "noerr": 0,
        "x": 2295.999912261963,
        "y": 491.99998474121094,
        "wires": [
            [
                "8d569fc2.4bb7c"
            ]
        ]
    },
    {
        "id": "8d569fc2.4bb7c",
        "type": "delay",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "12",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 2505.999912261963,
        "y": 491.99998474121094,
        "wires": [
            [
                "1a45c24.a8cd93e"
            ]
        ]
    },
    {
        "id": "9d8b3c7e.498b",
        "type": "debug",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 1787.9999561309814,
        "y": 195.99999237060547,
        "wires": []
    },
    {
        "id": "46d0f45d.c0b6cc",
        "type": "delay",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 657.9999561309814,
        "y": 335.99999237060547,
        "wires": [
            [
                "b32399ec.e8a038"
            ]
        ]
    },
    {
        "id": "faa3f288.2a46c",
        "type": "switch",
        "z": "c1e7ebde.3e0b68",
        "name": "bot?",
        "property": "telegramBot",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "es",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 507.99995613098145,
        "y": 275.99999237060547,
        "wires": [
            [
                "b32399ec.e8a038"
            ],
            [
                "46d0f45d.c0b6cc"
            ]
        ],
        "outputLabels": [
            "es",
            "others"
        ]
    },
    {
        "id": "c93179dd.45f798",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "wait for touch",
        "func": "const pay = msg.payload;\nif (pay && \n    pay.type === \"file\" && \n    pay.event && \n    pay.event.mask === 32 &&\n    pay.event.name === \"new\") {\n    const newMsg = {};\n    newMsg.payload = \"new data\";\n    return newMsg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 337.99995613098145,
        "y": 275.99999237060547,
        "wires": [
            [
                "faa3f288.2a46c"
            ]
        ]
    },
    {
        "id": "b32399ec.e8a038",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "continue",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 797.9999561309814,
        "y": 275.99999237060547,
        "wires": [
            [
                "3581b605.8735ea",
                "3090c420.32e79c"
            ]
        ]
    },
    {
        "id": "4126fba3.c70e44",
        "type": "inotify",
        "z": "c1e7ebde.3e0b68",
        "folder": "/var/tmp/nasa-data",
        "persistent": true,
        "name": "nasa-data",
        "x": 157.99995613098145,
        "y": 275.99999237060547,
        "wires": [
            [
                "c93179dd.45f798",
                "1018361c.620a8a"
            ]
        ]
    },
    {
        "id": "c5afb643.c445f8",
        "type": "mongodb2 in",
        "z": "c1e7ebde.3e0b68",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "findUnion",
        "collection": "siteSettings",
        "operation": "findOne",
        "x": 1077.9999561309814,
        "y": 255.99999237060547,
        "wires": [
            [
                "122f4647.c27b2a",
                "1e8ed4d7.19e3cb"
            ]
        ]
    },
    {
        "id": "122f4647.c27b2a",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "if error",
        "func": "if (typeof msg.error !== 'undefined') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1167.9999561309814,
        "y": 315.99999237060547,
        "wires": [
            [
                "21bb60ad.a38a7"
            ]
        ]
    },
    {
        "id": "21bb60ad.a38a7",
        "type": "debug",
        "z": "c1e7ebde.3e0b68",
        "name": "errors",
        "active": true,
        "console": "false",
        "complete": "error",
        "x": 1307.9999561309814,
        "y": 315.99999237060547,
        "wires": []
    },
    {
        "id": "3581b605.8735ea",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "subs?",
        "func": "msg.payload = [{ name: 'subs-private-union'}];\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 947.9999561309814,
        "y": 255.99999237060547,
        "wires": [
            [
                "c5afb643.c445f8"
            ]
        ]
    },
    {
        "id": "1e8ed4d7.19e3cb",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "fires to notif",
        "func": "const value = msg.payload.value;\nconst union = JSON.parse(value);\nmsg.payload = [{\n    ourid: {\n        $geoWithin: {\n            $geometry: union.geometry\n        }\n    }\n}];\nreturn msg;\n    \n",
        "outputs": "1",
        "noerr": 0,
        "x": 1267.9999561309814,
        "y": 255.99999237060547,
        "wires": [
            [
                "cb517a81.ecf308"
            ]
        ]
    },
    {
        "id": "cb517a81.ecf308",
        "type": "mongodb2 in",
        "z": "c1e7ebde.3e0b68",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find",
        "collection": "activefires",
        "operation": "find.toArray",
        "x": 1447.9999561309814,
        "y": 255.99999237060547,
        "wires": [
            [
                "2d1f11c9.bb155e"
            ]
        ]
    },
    {
        "id": "eaba3cfa.9782b",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "lat/lon/type out pay",
        "func": "msg.lon = msg.payload.ourid.coordinates[0];\nmsg.lat = msg.payload.ourid.coordinates[1];\nmsg.type = msg.payload.type;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1767.9999561309814,
        "y": 275.99999237060547,
        "wires": [
            [
                "f52e79fc.196b48"
            ]
        ]
    },
    {
        "id": "9a280b29.7a7178",
        "type": "function",
        "z": "fc78b15f.c64b7",
        "name": "only one bot",
        "func": "if (global.get(\"notifyWebUsers\")) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "a5ddbebe.57485",
        "type": "comment",
        "z": "557e0255.d1220c",
        "name": "original lintening in 6789",
        "info": "Liste on  6789\nstream of string\ndelimiter \\n\ntopic: blank\nName: test:6789",
        "x": 160,
        "y": 140,
        "wires": []
    },
    {
        "id": "9025d4c7.080bc8",
        "type": "subflow:fc78b15f.c64b7",
        "z": "c1e7ebde.3e0b68",
        "name": "only one bot",
        "x": 547.9999561309814,
        "y": 515.9999923706055,
        "wires": [
            [
                "8d64c71.986bc38",
                "e1ad7f59.37f74",
                "18442d0b.f42373",
                "fd821777.954738",
                "60c258f3.cbe8c8",
                "df8afba7.cfb678"
            ]
        ]
    },
    {
        "id": "6cb0558a.3408bc",
        "type": "subflow:fc78b15f.c64b7",
        "z": "93cb4937.6fc068",
        "x": 310,
        "y": 1900,
        "wires": [
            [
                "79c5a18b.dc663",
                "8be77355.e4b82",
                "df3b630.a229ea",
                "6e94e3ec.29eafc",
                "2cb7dc7e.180204",
                "56638eac.27187",
                "47d9b91c.d37ec8",
                "997b33bf.c90ae",
                "c92ac6.bf322538"
            ]
        ]
    },
    {
        "id": "4e83d06d.3abec",
        "type": "subflow:c8522537.c6f908",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "x": 1057.9999561309814,
        "y": 615.9999923706055,
        "wires": []
    },
    {
        "id": "5357e7c4.ec7f08",
        "type": "subflow:3f0768a7.1fac78",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "x": 1047.9999561309814,
        "y": 655.9999923706055,
        "wires": []
    },
    {
        "id": "df8afba7.cfb678",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "find last",
        "func": "var query = {};\nquery.payload = [{}, { sort: { when: -1 } }];\nreturn [query, null]",
        "outputs": 1,
        "noerr": 0,
        "x": 797.9999561309814,
        "y": 695.9999923706055,
        "wires": [
            [
                "8fad9ca.0e9836"
            ]
        ]
    },
    {
        "id": "8d64c71.986bc38",
        "type": "file in",
        "z": "c1e7ebde.3e0b68",
        "name": "ftp-read-fires",
        "filename": "/var/tmp/nasa-data/ftp-read-fires-stats",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 807.9999561309814,
        "y": 495.99999237060547,
        "wires": [
            [
                "19801b66.e2d305"
            ]
        ]
    },
    {
        "id": "fd821777.954738",
        "type": "file in",
        "z": "c1e7ebde.3e0b68",
        "name": "new-fires",
        "filename": "/var/tmp/nasa-data/new-fires-stats",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 797.9999561309814,
        "y": 615.9999923706055,
        "wires": [
            [
                "4e83d06d.3abec"
            ]
        ]
    },
    {
        "id": "60c258f3.cbe8c8",
        "type": "file in",
        "z": "c1e7ebde.3e0b68",
        "name": "total-fires",
        "filename": "/var/tmp/nasa-data/total-fires-stats",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 797.9999561309814,
        "y": 655.9999923706055,
        "wires": [
            [
                "5357e7c4.ec7f08"
            ]
        ]
    },
    {
        "id": "18442d0b.f42373",
        "type": "file in",
        "z": "c1e7ebde.3e0b68",
        "name": "fires-to-notif",
        "filename": "/var/tmp/nasa-data/fires-to-notif-stats",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 807.9999561309814,
        "y": 575.9999923706055,
        "wires": [
            [
                "dcca1ae4.5cd828"
            ]
        ]
    },
    {
        "id": "e1ad7f59.37f74",
        "type": "file in",
        "z": "c1e7ebde.3e0b68",
        "name": "disappeared-fires",
        "filename": "/var/tmp/nasa-data/disappeared-fires-stats",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 827.9999561309814,
        "y": 535.9999923706055,
        "wires": [
            [
                "c7e590df.11826"
            ]
        ]
    },
    {
        "id": "1018361c.620a8a",
        "type": "function",
        "z": "c1e7ebde.3e0b68",
        "name": "wait for end",
        "func": "const pay = msg.payload;\nif (pay && \n    pay.type === \"file\" && \n    pay.event && \n    pay.event.mask === 32 &&\n    pay.event.name === \"end\") {\n    const newMsg = {};\n    newMsg.payload = \"new data\";\n    return newMsg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 307.99995613098145,
        "y": 515.9999923706055,
        "wires": [
            [
                "9025d4c7.080bc8"
            ]
        ]
    },
    {
        "id": "3090c420.32e79c",
        "type": "subflow:fc78b15f.c64b7",
        "z": "c1e7ebde.3e0b68",
        "name": "only one bot",
        "x": 907.9999561309814,
        "y": 375.99999237060547,
        "wires": [
            [
                "78ecc59a.9af62c"
            ]
        ]
    },
    {
        "id": "41d766b4.a750d8",
        "type": "ui_chart",
        "z": "274b3b4f.3ee674",
        "name": "disappeared fires",
        "group": "601660c.cd104a",
        "order": 9,
        "width": "0",
        "height": "0",
        "label": "Disappeared fires",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 290,
        "y": 40,
        "wires": [
            [
                "3c6423e9.9879bc"
            ],
            []
        ]
    },
    {
        "id": "3c6423e9.9879bc",
        "type": "persist in",
        "z": "274b3b4f.3ee674",
        "name": "disappeared-fires",
        "storageNode": "684810a9.5bc6e",
        "x": 510,
        "y": 40,
        "wires": []
    },
    {
        "id": "5ab5ea3b.babca4",
        "type": "persist out",
        "z": "274b3b4f.3ee674",
        "name": "disappeared-fires",
        "storageNode": "684810a9.5bc6e",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "41d766b4.a750d8"
            ]
        ]
    },
    {
        "id": "dcca1ae4.5cd828",
        "type": "subflow:cb92bddb.cd891",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "x": 1047.9999561309814,
        "y": 575.9999923706055,
        "wires": []
    },
    {
        "id": "39f436ba.2892aa",
        "type": "ui_chart",
        "z": "cb92bddb.cd891",
        "name": "fires to notify",
        "group": "601660c.cd104a",
        "order": 7,
        "width": "0",
        "height": "0",
        "label": "Fires to notify",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "7a1c06a6.635ed8"
            ],
            []
        ]
    },
    {
        "id": "7a1c06a6.635ed8",
        "type": "persist in",
        "z": "cb92bddb.cd891",
        "name": "fires-to-notif",
        "storageNode": "2cac9837.f79ed8",
        "x": 470,
        "y": 60,
        "wires": []
    },
    {
        "id": "b84936e7.951a08",
        "type": "persist out",
        "z": "cb92bddb.cd891",
        "name": "fires-to-notif",
        "storageNode": "2cac9837.f79ed8",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "39f436ba.2892aa"
            ]
        ]
    },
    {
        "id": "ca4baf0d.cf966",
        "type": "ui_chart",
        "z": "29f2a71d.f90dd8",
        "name": "ftp read fires",
        "group": "601660c.cd104a",
        "order": 5,
        "width": "0",
        "height": "0",
        "label": "Fires read from ftp",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 290,
        "y": 60,
        "wires": [
            [
                "e3ebc558.faf448"
            ],
            []
        ]
    },
    {
        "id": "e3ebc558.faf448",
        "type": "persist in",
        "z": "29f2a71d.f90dd8",
        "name": "ftp-read-fires",
        "storageNode": "bc532db6.6386f",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "30d9016.e25cefe",
        "type": "persist out",
        "z": "29f2a71d.f90dd8",
        "name": "ftp-read-fires",
        "storageNode": "bc532db6.6386f",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "ca4baf0d.cf966"
            ]
        ]
    },
    {
        "id": "c7e590df.11826",
        "type": "subflow:274b3b4f.3ee674",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "x": 1057.9999561309814,
        "y": 535.9999923706055,
        "wires": []
    },
    {
        "id": "19801b66.e2d305",
        "type": "subflow:29f2a71d.f90dd8",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "x": 1047.9999561309814,
        "y": 495.99999237060547,
        "wires": []
    },
    {
        "id": "8fad9ca.0e9836",
        "type": "subflow:ed14151e.813358",
        "z": "c1e7ebde.3e0b68",
        "name": "",
        "x": 1017.9999561309814,
        "y": 695.9999923706055,
        "wires": []
    },
    {
        "id": "580930a4.dd3ed",
        "type": "mongodb2 in",
        "z": "ed14151e.813358",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find in activefires",
        "collection": "activefires",
        "operation": "findOne",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "898c62ce.12af8"
            ]
        ]
    },
    {
        "id": "66214482.62083c",
        "type": "ui_chart",
        "z": "ed14151e.813358",
        "name": "last detection",
        "group": "601660c.cd104a",
        "order": 6,
        "width": "0",
        "height": "0",
        "label": "Last fire detected (minutes)",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 680,
        "y": 140,
        "wires": [
            [
                "8b57ffe.417ee"
            ],
            []
        ]
    },
    {
        "id": "8b57ffe.417ee",
        "type": "persist in",
        "z": "ed14151e.813358",
        "name": "last-fire-detected",
        "storageNode": "60b3c803.aa7258",
        "x": 950,
        "y": 140,
        "wires": []
    },
    {
        "id": "9d39f0e8.1ee1f",
        "type": "persist out",
        "z": "ed14151e.813358",
        "name": "last-fire-detected",
        "storageNode": "60b3c803.aa7258",
        "x": 690,
        "y": 180,
        "wires": [
            [
                "66214482.62083c"
            ]
        ]
    },
    {
        "id": "926d060f.ee8768",
        "type": "ui_text",
        "z": "ed14151e.813358",
        "group": "601660c.cd104a",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "last detection",
        "label": "Last fire detected",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "898c62ce.12af8",
        "type": "function",
        "z": "ed14151e.813358",
        "name": "when",
        "func": "const when = msg.payload.when;\nconst since = context.global.moment.utc(when).fromNow();\nmsg.payload = since;\nconst fromNowMin = {};\nconst duration = context.global.moment.duration((new Date()) - when);\nfromNowMin.payload = (duration.days() * 24 + 60) + (duration.hours() * 60) + duration.minutes(); \nreturn [msg, fromNowMin];\n",
        "outputs": "2",
        "noerr": 0,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "926d060f.ee8768"
            ],
            [
                "66214482.62083c"
            ]
        ]
    },
    {
        "id": "5972e93c.a3d3d8",
        "type": "debug",
        "z": "ed14151e.813358",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "c2fe905d.16bf5",
        "type": "debug",
        "z": "2b8628df.fdcca8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "ee98c7a1.aeffc8",
        "type": "mongodb2 in",
        "z": "62f56d4f.2eb0a4",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "count2",
        "collection": "",
        "operation": "count",
        "x": 407,
        "y": 67,
        "wires": [
            [
                "de35b96d.e4d4f8"
            ]
        ]
    },
    {
        "id": "50d02ccc.3af294",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "activefires",
        "func": "msg.collection = 'activefires';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 303,
        "y": 1540,
        "wires": [
            [
                "42a4056d.a584ec"
            ]
        ]
    },
    {
        "id": "fcb0b12a.bb501",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 127,
        "y": 1536,
        "wires": [
            [
                "50d02ccc.3af294"
            ]
        ]
    },
    {
        "id": "aef6fcb9.26227",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 722.5000343322754,
        "y": 1542.9999618530273,
        "wires": []
    },
    {
        "id": "2e20e23c.e0ffee",
        "type": "assert",
        "z": "62f56d4f.2eb0a4",
        "name": "collection?",
        "rules": [
            {
                "property": "collection",
                "propertyType": "msg",
                "type": "type",
                "value": "string",
                "failMsg": "You should provide msg.collection"
            }
        ],
        "x": 239.5,
        "y": 67,
        "wires": [
            [
                "ee98c7a1.aeffc8"
            ]
        ]
    },
    {
        "id": "de35b96d.e4d4f8",
        "type": "assert",
        "z": "62f56d4f.2eb0a4",
        "name": "number?",
        "rules": [
            {
                "property": "payload",
                "propertyType": "msg",
                "type": "type",
                "value": "number",
                "failMsg": "output should be a number"
            }
        ],
        "x": 573,
        "y": 69,
        "wires": [
            []
        ]
    },
    {
        "id": "42a4056d.a584ec",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "5501c3cc.11327c",
        "name": "",
        "x": 510.25001525878906,
        "y": 1540.9999885559082,
        "wires": [
            [
                "aef6fcb9.26227"
            ]
        ]
    },
    {
        "id": "e998046d.aa8448",
        "type": "assert",
        "z": "3ca4f49b.662eec",
        "name": "array?",
        "rules": [
            {
                "property": "payload",
                "propertyType": "msg",
                "type": "type",
                "value": "array",
                "failMsg": "output should be a number"
            }
        ],
        "x": 772.0174579620361,
        "y": 55.0106897354126,
        "wires": [
            []
        ]
    },
    {
        "id": "b5dd1c44.d3792",
        "type": "mongodb2 in",
        "z": "3ca4f49b.662eec",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "find2",
        "collection": "",
        "operation": "find.toArray",
        "x": 617.0173978805542,
        "y": 56.01055145263672,
        "wires": [
            [
                "e998046d.aa8448",
                "f9c351c4.e0572"
            ]
        ]
    },
    {
        "id": "e65d93c8.07379",
        "type": "assert",
        "z": "3ca4f49b.662eec",
        "name": "collection?",
        "rules": [
            {
                "property": "collection",
                "propertyType": "msg",
                "type": "type",
                "value": "string",
                "failMsg": "You should provide msg.collection"
            }
        ],
        "x": 242.5174102783203,
        "y": 50.01054573059082,
        "wires": [
            [
                "5cc268e6.1782d8"
            ]
        ]
    },
    {
        "id": "77b05421.dd0dbc",
        "type": "debug",
        "z": "5501c3cc.11327c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload.length",
        "x": 716.0173568725586,
        "y": 1492.0105772018433,
        "wires": []
    },
    {
        "id": "49dcf4bb.b0fdac",
        "type": "function",
        "z": "5501c3cc.11327c",
        "name": "activefires",
        "func": "msg.collection = 'activefires';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 307.0173873901367,
        "y": 1491.0104780197144,
        "wires": [
            [
                "6d12f80a.4473e8"
            ]
        ]
    },
    {
        "id": "a80436a9.ccd688",
        "type": "inject",
        "z": "5501c3cc.11327c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 131.01738739013672,
        "y": 1487.0104780197144,
        "wires": [
            [
                "49dcf4bb.b0fdac"
            ]
        ]
    },
    {
        "id": "6d12f80a.4473e8",
        "type": "subflow:3ca4f49b.662eec",
        "z": "5501c3cc.11327c",
        "name": "",
        "x": 515.7674255371094,
        "y": 1490.0106687545776,
        "wires": [
            [
                "77b05421.dd0dbc"
            ]
        ]
    },
    {
        "id": "3f6a0233.81338e",
        "type": "subflow:3ca4f49b.662eec",
        "z": "5501c3cc.11327c",
        "name": "",
        "x": 739.0195693969727,
        "y": 694.7539186477661,
        "wires": [
            [
                "10e6ffe2.fab67"
            ]
        ]
    },
    {
        "id": "6a393315.a9ee1c",
        "type": "subflow:3ca4f49b.662eec",
        "z": "128790f6.dee0df",
        "name": "",
        "x": 708.0195388793945,
        "y": 204.0039358139038,
        "wires": [
            [
                "ace2d6f2.4362f8"
            ]
        ]
    },
    {
        "id": "a2a7d875.715408",
        "type": "subflow:3ca4f49b.662eec",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 982.0195274353027,
        "y": 1244.0039625167847,
        "wires": [
            [
                "2e774d09.afa5b2"
            ]
        ]
    },
    {
        "id": "1ea5e961.92d277",
        "type": "subflow:3ca4f49b.662eec",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 770.01953125,
        "y": 1921.2539801597595,
        "wires": [
            [
                "92dfe851.a1b278"
            ]
        ]
    },
    {
        "id": "c84b4c60.464b8",
        "type": "subflow:3ca4f49b.662eec",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 770.0195865631104,
        "y": 1884.2540121078491,
        "wires": [
            [
                "39f43b07.3083e4"
            ]
        ]
    },
    {
        "id": "37ad51e8.5a665e",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 770.0195693969727,
        "y": 1840.2539196014404,
        "wires": [
            [
                "fdcc349d.ccb418"
            ]
        ]
    },
    {
        "id": "9145956e.801918",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 770.0195693969727,
        "y": 1798.2539205551147,
        "wires": [
            [
                "f9147748.c27188",
                "b5a4b8cf.619128"
            ]
        ]
    },
    {
        "id": "d544e3ec.6be83",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 770.0195865631104,
        "y": 2046.2539863586426,
        "wires": [
            [
                "61f539b5.950d08"
            ]
        ]
    },
    {
        "id": "6439ed03.3aab74",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 768.0195236206055,
        "y": 2181.253927230835,
        "wires": [
            [
                "5d0b4862.79b4f8",
                "2d2926db.d591ea"
            ]
        ]
    },
    {
        "id": "e1453fda.78635",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 800.0195693969727,
        "y": 2282.2539205551147,
        "wires": [
            [
                "fed29111.b7e59",
                "f35944b1.d59d48"
            ]
        ]
    },
    {
        "id": "e1171d99.ae10e",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 763.0195255279541,
        "y": 2000.254014968872,
        "wires": [
            [
                "28213612.28e18a"
            ]
        ]
    },
    {
        "id": "8a2660ac.113c5",
        "type": "subflow:3ca4f49b.662eec",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 864.3506660461426,
        "y": 804.5659840106964,
        "wires": [
            [
                "54c7f5d3.8c4e7c",
                "6cfebdf8.84ef74"
            ]
        ]
    },
    {
        "id": "8e6b94ff.9d6968",
        "type": "subflow:3ca4f49b.662eec",
        "z": "c644db46.3854c8",
        "name": "",
        "x": 836.0173950195312,
        "y": 123.01042079925537,
        "wires": [
            [
                "a227a0dc.c36ca"
            ]
        ]
    },
    {
        "id": "56b79683.17ee28",
        "type": "subflow:3ca4f49b.662eec",
        "z": "c644db46.3854c8",
        "name": "",
        "x": 548.017333984375,
        "y": 61.01041603088379,
        "wires": [
            [
                "af778312.fcd62"
            ]
        ]
    },
    {
        "id": "e4ab6e6b.fef9",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "2f0217a5.051978",
        "x": 366.1909942626953,
        "y": 57.354164123535156,
        "wires": [
            [
                "557a9912.ee75e8"
            ]
        ]
    },
    {
        "id": "8c1690d8.cb5c7",
        "type": "subflow:62f56d4f.2eb0a4",
        "z": "2f0217a5.051978",
        "x": 673.0173683166504,
        "y": 215.010404586792,
        "wires": [
            [
                "7f8ce0c9.99ac4"
            ]
        ]
    },
    {
        "id": "f9c351c4.e0572",
        "type": "function",
        "z": "3ca4f49b.662eec",
        "name": "if error",
        "func": "if (typeof msg.error !== 'undefined') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 746.0173177719116,
        "y": 157.0104169845581,
        "wires": [
            [
                "bbc1bb1b.e28f68"
            ]
        ]
    },
    {
        "id": "bbc1bb1b.e28f68",
        "type": "debug",
        "z": "3ca4f49b.662eec",
        "name": "errors",
        "active": true,
        "console": "false",
        "complete": "error",
        "x": 888.0173273086548,
        "y": 158.01041674613953,
        "wires": []
    },
    {
        "id": "43acea2.b597f14",
        "type": "subflow:3ca4f49b.662eec",
        "z": "76bd701f.29d0f",
        "name": "",
        "x": 739.0173759460449,
        "y": 102.01041412353516,
        "wires": [
            [
                "56722a87.7bd4b4"
            ]
        ]
    },
    {
        "id": "20a29f00.ec2d2",
        "type": "subflow:3ca4f49b.662eec",
        "z": "2b8628df.fdcca8",
        "name": "",
        "x": 880.0173187255859,
        "y": 242.01040267944336,
        "wires": [
            [
                "1986ad37.928233"
            ]
        ]
    },
    {
        "id": "e2407548.63e388",
        "type": "subflow:3ca4f49b.662eec",
        "z": "2b8628df.fdcca8",
        "name": "",
        "x": 380.01734161376953,
        "y": 319.0103964805603,
        "wires": [
            [
                "4eceb0da.a51cc"
            ]
        ]
    },
    {
        "id": "2f99081.36175f8",
        "type": "subflow:3ca4f49b.662eec",
        "z": "2b8628df.fdcca8",
        "name": "",
        "x": 391.0173568725586,
        "y": 241.0104055404663,
        "wires": [
            [
                "9e65a744.1a6a68"
            ]
        ]
    },
    {
        "id": "c034b2bd.9e5f7",
        "type": "subflow:3ca4f49b.662eec",
        "z": "4384af8e.a7409",
        "name": "",
        "x": 1312.0173377990723,
        "y": 41.01041793823242,
        "wires": [
            [
                "81be2f6c.56aa8"
            ]
        ]
    },
    {
        "id": "e19c5735.fba9a8",
        "type": "subflow:3ca4f49b.662eec",
        "z": "95e78a8b.50a428",
        "name": "",
        "x": 515.017333984375,
        "y": 100.01041412353516,
        "wires": [
            [
                "990b8bb6.bacdd8"
            ]
        ]
    },
    {
        "id": "5cc268e6.1782d8",
        "type": "function",
        "z": "3ca4f49b.662eec",
        "name": "payload to array",
        "func": "const pay = msg.payload;\nmsg.payload = [ pay ];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 433.52777099609375,
        "y": 54.94097137451172,
        "wires": [
            [
                "b5dd1c44.d3792"
            ]
        ]
    },
    {
        "id": "3f03f40a.1ef59c",
        "type": "debug",
        "z": "3ca4f49b.662eec",
        "name": "find debug",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 798.0173282623291,
        "y": 20.010419845581055,
        "wires": []
    },
    {
        "id": "cda0b25b.c9f79",
        "type": "debug",
        "z": "62f56d4f.2eb0a4",
        "name": "count2 debug",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 594.5243072509766,
        "y": 167.21527862548828,
        "wires": []
    },
    {
        "id": "b2cc00b4.29906",
        "type": "debug",
        "z": "93cb4937.6fc068",
        "name": "start",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 147.5243377685547,
        "y": 524.430591583252,
        "wires": []
    },
    {
        "id": "406eb40c.69dd7c",
        "type": "delay",
        "z": "4384af8e.a7409",
        "name": "dedup",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 835.1910018920898,
        "y": 41.84034538269043,
        "wires": [
            [
                "6b27a3a5.4208dc"
            ]
        ]
    },
    {
        "id": "407d0b1.54cadf4",
        "type": "mongodb2 in",
        "z": "b80c15d3.8f06f8",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "update2",
        "collection": "",
        "operation": "updateOne",
        "x": 644.0173301696777,
        "y": 45.01042175292969,
        "wires": [
            [
                "ed6ae14c.53b58"
            ]
        ]
    },
    {
        "id": "5fe814a0.c72d9c",
        "type": "assert",
        "z": "b80c15d3.8f06f8",
        "name": "collection/query/payload?",
        "rules": [
            {
                "property": "collection",
                "propertyType": "msg",
                "type": "type",
                "value": "string",
                "failMsg": "You should provide msg.collection"
            },
            {
                "property": "payload",
                "propertyType": "msg",
                "type": "type",
                "value": "object",
                "failMsg": "upload payload is not a object"
            },
            {
                "property": "query",
                "propertyType": "msg",
                "type": "type",
                "value": "object",
                "failMsg": "upload query is not a object"
            },
            {
                "property": "upsert",
                "propertyType": "msg",
                "type": "type",
                "value": "boolean",
                "failMsg": "upload upsert is not configured"
            }
        ],
        "x": 242.51740646362305,
        "y": 44.01074552536011,
        "wires": [
            [
                "28a77544.febb7a"
            ]
        ]
    },
    {
        "id": "ed6ae14c.53b58",
        "type": "function",
        "z": "b80c15d3.8f06f8",
        "name": "if error",
        "func": "if (typeof msg.error !== 'undefined') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 803.0173835754395,
        "y": 46.67741012573242,
        "wires": [
            [
                "3774beb9.c31da2"
            ]
        ]
    },
    {
        "id": "3774beb9.c31da2",
        "type": "debug",
        "z": "b80c15d3.8f06f8",
        "name": "errors",
        "active": true,
        "console": "false",
        "complete": "error",
        "x": 968.0174102783203,
        "y": 47.677547454833984,
        "wires": []
    },
    {
        "id": "28a77544.febb7a",
        "type": "function",
        "z": "b80c15d3.8f06f8",
        "name": "transf update",
        "func": "var update = {};\nupdate.payload = [\n    msg.query,\n    msg.payload,\n    { upsert: msg.upsert }\n];\nupdate.collection = msg.collection;\nreturn update;",
        "outputs": 1,
        "noerr": 0,
        "x": 463.5243034362793,
        "y": 43.61488437652588,
        "wires": [
            [
                "407d0b1.54cadf4"
            ]
        ]
    },
    {
        "id": "4b90978e.872578",
        "type": "subflow:b80c15d3.8f06f8",
        "z": "b08bc794.82abc8",
        "name": "",
        "x": 424.51390075683594,
        "y": 37.52083778381348,
        "wires": [
            []
        ]
    },
    {
        "id": "dd1c0b95.b15b28",
        "type": "function",
        "z": "b08bc794.82abc8",
        "name": "upsert!",
        "func": "msg.upsert = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 183.51389694213867,
        "y": 35.94097137451172,
        "wires": [
            [
                "4b90978e.872578"
            ]
        ]
    },
    {
        "id": "5170075a.fb53e8",
        "type": "subflow:b80c15d3.8f06f8",
        "z": "5126d9b8.d9a858",
        "x": 484.01734161376953,
        "y": 47.01041793823242,
        "wires": [
            []
        ]
    },
    {
        "id": "7a967f49.d1777",
        "type": "function",
        "z": "5126d9b8.d9a858",
        "name": "not upsert",
        "func": "msg.upsert = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210.0173740386963,
        "y": 36.430551528930664,
        "wires": [
            [
                "5170075a.fb53e8"
            ]
        ]
    },
    {
        "id": "b79ba2c5.287b3",
        "type": "subflow:b08bc794.82abc8",
        "z": "93cb4937.6fc068",
        "x": 1215.750156402588,
        "y": 741.392406463623,
        "wires": [
            []
        ]
    },
    {
        "id": "2325b207.a4a4fe",
        "type": "subflow:5126d9b8.d9a858",
        "z": "93cb4937.6fc068",
        "x": 791.4132995605469,
        "y": 647.3680686950684,
        "wires": [
            []
        ]
    },
    {
        "id": "7311f974.4670a8",
        "type": "subflow:b08bc794.82abc8",
        "z": "93cb4937.6fc068",
        "x": 1088.7430572509766,
        "y": 529.6979141235352,
        "wires": [
            []
        ]
    },
    {
        "id": "c728fd84.28afc",
        "type": "subflow:b08bc794.82abc8",
        "z": "93cb4937.6fc068",
        "x": 877.5139503479004,
        "y": 1518.2465839385986,
        "wires": [
            []
        ]
    },
    {
        "id": "be5e8e74.31b64",
        "type": "subflow:b08bc794.82abc8",
        "z": "93cb4937.6fc068",
        "x": 1026.5173377990723,
        "y": 1562.2431964874268,
        "wires": [
            []
        ]
    },
    {
        "id": "858f9032.262b",
        "type": "subflow:b08bc794.82abc8",
        "z": "2f0217a5.051978",
        "x": 1225.7395782470703,
        "y": 278.6909866333008,
        "wires": [
            []
        ]
    },
    {
        "id": "a1d870da.64966",
        "type": "subflow:b08bc794.82abc8",
        "z": "95e78a8b.50a428",
        "x": 2159.5244903564453,
        "y": 145.72570610046387,
        "wires": [
            []
        ]
    },
    {
        "id": "c9885f4.242bda",
        "type": "subflow:b08bc794.82abc8",
        "z": "289c75f9.8cd11a",
        "x": 627.0173168182373,
        "y": 79.01041793823242,
        "wires": [
            []
        ]
    },
    {
        "id": "ca45b7ce.3822c8",
        "type": "mongodb2 in",
        "z": "93cb4937.6fc068",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "deleteMany",
        "collection": " notifications",
        "operation": "deleteMany",
        "x": 588.5139312744141,
        "y": 81.43057632446289,
        "wires": [
            []
        ]
    },
    {
        "id": "d0bbfbb3.627958",
        "type": "mongodb2 in",
        "z": "93cb4937.6fc068",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "deleteOne",
        "collection": "",
        "operation": "deleteOne",
        "x": 755.5139465332031,
        "y": 512.4236307144165,
        "wires": [
            []
        ]
    },
    {
        "id": "74564777.4dfd18",
        "type": "mongodb2 in",
        "z": "1f94cade.30ea35",
        "service": "_ext_",
        "configNode": "d5559ee5.960e2",
        "name": "insertOne2",
        "collection": "",
        "operation": "insertOne",
        "x": 536.0173263549805,
        "y": 52.01041793823242,
        "wires": [
            [
                "96c30184.f7f71"
            ]
        ]
    },
    {
        "id": "4b9c39bc.5d0e08",
        "type": "assert",
        "z": "1f94cade.30ea35",
        "name": "collection/payload?",
        "rules": [
            {
                "property": "collection",
                "propertyType": "msg",
                "type": "type",
                "value": "string",
                "failMsg": "You should provide msg.collection"
            },
            {
                "property": "payload",
                "propertyType": "msg",
                "type": "type",
                "value": "array",
                "failMsg": "upload payload is not an array"
            }
        ],
        "x": 211.5174102783203,
        "y": 54.010737895965576,
        "wires": [
            [
                "74564777.4dfd18"
            ]
        ]
    },
    {
        "id": "96c30184.f7f71",
        "type": "function",
        "z": "1f94cade.30ea35",
        "name": "if error",
        "func": "if (typeof msg.error !== 'undefined') {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 792.0173873901367,
        "y": 56.67740249633789,
        "wires": [
            [
                "b8b546c8.002da8"
            ]
        ]
    },
    {
        "id": "b8b546c8.002da8",
        "type": "debug",
        "z": "1f94cade.30ea35",
        "name": "errors",
        "active": true,
        "console": "false",
        "complete": "error",
        "x": 957.0174140930176,
        "y": 57.67753982543945,
        "wires": []
    },
    {
        "id": "dba8bb0b.46db38",
        "type": "subflow:1f94cade.30ea35",
        "z": "95e78a8b.50a428",
        "x": 1418.4063606262207,
        "y": 141.7256898880005,
        "wires": [
            []
        ]
    },
    {
        "id": "9174cb7d.757948",
        "type": "delay",
        "z": "93cb4937.6fc068",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 214.01734924316406,
        "y": 1169.232666015625,
        "wires": [
            [
                "5e792abd.c19084"
            ]
        ]
    },
    {
        "id": "54cea7b0.f5f588",
        "type": "function",
        "z": "4384af8e.a7409",
        "name": "normalize chatId",
        "func": "if (msg.payload && msg.payload.chatId ) {\n    // ok\n} else {\n    if (msg.chat && msg.chat.id) {\n        msg.payload.chatId = msg.chat.id;\n    } else {\n        return [null, msg]\n    }\n}\nreturn [msg, null];",
        "outputs": "2",
        "noerr": 0,
        "x": 171.5243148803711,
        "y": 102.94101905822754,
        "wires": [
            [
                "83d02c40.cf2b6"
            ],
            [
                "56b500c6.be805"
            ]
        ]
    },
    {
        "id": "56b500c6.be805",
        "type": "debug",
        "z": "4384af8e.a7409",
        "name": "wrong msg in lang",
        "active": true,
        "console": "true",
        "complete": "true",
        "x": 352.5234375,
        "y": 296.453125,
        "wires": []
    },
    {
        "id": "b351bd17.42cab",
        "type": "http in",
        "z": "93cb4937.6fc068",
        "name": "/status",
        "url": "/status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 626,
        "y": 154,
        "wires": [
            [
                "76d99e49.71e2f"
            ]
        ]
    },
    {
        "id": "811b950b.3ebf28",
        "type": "http in",
        "z": "93cb4937.6fc068",
        "name": "/botstatus",
        "url": "/botstatus",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 636,
        "y": 202,
        "wires": [
            [
                "381c113a.734ebe"
            ]
        ]
    },
    {
        "id": "381c113a.734ebe",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "test bot",
        "func": "const TelegramBot = context.global.telegrambotapi;\n// https://github.com/yagop/node-telegram-bot-api/blob/release/doc/api.md\n\nconst token = global.get('telegramBotToken');\n\nconst bot = new TelegramBot(token, {polling: false});\n\nif (!global.get('telegramBotToken')) {\n    node.status({fill:\"red\",shape:\"dot\", text: 'telegram bot missing token'});\n    msg.payload = JSON.stringify({status: 'missing token'});\n    msg.statusCode = 503;\n    node.send(msg);\n} else {\n    bot.getMe().then((result) => {\n        if (result.is_bot && global.get('internalApiToken') && global.get('ironPassword')) {\n            node.status({fill:\"green\",shape:\"dot\", text: 'telegram bot ok'});\n    \t    statusCode = 200;\n        } else {\n        \tnode.status({fill:\"red\",shape:\"dot\", text: 'telegram bot problems'});\n    \t    statusCode = 503;\n        }\n        const status = { \n            status: result\n        };\n        msg.payload = JSON.stringify(status);\n        msg.statusCode = statusCode;\n        node.send(msg);\n    });\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 805.5,
        "y": 201,
        "wires": [
            [
                "15b4f53.6c3070b"
            ]
        ]
    },
    {
        "id": "eb7f372e.175c58",
        "type": "subflow:b08bc794.82abc8",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1016.5,
        "y": 274,
        "wires": [
            [
                "e056eaaa.908568"
            ]
        ]
    },
    {
        "id": "63a0b98c.b6e0a8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "set bot status",
        "func": "const bot = context.global.telegramBot;\nvar newMsg = {\n    query : {\n        // day: day,\n        name: `bot-${bot}-db-status`\n    },\n    payload: {\n        $set: { value: new Date(), type: 'date', isPublic: false, description: 'Db status check of bot' }\n    }\n};\nnewMsg.collection = \"siteSettings\";\nflow.set('dbstatusOriginalMsg', msg);\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 275,
        "wires": [
            [
                "eb7f372e.175c58"
            ]
        ]
    },
    {
        "id": "e056eaaa.908568",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "db status",
        "func": "let status;\nif (typeof msg.error !== 'undefined') {\n\tstatus = {fill:\"red\",shape:\"dot\", text: 'db connection problem'};\n\tstatusCode = 503;\n} else {\t\n\tstatus = {fill:\"green\",shape:\"dot\", text: 'ok'};\n\tstatusCode = 200;\n}\nnode.status(status);\nconst omsg = flow.get('dbstatusOriginalMsg');\nomsg.payload = JSON.stringify(status);\nomsg.statusCode = statusCode;\nreturn omsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1182,
        "y": 274,
        "wires": [
            [
                "44450ce9.495a04"
            ]
        ]
    },
    {
        "id": "44450ce9.495a04",
        "type": "http response",
        "z": "93cb4937.6fc068",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1329,
        "y": 274,
        "wires": []
    },
    {
        "id": "b5b5aa3c.c6fdd8",
        "type": "http in",
        "z": "93cb4937.6fc068",
        "name": "/dbstatus",
        "url": "/dbstatus",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 636,
        "y": 274,
        "wires": [
            [
                "63a0b98c.b6e0a8"
            ]
        ]
    },
    {
        "id": "afff27db.87df78",
        "type": "http response",
        "z": "93cb4937.6fc068",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1346.0000381469727,
        "y": 120.00000381469727,
        "wires": []
    },
    {
        "id": "15b4f53.6c3070b",
        "type": "http response",
        "z": "93cb4937.6fc068",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 995,
        "y": 201,
        "wires": []
    },
    {
        "id": "86eb44d0.c874a8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "status",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570.7617416381836,
        "y": 879.0507659912109,
        "wires": [
            [
                "f4b50446.3e4cf8"
            ]
        ]
    },
    {
        "id": "acedcf90.16741",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "last check result",
        "func": "const result = {};\nresult.i18n = msg.i18n;\nresult.chatId = msg.chatId;\nif (msg.payload && msg.payload.length === 1) {\n    result.lastCheck = msg.payload[0].value;\n    return result;\n} else {\n    node.error('Error getting siteSettings last-check value');\n}\n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1242.51953125,
        "y": 903.2539672851562,
        "wires": [
            [
                "f99f7b1f.c91d68"
            ]
        ]
    },
    {
        "id": "d63c101f.3c342",
        "type": "subflow:3ca4f49b.662eec",
        "z": "93cb4937.6fc068",
        "x": 1088.4963073730469,
        "y": 903.4647359848022,
        "wires": [
            [
                "acedcf90.16741"
            ]
        ]
    },
    {
        "id": "f4b50446.3e4cf8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "last check?",
        "func": "const query = {};\nquery.payload = { name: 'last-fire-check' };\nquery.collection = 'siteSettings';\nquery.i18n = msg.i18n;\nquery.chatId = msg.payload.chatId;\nreturn query;",
        "outputs": 1,
        "noerr": 0,
        "x": 941.0000839233398,
        "y": 903.1285696029663,
        "wires": [
            [
                "d63c101f.3c342"
            ]
        ]
    },
    {
        "id": "2052a77f.3d07f8",
        "type": "http request",
        "z": "93cb4937.6fc068",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "x": 2179.0002822875977,
        "y": 869.0000381469727,
        "wires": [
            [
                "933dd7fe.916ab8"
            ]
        ]
    },
    {
        "id": "d99a4162.dce41",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "fires in zone",
        "func": "const query = {};\nquery.i18n = msg.i18n;\nquery.chatId = msg.chatId;\nquery.lastCheck = msg.lastCheck;\nquery.count = msg.count;\n\nconst internalApiToken = global.get('internalApiToken');\n\nif (msg.payload.length > 0) {\n    // subscribed\n    // const dist = msg.payload[0].distance;\n    const dist = 100;\n    const lng = parseFloat(msg.payload[0].location.lon).toFixed(5);\n    const lat = parseFloat(msg.payload[0].location.lat).toFixed(5);\n    query.url = `${global.get('website')}/api/v1/fires-in/${internalApiToken}/${lat}/${lng}/${dist}`;\n    query.dist = dist;\n    node.send([query, null]);\n} else {\n    node.send([null, msg]);\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 2002.500316619873,
        "y": 902.000039100647,
        "wires": [
            [
                "2052a77f.3d07f8"
            ],
            [
                "933dd7fe.916ab8"
            ]
        ],
        "outputLabels": [
            "subscribed",
            "not subscribed"
        ]
    },
    {
        "id": "55c9e2a9.96928c",
        "type": "subflow:3ca4f49b.662eec",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 1852.000316619873,
        "y": 902.000039100647,
        "wires": [
            [
                "d99a4162.dce41"
            ]
        ]
    },
    {
        "id": "652bf811.8cc3d8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "query sub",
        "func": "msg.collection = \"subscriptions\";\nmsg.count = msg.payload;\nmsg.payload = {\"chatId\": msg.chatId };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1714.649513244629,
        "y": 901.434075832367,
        "wires": [
            [
                "55c9e2a9.96928c"
            ]
        ]
    },
    {
        "id": "b6c6feb9.a8d5c",
        "type": "credentials",
        "z": "93cb4937.6fc068",
        "name": "other-credentials",
        "props": [
            {
                "value": "ironPassword",
                "type": "global"
            },
            {
                "value": "internalApiToken",
                "type": "global"
            },
            {
                "value": "telegramBotToken",
                "type": "global"
            }
        ],
        "x": 1340.5000381469727,
        "y": 163.00000381469727,
        "wires": [
            []
        ]
    },
    {
        "id": "842c120b.d935f",
        "type": "inject",
        "z": "93cb4937.6fc068",
        "name": "onInit",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 1169.0000381469727,
        "y": 162.00000190734863,
        "wires": [
            [
                "b6c6feb9.a8d5c"
            ]
        ]
    },
    {
        "id": "76d99e49.71e2f",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "last check?",
        "func": "const query = {};\nquery.payload = { name: 'last-fire-check' };\nquery.collection = 'siteSettings';\nquery.i18n = msg.i18n;\nquery.chatId = msg.payload.chatId;\nflow.set('statusOriginalMsg', msg);\nreturn query;",
        "outputs": 1,
        "noerr": 0,
        "x": 828,
        "y": 116,
        "wires": [
            [
                "134a27e8.418928"
            ]
        ]
    },
    {
        "id": "134a27e8.418928",
        "type": "subflow:3ca4f49b.662eec",
        "z": "93cb4937.6fc068",
        "x": 975.496223449707,
        "y": 116.33616638183594,
        "wires": [
            [
                "1c5808f8.7a1f07"
            ]
        ]
    },
    {
        "id": "1c5808f8.7a1f07",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "last check result",
        "func": "if (msg.payload && msg.payload.length === 1) {\n    const when = context.global.moment(msg.payload[0].value);\n    const last = context.global.moment(msg.payload[0].value);\n    const now = context.global.moment(new Date());\n    \n    const result = flow.get('statusOriginalMsg');\n    \n    context.global.moment.locale('es');\n    \n    let statusCode;\n    \n    const ago = now.diff(when, 'minutes');\n    const agos = now.diff(when, 'seconds');\n    \n    if (ago === 0 || last.add(30, 'minutes').isBefore(now)) {\n    \t// One hour with the semaphore! Releas...\n    \tnode.status({fill:\"red\",shape:\"dot\", text: 'not monitoring new fires'});\n    \tstatusCode = 503;\n    } else {\t\n    \tnode.status({fill:\"green\",shape:\"dot\", text: 'monitoring new fires'});\n    \tstatusCode = 200;\n    }\n    \n    const status = { \n        ago,\n        lastCheck: when.format('LLLL'),\n        now: now.format('LLLL'),\n        fromNow: when.fromNow()\n    };\n    result.payload = JSON.stringify(status);\n    result.statusCode = statusCode;\n   // msg.payload = agos;\n   return result;    \n} else {\n    node.error('Error getting siteSettings last-check value');\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1157.5193939208984,
        "y": 117.12540054321289,
        "wires": [
            [
                "afff27db.87df78"
            ]
        ]
    },
    {
        "id": "732fc8d5.ed8ec8",
        "type": "ui_chart",
        "z": "93cb4937.6fc068",
        "name": "notis to dash",
        "group": "601660c.cd104a",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Notificaciones",
        "chartType": "line",
        "legend": "false",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1222.0195770263672,
        "y": 1948.7539892196655,
        "wires": [
            [
                "9c443212.34b39"
            ],
            []
        ]
    },
    {
        "id": "277bcee3.964aa2",
        "type": "persist out",
        "z": "93cb4937.6fc068",
        "name": "notifications-in-time",
        "storageNode": "a733588b.3d2d68",
        "x": 1242.0195770263672,
        "y": 1988.7539892196655,
        "wires": [
            [
                "732fc8d5.ed8ec8"
            ]
        ]
    },
    {
        "id": "9c443212.34b39",
        "type": "persist in",
        "z": "93cb4937.6fc068",
        "name": "notifications-in-time",
        "storageNode": "a733588b.3d2d68",
        "x": 1422.0195770263672,
        "y": 1948.7539892196655,
        "wires": []
    },
    {
        "id": "c92ac6.bf322538",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "count notis",
        "func": "var newMsg = {\n    payload : {\n        name: \"sendnotis\"\n    },\n    projection: { \n        value: \n        1\n        \n    }\n};\nnewMsg.collection = \"fstats\";\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 571.01953125,
        "y": 1960.75390625,
        "wires": [
            [
                "53f31d1d.62d034"
            ]
        ]
    },
    {
        "id": "53f31d1d.62d034",
        "type": "subflow:3ca4f49b.662eec",
        "z": "93cb4937.6fc068",
        "name": "",
        "x": 771.0390625,
        "y": 1962.0078864097595,
        "wires": [
            [
                "84662490.a382d8"
            ]
        ]
    },
    {
        "id": "84662490.a382d8",
        "type": "function",
        "z": "93cb4937.6fc068",
        "name": "valuepay",
        "func": "const value = msg.payload[0].value;\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 912.5234375,
        "y": 1961.546875,
        "wires": [
            [
                "37f67d84.2f3ce2",
                "732fc8d5.ed8ec8"
            ]
        ]
    },
    {
        "id": "37f67d84.2f3ce2",
        "type": "ui_text",
        "z": "93cb4937.6fc068",
        "group": "601660c.cd104a",
        "order": 18,
        "width": 0,
        "height": 0,
        "name": "notif",
        "label": "Notificaciones totales",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1053.01953125,
        "y": 1967.75390625,
        "wires": []
    }
]